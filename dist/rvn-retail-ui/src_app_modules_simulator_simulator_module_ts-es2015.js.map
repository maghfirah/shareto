{"version":3,"file":"src_app_modules_simulator_simulator_module_ts-es2015.js","mappings":"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","sources":["./src/app/modules/simulator/order-receive/order-receive.component.ts","./src/app/modules/simulator/order-receive/order-receive.component.html","./src/app/modules/simulator/simulator.module.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {Router} from \"@angular/router\";\nimport {ConfigurationStoreLocation} from \"../../../shared/models/configuration-store-location.model\";\nimport {ApiErrorCode} from \"../../../shared/constant/api-error-code.constant\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport {ErrorCodeConstant} from \"../../../shared/constant/error-code.constant\";\nimport {ResponseApi} from \"../../../shared/models/response-api.model\";\n\n@Component({\n  selector: 'app-order-receive',\n  templateUrl: './order-receive.component.html',\n  styleUrls: ['./order-receive.component.css']\n})\nexport class OrderReceiveComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      private router: Router,\n  ) { }\n\n  //loading component\n  loading = true;\n\n  public receiveOrderForm: FormGroup;\n  responseApi = new ResponseApi();\n\n  async ngOnInit() {\n    await this.initLoad();\n  }\n\n  async initLoad(){\n    let configStore : ConfigurationStoreLocation = await this.getConfigurationStoreInfo();\n    this.form();\n  }\n\n  form() {\n    this.receiveOrderForm = this.formBuilder.group({\n      nomorPesanan: [null, [Validators.required]],\n    });\n  }\n\n  async getConfigurationStoreInfo() {\n    let apiInfoStore = environment.apiUrl + APIConstant.MERCHANT;\n    return this.requestService.get(apiInfoStore, null).toPromise().then(\n        (response) => {\n          this.loading = false;\n        }\n        ,\n        (error) => {\n          this.responseApi = error.error;\n          if(this.responseApi.error.code === ApiErrorCode.MERCHANT_NOT_FOUND){\n            this.loading = false;\n            this.router.navigate([NavigationConstant.ERROR_CUSTOM, ErrorCodeConstant.KYB]);\n          }\n          else{\n            this.errorService.getErrorApi(error);\n          }\n        }\n    )\n  }\n\n  submitReceiveOrder() {\n    if (this.receiveOrderForm.valid) {\n\n      let invoiceNumber = this.receiveOrderForm.get(\"nomorPesanan\").value;\n      let invoiceNumberPath = `/${invoiceNumber}/receive`;\n      let apiOrderReceive = environment.apiUrl + APIConstant.MERCHANT_ORDER + invoiceNumberPath;\n\n      Swal.fire({\n        title: 'Menerima Pesanan',\n        text: 'Apakah anda ingin merubah status pesanan anda menjadi telah diterima?',\n        showCancelButton: true,\n        cancelButtonText: 'BATAL',\n        cancelButtonColor: '#666666',\n        reverseButtons: true,\n        confirmButtonColor: '#E1251B',\n        confirmButtonText: 'DITERIMA',\n        showLoaderOnConfirm: true,\n        customClass: {\n          title: 'swal2-title-modal-medium'\n        },\n        preConfirm: async () => {\n          this.requestService.post(apiOrderReceive, null, null)\n              .subscribe((res) => {\n                    this.alertService.setProps(\"Success! Order Received\", false);\n                  },\n                  (error) => {\n                    this.errorService.getErrorApi(error);\n                  });\n        }\n      });\n    }\n  }\n\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n    <div class=\"card\">\n        <div class=\"card-body\">\n\n            <!--Header-->\n            <div class=\"row\">\n                <div class=\"form-group col-md-12 page-header\">\n                    <h3>Simulator Receive Order</h3>\n                    <p>Simulator untuk melakukan pesanan telah diterima</p>\n                </div>\n            </div>\n\n            <!-- Input -->\n            <form (ngSubmit)=\"submitReceiveOrder()\" [formGroup]=\"receiveOrderForm\" id=\"receiveOrderForm\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md-3 page-header\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span class=\"font-weight-bold\">Nomor Pesanan</span>\n                                <br>\n                                <input class=\"form-control dk-text-input mt-2\" id=\"nomorPesanan\" placeholder=\"INV-RETAIL-12345678901234567\" formControlName=\"nomorPesanan\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| -]*$\" >\n                                <div class=\"text-danger\" *ngIf=\"receiveOrderForm.get('nomorPesanan').hasError('pattern')\">*This field is not valid input text</div>\n                                <div class=\"text-danger\" *ngIf=\"receiveOrderForm.get('nomorPesanan').hasError('required') && (receiveOrderForm.get('nomorPesanan').dirty || receiveOrderForm.get('nomorPesanan').touched)\">*This field is cannot be left empty</div>\n                                <br>\n                                <div class=\"d-flex justify-content-end\">\n                                    <button class=\"btn btn-primary\" type=\"submit\" id=\"btnSubmitOrderReceive\" [disabled]=\"!receiveOrderForm.valid\">SUBMIT</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</ng-template>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrderReceiveComponent} from './order-receive/order-receive.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderReceiveComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [OrderReceiveComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n  ]\n})\nexport class SimulatorModule { }\n"],"names":[],"sourceRoot":"webpack:///"}