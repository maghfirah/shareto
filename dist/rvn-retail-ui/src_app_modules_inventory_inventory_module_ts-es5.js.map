{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACAA;;AACIA;;AACIA;;AACJA;;AACJA;;;;;;AAMIA;;AACIA;;AACJA;;;;;;AAwDwDA;;AACIA;;AACAA;;AAAGA;;AAAYA;;AACnBA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AADSA;;AAAAA;;;;;;AAMrBA;;AAA4MA;;AAAmCA;;;;;;AAOnOA;;AACIA;;AACAA;;AAAGA;;AAAYA;;AACnBA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AADSA;;AAAAA;;;;;;AAMrBA;;AAA4MA;;AAAmCA;;;;;;AAOnOA;;AACIA;;AACAA;;AAAGA;;AAAYA;;AACnBA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AADSA;;AAAAA;;;;;;AAMrBA;;AAA4MA;;AAAmCA;;;;;;AAc3PA;;AAA6JA;;AAAmCA;;;;;;AAChMA;;AAAgFA;;AAAmCA;;;;;;AAa/GA;;AAAyFA;;AAAmBA;;;;;;AAA7CA;;AAA0BA;;AAAAA;;;;;;AAE7FA;;AAAyKA;;AAAmCA;;;;;;AAmCxMA;;AAAkLA;;AAAmCA;;;;;;AACrNA;;AAAuFA;;AAAmCA;;;;;;;;AAU9HA;;AAAgIA;AAAAA;;AAAA;;AAAA;AAAA;;AAC5HA;;AAAmCA;;AACvCA;;;;;;;;AAEAA;;AAAwIA;AAAAA;;AAAA;;AAAA;AAAA;;AACpIA;;AAAoCA;;AACxCA;;;;;;AA4BoBA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAiBjHA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAC7GA;;AAAsEA;;AAAoBA;;;;;;AAW1FA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAW7GA;;AAAgKA;;AAAmCA;;;;;;AACnMA;;AAAiFA;;AAAmCA;;;;;;AAiBpHA;;AAA8IA;;AAAmCA;;;;;;AACjLA;;AAA2EA;;AAAmCA;;;;;;;;AAbtHA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAYA;;AAAIA;;AACxBA;;AAAQA;;AAA+EA;;AAC3FA;;AACAA;;AACIA;;AACIA;;AAA8JA;AAAAA;;AAAA;;AAAA,mBAAYC,6CAAZ;AAAiD,WAAjD;;AAA9JD;;AACAA;;AACIA;;AAAuDA;;AAAaA;;AACxEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACJA;;;;;;;;;AAR+EA;;AAAAA;;AAK7CA;;AAAAA;;AACAA;;AAAAA;;;;;;AAkBlBA;;AAA8IA;;AAAmCA;;;;;;AACjLA;;AAA2EA;;AAAmCA;;;;;;AAS9GA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAS7GA;;AAA8IA;;AAAmCA;;;;;;AACjLA;;AAA2EA;;AAAmCA;;;;;;;;AAnC9HA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAaA;;AAAIA;;AACzBA;;AAAQA;;AAAkEA;;AAC9EA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAA6IA;AAAAA;;AAAA;;AAAA,mBAAYE,4CAAZ;AAAgD,WAAhD;;AAA7IF;;AACAA;;AACIA;;AAA6DA;;AAAEA;;AACnEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA2IA;AAAAA;;AAAA;;AAAA,mBAAYG,4CAAZ;AAAgD,WAAhD;;AAA3IH;;AACAA;;AACIA;;AAA4DA;;AAAEA;;AAClEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA6IA;AAAAA;;AAAA;;AAAA,mBAAYI,4CAAZ;AAAgD,WAAhD;;AAA7IJ;;AACAA;;AACIA;;AAA6DA;;AAAEA;;AACnEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACJA;;AACJA;;AACJA;;;;;;;;;AA9BuFA;;AAAAA;;AAK7CA;;AAAAA;;AACAA;;AAAAA;;AAI4CA;;AAAAA;;AAK5CA;;AAAAA;;AACAA;;AAAAA;;AAI6CA;;AAAAA;;AAK7CA;;AAAAA;;AACAA;;AAAAA;;;;;;;;AA1HtDA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAA+BA;;AAAcA;;AAKjDA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAQA;;AAAuCA;;AACnDA;;AACAA;;AACIA;;AACIA;;AACAA;;AACAA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAYA;;AAAIA;;AACxBA;;AAAQA;;AAA8EA;;AAC1FA;;AACAA;;AACIA;;AACIA;;AACIA;;AAA2DA;;AAAEA;;AACjEA;;AACAA;;AAA+IA;AAAAA;;AAAA;;AAAA,mBAAYK,4CAAZ;AAAgD,WAAhD;;AAA/IL;;AACJA;;AACAA;;AACAA;;AACAA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAQA;;AAAiCA;;AAC7CA;;AACAA;;AACIA;;AAA2IA;AAAAA;;AAAA;;AAAA,mBAAYM,4CAAZ;AAAgD,WAAhD;;AAA3IN;;AACAA;;AACAA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAiBA;;AAAIA;;AAC7BA;;AAAQA;;AAAgCA;;AAC5CA;;AACAA;;AACIA;;AAAyJA;AAAAA;;AAAA;;AAAA,mBAAYO,4CAAZ;AAAgD,WAAhD;;AAAzJP;;AACAA;;AACAA;;AACJA;;AACJA;;AAGAA;;AAiBAA;;AAyCJA;;AACJA;;AACJA;;;;;;;;;AAlIsFA;;AAKnCA;;AAAAA;;AAeuCA;;AAAAA;;AACxCA;;AAAAA;;AACAA;;AAAAA;;AAewCA;;AAAAA;;AAE5CA;;AAAAA;;AACAA;;AAAAA;;AACAA;;AAAAA;;AAUwCA;;AAAAA;;AACxCA;;AAAAA;;AACAA;;AAAAA;;AAU+CA;;AAAAA;;AAC/CA;;AAAAA;;AACAA;;AAAAA;;AAKXA;;AAAAA;;AAiBAA;;AAAAA;;;;;;;;AApR/DA;;AACIA;;AACIA;;AACIA;;AAAIA;;AAAaA;;AACjBA;;AAAGA;;AAAuDA;;AAC9DA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAEIA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAOA;;AACHA;;AAGAA;;AACAA;;AACJA;;AAAiCA;;AACrCA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAiIA;AAAAA;;AAAA;;AAAA;AAAA;;AAAjIA;;AACAA;;AAAoDA;;AAAYA;;AACpEA;;AACAA;;AACIA;;AAA+HA;AAAAA;;AAAA;;AAAA;AAAA;;AAA/HA;;AACAA;;AAAmDA;;AAAcA;;AACrEA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AACIA;;AAEJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAIAA;;AAGJA;;AACAA;;AAA2FA;AAAAA;;AAAA;;AAAA,gDAA+B,sBAA/B;AAAqD,WAArD;;AAA3FA;;AACJA;;AACJA;;AACAA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAIAA;;AAGJA;;AACAA;;AAA4FA;AAAAA;;AAAA;;AAAA,gDAA+B,sBAA/B;AAAqD,WAArD;;AAA5FA;;AACJA;;AACJA;;AACAA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAIAA;;AAGJA;;AACAA;;AAA4FA;AAAAA;;AAAA;;AAAA,gDAA+B,sBAA/B;AAAqD,WAArD;;AAA5FA;;AACJA;;AACJA;;AACAA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAQA;;AAAiHA;;AAC7HA;;AACAA;;AACIA;;AACAA;;AACAA;;AACJA;;AACJA;;AAEAA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAQA;;AAAIA;;AACpBA;;AAAQA;;AAA8CA;;AAC1DA;;AACAA;;AACIA;;AACIA;;AACJA;;AACAA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAOA;;AAAIA;;AACnBA;;AAAQA;;AAAiCA;;AAC7CA;;AACAA;;AACIA;;AACIA;;AACIA;;AACAA;;AAAmDA;;AAAIA;;AAC3DA;;AACAA;;AACIA;;AACAA;;AAAoDA;;AAAKA;;AAC7DA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAgBA;;AAAIA;;AAC5BA;;AACIA;;AAGJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACAA;;AACAA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAkDA;;AAAmBA;;AACzEA;;AACAA;;AACIA;;AAIAA;;AAIJA;;AACJA;;AAGAA;;AACIA;;AAmIJA;;AAEAA;;AACIA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAQA;AAAAA;;AAAA;;AAAA,sCAAoB,MAApB;AAA0B,WAA1B;;AACJA;;AAAyCA;;AAC7CA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAKAA;;AACIA;;AAAQA;AAAAA;;AAAA;;AAAA,4CAA0B,MAA1B;AAAgC,WAAhC;;AAAiIA;;AAAMA;;AACnJA;;AACJA;;AAEJA;;AACJA;;AAEJA;;AACJA;;AACJA;;AAGJA;;AACJA;;AACJA;;;;;;AA1V0BA;;AAAAA;;AAM6DA;;AAAAA;;AAUoEA;;AAAAA;;AAIDA;;AAAAA;;AAqB5FA;;AAAAA;;AAIAA;;AAAAA;;AAOiDA;;AAAAA;;AAOjDA;;AAAAA;;AAIAA;;AAAAA;;AAOiDA;;AAAAA;;AAOjDA;;AAAAA;;AAIAA;;AAAAA;;AAOiDA;;AAAAA;;AAcrDA;;AAAAA;;AACAA;;AAAAA;;AAYfA;;AAAAA;;AACgCA;;AAAAA;;AAEjBA;;AAAAA;;AAYoBA;;AAAAA;;AAICA;;AAAAA;;AAmBjBA;;AAAAA;;AACAA;;AAAAA;;AAUyCA;;AAAAA;;AAIKA;;AAAAA;;AASvDA;;AAAAA;;AA2JwFA;;AAAAA;;;;;;AA7V7IA;;AAKAA;;;;;;AALeA;;AAKAA;;AAAAA;;;;UCINQ;AAEX,wCACqBC,WADrB,EAEYC,cAFZ,EAGWC,yBAHX,EAIYC,YAJZ,EAKYC,YALZ,EAMWC,iBANX,EAOYC,MAPZ,EAO0B;AAAA;;AANL;AACT;AACD;AACC;AACA;AACD;AACC,+BAAc,CAU1B;;AACA,yBAAU,IAAV;AAEA,sBAAO,IAAIC,2DAAJ,EAAP;AACA,qCAAsB,EAAtB;AAEA,0BAAoB,EAApB;AAQQ,uCAAwBC,4EAAqBC,uFAA7C;AACA,kCAAmBD,4EAAqBC,8EAAxC;AACR,kCAAmBC,iFAAnB;AAxBG;;;;iBAEH,oBAAQ;AACN,iBAAKC,QAAL,GAAgB,KAAhB;AACA,iBAAKC,QAAL;AACA,iBAAKC,IAAL;AACD;;;iBAoBK,oBAAQ;;;;;;;AACZ,6BAAM,KAAKC,sBAAL,EAAN;;;AACA,2BAAKC,IAAL,GAAY,KAAKd,cAAL,CAAoBe,YAApB,EAAZ;AACA,2BAAKC,OAAL,GAAe,KAAf;;;;;;;;;AACD;;;iBAED,gBAAI;AACF,iBAAKC,cAAL,GAAsB,KAAKlB,WAAL,CAAiBmB,KAAjB,CAAuB;AAC3CC,kBAAI,EAAE,CAAC,IAAD,EAAO,CAACC,gEAAD,EAAsBA,+DAAtB,CAAP,CADqC;AAE3CC,sBAAQ,EAAE,CAAC,IAAD,EAAO,CAACD,gEAAD,CAAP,CAFiC;AAG3CE,0BAAY,EAAE,CAAC,IAAD,EAAO,CAACF,gEAAD,CAAP,CAH6B;AAI3CG,yBAAW,EAAE,CAAC,IAAD,EAAO,CAACH,gEAAD,EAAsBA,+DAAtB,CAAP,CAJ8B;AAK3CI,oBAAM,EAAE,CAAC,IAAD,EAAO,CAACJ,gEAAD,CAAP,CALmC;AAM3CK,oBAAM,EAAE,CAAC,IAAD,CANmC;AAO3CC,oBAAM,EAAE,CAAC,IAAD,CAPmC;AAQ3CC,uBAAS,EAAE,CAAC,IAAD,EAAO,CAACP,gEAAD,CAAP,CARgC;AAS3CQ,sBAAQ,EAAE,KAAK7B,WAAL,CAAiB8B,KAAjB,CAAuB,CAAC,KAAKC,mBAAL,EAAD,CAAvB;AATiC,aAAvB,CAAtB;AAWD;;;iBAED,+BAAmB;AACjB,mBAAO,KAAK/B,WAAL,CAAiBmB,KAAjB,CAAuB;AAC5Ba,mBAAK,EAAE,CAAC,IAAD,EAAO,CAACX,gEAAD,EAAsBA,+DAAtB,CAAP,CADqB;AAE5BY,0BAAY,EAAE,CAAC,IAAD,EAAO,CAACZ,gEAAD,EAAsBA,+DAAtB,CAAP,CAFc;AAG5Ba,oBAAM,EAAE,CAAC,IAAD,EAAO,CAACb,gEAAD,EAAsBA,+DAAtB,CAAP,CAHoB;AAI5Bc,mBAAK,EAAE,CAAC,IAAD,EAAO,CAACd,gEAAD,EAAsBA,+DAAtB,CAAP,CAJqB;AAK5Be,oBAAM,EAAE,CAAC,IAAD,EAAO,CAACf,gEAAD,EAAsBA,+DAAtB,CAAP,CALoB;AAM5BgB,mBAAK,EAAE,CAAC,IAAD,EAAO,CAAChB,gEAAD,EAAsBA,+DAAtB,CAAP,CANqB;AAO5BiB,mBAAK,EAAE,CAAC,IAAD,EAAO,CAACjB,gEAAD,EAAsBA,+DAAtB,EAA0CA,4DAAe,KAAf,CAA1C,CAAP,CAPqB;AAQ5BkB,oBAAM,EAAE,CAAC,IAAD,EAAO,CAAClB,gEAAD,EAAsBA,+DAAtB,CAAP;AARoB,aAAvB,CAAP;AAUD;;;iBAED,kCAAsB;AAAA;;AACpB,iBAAKpB,cAAL,CAAoBuC,GAApB,CAAwB,KAAKC,qBAA7B,EAAmD,IAAnD,EAAyDC,SAAzD,CACI,UAACC,QAAD,EAAa;AACX,mBAAI,CAACC,mBAAL,GAA2BD,QAA3B;AACD,aAHL,EAKI,UAACE,KAAD,EAAU;AACR,mBAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,aAPL;AASD;;;iBAED,gCAAoB;AAAA;;AAChB,iBAAKhB,QAAL,CAAckB,QAAd,CAAuBC,OAAvB,CAA+B,UAACC,OAAD,EAAUC,KAAV,EAAmB;AAChD,kBAAG,MAAI,CAAChC,cAAL,CAAoBsB,GAApB,CAAwB,cAAxB,EAAwCW,KAAxC,KAAkD,IAArD,EAA0D;AACxDF,uBAAO,CAACG,UAAR,CAAmB;AAAC,2BAAQ;AAAT,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACD,eALD,MAKK;AACHH,uBAAO,CAACG,UAAR,CAAmB;AAAC,2BAAQ;AAAT,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACD;AACF,aAZD;AAaH;;;iBAEK,0BAAiBC,IAAjB,EAA6B;;;;;;;;;AACjC,0BAAI,KAAKnC,cAAL,CAAoBoC,KAAxB,EAA+B;AACzBC,mCADyB,GACX,IADW;AAG7BC,gFAAU;AACRC,+BAAK,EAAE,wBADC;AAERC,8BAAI,EAAE,8DAFE;AAGRC,0CAAgB,EAAE,IAHV;AAIRC,0CAAgB,EAAE,OAJV;AAKRC,2CAAiB,EAAE,SALX;AAMRC,wCAAc,EAAE,IANR;AAORC,4CAAkB,EAAE,SAPZ;AAQRC,2CAAiB,EAAE,WARX;AASRC,6CAAmB,EAAE,IATb;AAURC,qCAAW,EAAE;AACXT,iCAAK,EAAE;AADI,2BAVL;AAaRU,oCAAU,EAAE;AAAA,mCAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,6CAAM,KAAKlE,cAAL,CAAoBmE,IAApB,CAAyB,KAAKC,gBAA9B,EAAgD,IAAhD,EAAsD,KAAKnE,yBAAL,CAA+BoE,gBAA/B,CAAgD,KAAKpD,cAAL,CAAoBiC,KAApE,CAAtD,EACDoB,SADC,GACWC,IADX,CACgB,UAAO7B,QAAP;AAAA,+CAAoB;AAAA;AAAA;AAAA;AAAA;AAChCY,6DAAW,GAAGZ,QAAQ,CAAC8B,OAAT,CAAiBC,MAAjB,CAAwBC,IAAtC;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAApB;AAAA,uCADhB,EAIE,UAAC9B,KAAD,EAAU;AACR,8CAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,uCANH,CAAN;;AADsB;AAAA;AAUtB,6CAAM,KAAK+B,kBAAL,CAAwBrB,WAAxB,EAAqC,KAAKsB,cAA1C,EAAyD,GAAzD,CAAN;;AAVsB;AAAA,4CAalB,KAAKC,cAAL,KAAwB,IAAxB,IAAgC,KAAKA,cAAL,KAAwBC,SAbtC;AAAA;AAAA;AAAA;;AAAA;AAcpB,6CAAM,KAAKH,kBAAL,CAAwBrB,WAAxB,EAAqC,KAAKuB,cAA1C,EAAyD,GAAzD,CAAN;;AAdoB;AAAA,4CAkBlB,KAAKE,cAAL,KAAwB,IAAxB,IAAgC,KAAKA,cAAL,KAAwBD,SAlBtC;AAAA;AAAA;AAAA;;AAAA;AAmBpB,6CAAM,KAAKH,kBAAL,CAAwBrB,WAAxB,EAAqC,KAAKyB,cAA1C,EAAyD,GAAzD,CAAN;;AAnBoB;AAsBtB,2CAAKC,UAAL,CAAgB5B,IAAhB;AACA,2CAAKlD,YAAL,CAAkB+E,QAAlB,CAA2B,sBAA3B,EAAmD,KAAnD;;AAvBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;AAAA;AAbJ,yBAAV;AAuCD;;;;;;;;;AACF;;;iBAEK,4BAAmB3B,WAAnB,EAAwC4B,IAAxC,EAAoDjC,KAApD,EAAiE;;;;;;;;wDAC9D,KAAKjD,cAAL,CAAoBmF,gBAApB,CAAqC,OAArC,EAA6C,KAAKf,gBAAL,GAAwB,GAAxB,GAA8Bd,WAA9B,GAA4C9C,qFAAzF,EAAqH0E,IAArH,EAA0HjC,KAA1H,EACFqB,SADE,GACUC,IADV,CACe,UAACa,GAAD,EAAQ,CAErB,CAHF,EAIC,UAACxC,KAAD,EAAU;AACR,8BAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,uBANF;;;;;;;;;AAOR;;;iBAED,oBAAWlC,QAAX,EAA0B;AACxB,iBAAKL,MAAL,CAAYgF,QAAZ,CAAqB,CAACC,6GAAD,CAArB;AACA,iBAAK5E,QAAL,GAAgBA,QAAhB;AACD;;;iBAED,sBAAa6E,SAAb,EAA6BpE,IAA7B,EAAwC;AACtC,iBAAKqE,QAAL,GAAsBD,SAAS,CAACE,MAAV,CAAiBC,KAAjB,CAAuB,CAAvB,CAAtB;;AACA,gBAAG,KAAKF,QAAL,KAAkBV,SAArB,EAA+B;AAC7B,mBAAKa,OAAL,CAAaxE,IAAb;AACD;AACF;;;iBAED,iBAAQA,IAAR,EAAmB;AAAA;;;;AACjB,gBAAIyE,QAAQ,GAAG,WAAKJ,QAAL,MAAa,IAAb,IAAaK,aAAb,GAAa,MAAb,GAAaA,GAAEC,IAA9B;AAEA,gBAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACE,aAAP,CAAqB,KAAKT,QAA1B;;AAEAO,kBAAM,CAACG,MAAP,GAAgB,UAACC,MAAD,EAAW;AAEzB,kBAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,iBAAG,CAACE,GAAJ,GAAUP,MAAM,CAACQ,MAAjB;;AACAH,iBAAG,CAACF,MAAJ,GAAa,YAAK;AAChB,oBAAM/D,MAAM,GAAGiE,GAAG,CAACI,aAAnB;AACA,oBAAMtE,KAAK,GAAGkE,GAAG,CAACK,YAAlB;;AACE,oBAAGtF,IAAI,KAAK,sBAAZ,EAAmC;AACjC,sBAAIyE,QAAQ,CAACc,KAAT,CAAe,SAAf,MAA8B,IAAlC,EAAwC;AACtC,0BAAI,CAACzF,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,oBAA3B,EAAiD,IAAjD;AACD,mBAHD,MAIK,IAAG,MAAI,CAACO,QAAL,CAAcmB,IAAd,GAAqB,OAAxB,EAAgC;AACnC,0BAAI,CAAC1F,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,qBAA3B,EAAkD,IAAlD;AACD,mBAHI,MAIA,IAAG9C,MAAM,GAAG,GAAT,IAAgBD,KAAK,GAAG,GAA3B,EAA+B;AAClC,0BAAI,CAACjB,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,sCAA3B,EAAmE,IAAnE;AACD,mBAHI,MAID;AACF,0BAAI,CAAC2B,oBAAL,GAA4Bb,MAAM,CAACQ,MAAnC;AACA,0BAAI,CAAC3B,cAAL,GAAsB,MAAI,CAACY,QAA3B;AACD;AACF,iBAjBD,MAkBK,IAAGrE,IAAI,KAAK,sBAAZ,EAAmC;AACtC,sBAAIyE,QAAQ,CAACc,KAAT,CAAe,SAAf,MAA8B,IAAlC,EAAwC;AACtC,0BAAI,CAACzF,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,oBAA3B,EAAiD,IAAjD;AACD,mBAHD,MAIK,IAAG,MAAI,CAACO,QAAL,CAAcmB,IAAd,GAAqB,OAAxB,EAAgC;AACnC,0BAAI,CAAC1F,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,qBAA3B,EAAkD,IAAlD;AACD,mBAHI,MAIA,IAAG9C,MAAM,GAAG,GAAT,IAAgBD,KAAK,GAAG,GAA3B,EAA+B;AAClC,0BAAI,CAACjB,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,sCAA3B,EAAmE,IAAnE;AACD,mBAHI,MAIA;AACH,0BAAI,CAAC4B,oBAAL,GAA4Bd,MAAM,CAACQ,MAAnC;AACA,0BAAI,CAAC1B,cAAL,GAAsB,MAAI,CAACW,QAA3B;AACD;AACF,iBAjBI,MAkBA,IAAGrE,IAAI,KAAK,sBAAZ,EAAmC;AACtC,sBAAIyE,QAAQ,CAACc,KAAT,CAAe,SAAf,MAA8B,IAAlC,EAAwC;AACtC,0BAAI,CAACzF,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,oBAA3B,EAAiD,IAAjD;AACD,mBAHD,MAIK,IAAG,MAAI,CAACO,QAAL,CAAcmB,IAAd,GAAqB,OAAxB,EAAgC;AACnC,0BAAI,CAAC1F,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,qBAA3B,EAAkD,IAAlD;AACD,mBAHI,MAIA,IAAG9C,MAAM,GAAG,GAAT,IAAgBD,KAAK,GAAG,GAA3B,EAA+B;AAClC,0BAAI,CAACjB,cAAL,CAAoBkC,UAApB,CAAgC;AAAC,gCAAS;AAAV,qBAAhC;;AACA,0BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,sCAA3B,EAAmE,IAAnE;AACD,mBAHI,MAIA;AACH,0BAAI,CAAC6B,oBAAL,GAA4Bf,MAAM,CAACQ,MAAnC;AACA,0BAAI,CAACxB,cAAL,GAAsB,MAAI,CAACS,QAA3B;AACD;AACF;AACJ,eAzDD;AA2DD,aA/DD;AAgED;;;eAED,eAAY;AACV,mBAAO,KAAKvE,cAAL,CAAoBsB,GAApB,CAAwB,UAAxB,CAAP;AACD;;;iBAED,yBAAa;AACX,gBAAIwE,aAAa,GAAG,KAAKnF,QAAL,CAAcK,MAAlC;;AACA,gBAAG8E,aAAa,GAAG,CAAnB,EAAsB;AACpB,mBAAKnF,QAAL,CAAcoF,IAAd,CAAmB,KAAKlF,mBAAL,EAAnB;AACA,mBAAKmF,oBAAL;AACD;AACF;;;iBAED,yBAAa;AACX,gBAAIhE,KAAK,GAAG,KAAKrB,QAAL,CAAcK,MAAd,GAAuB,CAAnC;AACA,iBAAKL,QAAL,CAAcsF,QAAd,CAAuBjE,KAAvB;AACD;;;;;;;yBA7PUnD,wBAAqBR;AAAA;;;cAArBQ;AAAqBqH;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADnBlCjI;;AAOAA;;;;;;AAPMA,2FAAc,UAAd,EAAckI,GAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEANC;;AACIA;;AACIA;;AACJA;;AACJA;;;;;;AAMIA;;AACIA;;AACJA;;;;;;AAWIA;;AACIA;;AACIA;;AACIA;;AACAA;;AACIA;;AAAQA;;AAA+BA;;AACvCA;;AACAA;;AAAMA;;AAAqGA;;AAC/GA;;AACJA;;AACJA;;AACJA;;;;;;AAEAA;;AACIA;;AACIA;;AACIA;;AACAA;;AACIA;;AAAQA;;AAAkCA;;AAC1CA;;AACAA;;AAAMA;;AAAqDA;;AAC/DA;;AACJA;;AACJA;;AACJA;;;;;;AAJsBA;;AAAAA;;;;;;;;AAMtBA;;AACIA;;AACIA;;AACIA;;AACAA;;AACIA;;AAAQA;;AAAiDA;;AACzDA;;AACAA;;AAAMA;AAAAA;;AAAA;;AAAA;AAAA;;AAA+EA;;AAAkBA;;AAAwCA;;AACnJA;;AACJA;;AACJA;;AACJA;;;;;;AAEAA;;AACIA;;AACIA;;AACIA;;AACAA;;AACIA;;AAAQA;;AAA6BA;;AACrCA;;AACAA;;AAAMA;;AAA4DA;;AACtEA;;AACJA;;AACJA;;AACJA;;;;;;AA+CwDA;;AACIA;;AACAA;;AAAGA;;AAAYA;;AACnBA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AADSA;;AAAAA;;;;;;AAMrBA;;AAA0KA;;AAAmCA;;;;;;AAMjMA;;AACIA;;AACAA;;AAAGA;;AAAYA;;AACnBA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AADSA;;AAAAA;;;;;;AAWTA;;AACIA;;AACAA;;AAAGA;;AAAYA;;AACnBA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AADSA;;AAAAA;;;;;;AAoBrCA;;AAAgKA;;AAAmCA;;;;;;AACnMA;;AAAiFA;;AAAmCA;;;;;;AACpHA;;AAAmFA;;AAAsBA;;;;;;AAarGA;;AAAyFA;;AAAmBA;;;;;;AAA7CA;;AAA0BA;;AAAAA;;;;;;AAE7FA;;AAA4KA;;AAAmCA;;;;;;AAmC3MA;;AAAqLA;;AAAmCA;;;;;;AACxNA;;AAAwFA;;AAAmCA;;;;;;;;AAmB/GA;;AACIA;;AAAyGA;AAAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA,2CAA0BC,gBAAY,MAAZ,EAAmBxE,KAA7C,EAAqD,gBAAayE,KAAlE;AAAkE,WAAlE;;AAAzGF;;AACAA;;AAAmCA;;AAAKA;;AAC5CA;;;;;;;;;AAFWA;;AAAAA;;AAA0DA;;AAC1DA;;AAAAA;;;;;;AAaPA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAiBjHA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAC7GA;;AAAsEA;;AAAoBA;;;;;;AAW1FA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAW7GA;;AAAgKA;;AAAmCA;;;;;;AACnMA;;AAAiFA;;AAAmCA;;;;;;AAiBpHA;;AAA8IA;;AAAmCA;;;;;;AACjLA;;AAA2EA;;AAAmCA;;;;;;;;AAbtHA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAYA;;AAAIA;;AACxBA;;AAAQA;;AAA+EA;;AAC3FA;;AACAA;;AACIA;;AACIA;;AAA8JA;AAAAA;;AAAA;;AAAA,mBAAYG,6CAAZ;AAAiD,WAAjD;;AAA9JH;;AACAA;;AACIA;;AAAuDA;;AAAaA;;AACxEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACJA;;;;;;;;;AAR+EA;;AAAAA;;AAK7CA;;AAAAA;;AACAA;;AAAAA;;;;;;AAkBlBA;;AAA8IA;;AAAmCA;;;;;;AACjLA;;AAA2EA;;AAAmCA;;;;;;AAS9GA;;AAA2IA;;AAAmCA;;;;;;AAC9KA;;AAA0EA;;AAAmCA;;;;;;AAS7GA;;AAA8IA;;AAAmCA;;;;;;AACjLA;;AAA2EA;;AAAmCA;;;;;;;;AAnC9HA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAaA;;AAAIA;;AACzBA;;AAAQA;;AAAkEA;;AAC9EA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAA6IA;AAAAA;;AAAA;;AAAA,mBAAYI,4CAAZ;AAAgD,WAAhD;;AAA7IJ;;AACAA;;AACIA;;AAA6DA;;AAAEA;;AACnEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA2IA;AAAAA;;AAAA;;AAAA,mBAAYK,4CAAZ;AAAgD,WAAhD;;AAA3IL;;AACAA;;AACIA;;AAA4DA;;AAAEA;;AAClEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA6IA;AAAAA;;AAAA;;AAAA,mBAAY7H,4CAAZ;AAAgD,WAAhD;;AAA7I6H;;AACAA;;AACIA;;AAA6DA;;AAAEA;;AACnEA;;AACJA;;AACAA;;AACAA;;AACJA;;AACJA;;AACJA;;AACJA;;;;;;;;;AA9BuFA;;AAAAA;;AAK7CA;;AAAAA;;AACAA;;AAAAA;;AAI4CA;;AAAAA;;AAK5CA;;AAAAA;;AACAA;;AAAAA;;AAI6CA;;AAAAA;;AAK7CA;;AAAAA;;AACAA;;AAAAA;;;;;;;;AA1HtDA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAA+BA;;AAAcA;;AAC7CA;;AAIJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAQA;;AAAuCA;;AACnDA;;AACAA;;AACIA;;AACIA;;AACAA;;AACAA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAYA;;AAAIA;;AACxBA;;AAAQA;;AAA8EA;;AAC1FA;;AACAA;;AACIA;;AACIA;;AACIA;;AAA2DA;;AAAEA;;AACjEA;;AACAA;;AAA+IA;AAAAA;;AAAA;;AAAA,mBAAYM,4CAAZ;AAAgD,WAAhD;;AAA/IN;;AACJA;;AACAA;;AACAA;;AACAA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAQA;;AAAiCA;;AAC7CA;;AACAA;;AACIA;;AAA2IA;AAAAA;;AAAA;;AAAA,mBAAYO,4CAAZ;AAAgD,WAAhD;;AAA3IP;;AACAA;;AACAA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAiBA;;AAAIA;;AAC7BA;;AAAQA;;AAAgCA;;AAC5CA;;AACAA;;AACIA;;AAAyJA;AAAAA;;AAAA;;AAAA,mBAAYQ,4CAAZ;AAAgD,WAAhD;;AAAzJR;;AACAA;;AACAA;;AACJA;;AACJA;;AAGAA;;AAiBAA;;AAyCJA;;AACJA;;AACJA;;;;;;;;;AAlIuFA;;AAKpCA;;AAAAA;;AACzBA;;AAAAA;;AAcgEA;;AAAAA;;AACxCA;;AAAAA;;AACAA;;AAAAA;;AAewCA;;AAAAA;;AAE5CA;;AAAAA;;AACAA;;AAAAA;;AACAA;;AAAAA;;AAUwCA;;AAAAA;;AACxCA;;AAAAA;;AACAA;;AAAAA;;AAU+CA;;AAAAA;;AAC/CA;;AAAAA;;AACAA;;AAAAA;;AAKXA;;AAAAA;;AAiBAA;;AAAAA;;;;;;;;AA5T/DA;;AACIA;;AACIA;;AACIA;;AAAIA;;AAAaA;;AACjBA;;AAAGA;;AAAuDA;;AAC9DA;;AACJA;;AAEAA;;AAaAA;;AAaAA;;AAaAA;;AAaAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAMA;AAAAA;;AAAA;;AAAA;AAAA;;AACFA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAOA;;AACHA;;AAGAA;;AACAA;;AACAA;;AAAiCA;;AACzCA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAiIA;AAAAA;;AAAA;;AAAA;AAAA;;AAAjIA;;AACAA;;AAAoDA;;AAAYA;;AACpEA;;AACAA;;AACIA;;AAA+HA;AAAAA;;AAAA;;AAAA;AAAA;;AAA/HA;;AACAA;;AAAmDA;;AAAcA;;AACrEA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AACIA;;AAEJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAEQA;;AACIA;;AACIA;;AACIA;;AACIA;;AAIAA;;AAGJA;;AACAA;;AAA4FA;AAAAA;;AAAA;;AAAA,gDAA+B,sBAA/B;AAAqD,WAArD;;AAA5FA;;AACJA;;AACJA;;AACAA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAIAA;;AAGJA;;AACAA;;AAA4FA;AAAAA;;AAAA;;AAAA,gDAA+B,sBAA/B;AAAqD,WAArD;;AAA5FA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAIAA;;AAGJA;;AACAA;;AAA4FA;AAAAA;;AAAA;;AAAA,gDAA+B,sBAA/B;AAAqD,WAArD;;AAA5FA;;AACJA;;AACJA;;AACJA;;AAERA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAWA;;AAAIA;;AACvBA;;AAAQA;;AAAiHA;;AAC7HA;;AACAA;;AACIA;;AACAA;;AACAA;;AACAA;;AACJA;;AACJA;;AAEAA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAQA;;AAAIA;;AACpBA;;AAAQA;;AAA8CA;;AAC1DA;;AACAA;;AACIA;;AACIA;;AACJA;;AACAA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAOA;;AAAIA;;AACnBA;;AAAQA;;AAAiCA;;AAC7CA;;AACAA;;AACIA;;AACIA;;AACIA;;AACAA;;AAAmDA;;AAAIA;;AAC3DA;;AACAA;;AACIA;;AACAA;;AAAoDA;;AAAKA;;AAC7DA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAKA;;AAAGA;;AAAgBA;;AAAIA;;AAC5BA;;AACIA;;AAGJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACAA;;AACAA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAkDA;;AAAmBA;;AACzEA;;AACJA;;AAGAA;;AACIA;;AAmIJA;;AAEAA;;AACIA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAQA;AAAAA;;AAAA;;AAAA,sCAAoB,MAApB;AAA0B,WAA1B;;AACJA;;AAAyCA;;AAC7CA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAKAA;;AACIA;;AAAuGA;;AAAMA;;AACjHA;;AACJA;;AAEJA;;AACJA;;AAEJA;;AACJA;;AACJA;;AAGJA;;AACJA;;AACJA;;;;;;AAtY8FA;;AAAAA;;AAaFA;;AAAAA;;AAaEA;;AAAAA;;AAaNA;;AAAAA;;AAiB7BA;;AAAAA;;AAK4BA;;AAAAA;;AAUoEA;;AAAAA;;AAIDA;;AAAAA;;AAsBxFA;;AAAAA;;AAIAA;;AAAAA;;AAOYA;;AAAAA;;AAMZA;;AAAAA;;AAIAA;;AAAAA;;AAYAA;;AAAAA;;AAIAA;;AAAAA;;AAqBRA;;AAAAA;;AACAA;;AAAAA;;AACAA;;AAAAA;;AAYfA;;AAAAA;;AACgCA;;AAAAA;;AAEjBA;;AAAAA;;AAYoBA;;AAAAA;;AAICA;;AAAAA;;AAmBjBA;;AAAAA;;AACAA;;AAAAA;;AAaTA;;AAAAA;;AA2JqDA;;AAAAA;;;;;;AArY1GA;;AAKAA;;;;;;AALeA;;AAKAA;;AAAAA;;;;UCONS;AAEX,yCACqBnI,WADrB,EAEYC,cAFZ,EAGWC,yBAHX,EAIYC,YAJZ,EAKYC,YALZ,EAMWC,iBANX,EAOY+H,YAPZ,EAQY9H,MARZ,EAQ0B;AAAA;;AAPL;AACT;AACD;AACC;AACA;AACD;AACC;AACA,+BAAc,CAS1B;;AACA,yBAAU,IAAV;AAWA,sBAAO,IAAIC,2DAAJ,EAAP;AACA,qCAAsB,EAAtB;AAEA,iCAAkB8H,yEAAlB;AACA,qCAAsB,EAAtB;AACA,mCAAoB,EAApB;AACA,0BAAoB,EAApB;AAEQ,uCAAwBA,4EAAqBC,uFAA7C;AACA,mCAAoBD,4EAAqBC,oFAAzC;AACA,4BAAaD,4EAAqBC,8EAAlC;AACR,+BAA0B,IAAIC,iEAAJ,EAA1B;AACA,kCAAmBC,iFAAnB;AACA,+BAAgBC,2EAAhB;AAEA,sCAAuB,kBAAvB;AACA,qCAAqB,2BAArB;AACA,kDAAkC,UAAlC;AACA,8CAA8B,yBAA9B;AArCG;;;;iBAEH,oBAAQ;AACN,iBAAK9H,QAAL,GAAgB,MAAhB;AACA,iBAAKC,QAAL;AACD;;;iBAqCK,oBAAQ;;;;;;;;AACY,6BAAM,KAAK8H,gBAAL,EAAN;;;AAApBjE;;AACJ,6BAAM,KAAK3D,sBAAL,EAAN;;;AACA,2BAAKD,IAAL,CAAU4D,OAAV;AACA,2BAAK1D,IAAL,GAAY,KAAKd,cAAL,CAAoBe,YAApB,EAAZ;;AAC2B,6BAAM,KAAK2H,eAAL,EAAN;;;AAA3B,2BAAKC;AACL,2BAAKC,iBAAL,GAAyB,KAAKC,eAAL,GAAuB,GAAvB,GAA6BC,mGAA7B,GAAiE,GAAjE,GAAuEA,qGAAvE,GAA6G,GAA7G,GAAmH,KAAKH,mBAAxH,GAA8I,GAA9I,GAAoJ,KAAKI,aAAL,CAAmBC,IAAhM;;;;;;;;;AACD;;;iBAED,cAAKxE,OAAL,EAAoB;AAAA;;AAClB,iBAAKyE,eAAL,GAAuB,KAAKlJ,WAAL,CAAiBmB,KAAjB,CAAuB;AAC5CC,kBAAI,EAAE,CAACqD,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAErD,IAAV,EAAgB,CAAC+H,gEAAD,EAAsBA,+DAAtB,CAAhB,CADsC;AAE5C7H,sBAAQ,EAAE,CAACmD,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEnD,QAAV,EAAoB,CAAC6H,gEAAD,CAApB,CAFkC;AAG5C5H,0BAAY,EAAE,CAACkD,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE5C,QAAT,CAAkB,CAAlB,EAAqBN,YAAtB,EAAoC,CAAC4H,gEAAD,CAApC,CAH8B;AAI5C3H,yBAAW,EAAE,CAACiD,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEjD,WAAV,EAAuB,CAAC2H,gEAAD,EAAsBA,+DAAtB,CAAvB,CAJ+B;AAK5CF,kBAAI,EAAE,CAACxE,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEwE,IAAV,EAAgB,CAACE,gEAAD,EAAsBA,+DAAtB,CAAhB,CALsC;AAM5C1H,oBAAM,EAAE,CAAC,IAAD,CANoC;AAO5C2H,kBAAI,EAAE,CAAC,KAAK7F,WAAN,CAPsC;AAQ5C3B,uBAAS,EAAE,CAAC6C,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE7C,SAAV,EAAqB,CAACuH,gEAAD,CAArB,CARiC;AAS5CtH,sBAAQ,EAAE,KAAK7B,WAAL,CAAiB8B,KAAjB,CAAuB2C,OAAO,CAAC5C,QAAR,CAAiBwH,GAAjB,CAAqB,iBAAO;AAAA,uBAAI,MAAI,CAACtH,mBAAL,CAAyBuH,OAAzB,CAAJ;AAAA,eAA5B,CAAvB;AATkC,aAAvB,CAAvB;AAWD;;;iBAED,6BAAoBA,OAApB,EAAoC;AAClC,mBAAO,KAAKtJ,WAAL,CAAiBmB,KAAjB,CAAuB;AAC5BiI,kBAAI,EAAE,CAACE,OAAO,CAACF,IAAT,EAAe,CAACD,gEAAD,CAAf,CADsB;AAE5BI,oBAAM,EAAC,CAACD,OAAO,CAACC,MAAT,CAFqB;AAG5BvH,mBAAK,EAAE,CAACsH,OAAO,CAACtH,KAAT,EAAgB,CAACmH,gEAAD,EAAsBA,+DAAtB,CAAhB,CAHqB;AAI5BlH,0BAAY,EAAE,CAACqH,OAAO,CAACrH,YAAT,EAAuB,CAACkH,gEAAD,EAAsBA,+DAAtB,CAAvB,CAJc;AAK5BjH,oBAAM,EAAE,CAACoH,OAAO,CAACpH,MAAT,EAAiB,CAACiH,gEAAD,EAAsBA,+DAAtB,CAAjB,CALoB;AAM5BhH,mBAAK,EAAE,CAACmH,OAAO,CAACnH,KAAT,EAAgB,CAACgH,gEAAD,EAAsBA,+DAAtB,CAAhB,CANqB;AAO5B/G,oBAAM,EAAE,CAACkH,OAAO,CAAClH,MAAT,EAAiB,CAAC+G,gEAAD,EAAsBA,+DAAtB,CAAjB,CAPoB;AAQ5B9G,mBAAK,EAAE,CAACiH,OAAO,CAACjH,KAAT,EAAgB,CAAC8G,gEAAD,EAAsBA,+DAAtB,CAAhB,CARqB;AAS5B7G,mBAAK,EAAE,CAACgH,OAAO,CAAChH,KAAT,EAAgB,CAAC6G,gEAAD,EAAsBA,+DAAtB,EAA0CA,4DAAe,KAAf,CAA1C,CAAhB,CATqB;AAU5B5G,oBAAM,EAAE,CAAC+G,OAAO,CAAC/G,MAAT,EAAiB,CAAC4G,gEAAD,EAAsBA,+DAAtB,CAAjB;AAVoB,aAAvB,CAAP;AAYD;;;iBAED,kCAAsB;AAAA;;AACpB,iBAAKlJ,cAAL,CAAoBuC,GAApB,CAAwB,KAAKC,qBAA7B,EAAmD,IAAnD,EAAyDC,SAAzD,CACI,UAACC,QAAD,EAAa;AACX,oBAAI,CAACC,mBAAL,GAA2BD,QAA3B;AACA,oBAAI,CAAC1B,OAAL,GAAe,KAAf;AACD,aAJL,EAMI,UAAC4B,KAAD,EAAU;AACR,oBAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,aARL;AAUD;;;iBAEK,4BAAgB;;;;;;;;;AAChB2G,yCAAmB,KAAKC,UAAL,GAAkB,GAAlB,GAAwB,KAAKlG,WAA7B,GAA2C+E;wDAE3D,KAAKrI,cAAL,CAAoBuC,GAApB,CAAwBgH,gBAAxB,EAAyC,IAAzC,EAA+CjF,SAA/C,GAA2DC,IAA3D,CACH,UAAC7B,QAAD,EAAa;;;AACX,8BAAI,CAACqG,aAAL,GAAqB,MAAI,CAAC9I,yBAAL,CAA+BwJ,gBAA/B,CAAgD/G,QAAhD,CAArB;AACA,8BAAI,CAACqG,aAAL,CAAmBC,IAAnB,GAA0BU,SAAS,CAAC,MAAI,CAACX,aAAL,CAAmBC,IAApB,CAAnC;AACA,8BAAI,CAACpC,oBAAL,GAA4B,YAAI,CAACmC,aAAL,CAAmBY,MAAnB,CAA0B,CAA1B,OAA4B,IAA5B,IAA4B9D,aAA5B,GAA4B,MAA5B,GAA4BA,GAAE+D,GAA1D;AACA,8BAAI,CAAC/C,oBAAL,GAA4B,YAAI,CAACkC,aAAL,CAAmBY,MAAnB,CAA0B,CAA1B,OAA4B,IAA5B,IAA4BE,aAA5B,GAA4B,MAA5B,GAA4BA,GAAED,GAA1D;AACA,8BAAI,CAAC9C,oBAAL,GAA4B,YAAI,CAACiC,aAAL,CAAmBY,MAAnB,CAA0B,CAA1B,OAA4B,IAA5B,IAA4BG,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEF,GAA1D;AACA,+BAAO,MAAI,CAACb,aAAZ;AACD,uBARE,EAUH,UAACnG,KAAD,EAAU;AACR,8BAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,uBAZE;;;;;;;;;AAcR;;;iBAED,2BAAe;AAAA;;AACb,mBAAO,KAAK5C,cAAL,CAAoBuC,GAApB,CAAwB,KAAKwH,iBAA7B,EAA+C,IAA/C,EAAqDzF,SAArD,GAAiEC,IAAjE,CACH,UAAC7B,QAAD,EAAa;AACX,qBAAOA,QAAQ,CAACsH,QAAT,CAAkBhB,IAAzB;AACD,aAHE,EAKH,UAACpG,KAAD,EAAU;AACR,qBAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,aAPE,CAAP;AASD;;;iBAED,6BAAiB;AAAA;;AACf,gBAAI,KAAKqG,eAAL,CAAqB5F,KAAzB,EAAgC;AAC9B,kBAAI4G,WAAW,GAAGC,SAAS,CAAC,KAAKjB,eAAL,CAAqB1G,GAArB,CAAyB,MAAzB,EAAiCW,KAAlC,CAA3B;AACA,mBAAK+F,eAAL,CAAqB9F,UAArB,CAAgC;AAAC,wBAAO8G;AAAR,eAAhC;AAEAE,sEAAU;AACR3G,qBAAK,EAAE,cADC;AAERC,oBAAI,EAAE,oEAFE;AAGRC,gCAAgB,EAAE,IAHV;AAIRC,gCAAgB,EAAE,OAJV;AAKRC,iCAAiB,EAAE,SALX;AAMRC,8BAAc,EAAE,IANR;AAORC,kCAAkB,EAAE,SAPZ;AAQRC,iCAAiB,EAAE,MARX;AASRC,mCAAmB,EAAE,IATb;AAURC,2BAAW,EAAE;AACXT,uBAAK,EAAE;AADI,iBAVL;AAaRU,0BAAU,EAAE;AAAA,yBAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtB,iCAAKlE,cAAL,CAAoBoK,GAApB,CAAwB,KAAKZ,UAA7B,EAAyC,IAAzC,EAA+C,KAAKvJ,yBAAL,CAA+BoE,gBAA/B,CAAgD,KAAK4E,eAAL,CAAqB/F,KAArE,CAA/C,EACKT,SADL,CACe,UAAC2C,GAAD,EAAQ;AAEb,qCAAI,CAAC/E,MAAL,CAAYgF,QAAZ,CAAqB,CAACyD,sGAAD,CAArB;;AACA,qCAAI,CAAC5I,YAAL,CAAkB+E,QAAlB,CAA2B,sBAA3B,EAAmD,KAAnD;AACD,6BALT,EAMQ,UAACrC,KAAD,EAAU;AACR,qCAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,6BART,EADsB,CAWtB;;AAXsB,kCAYlB,KAAKgC,cAAL,KAAwB,IAAxB,IAAgC,KAAKA,cAAL,KAAwBE,SAZtC;AAAA;AAAA;AAAA;;AAAA;AAapB,mCAAM,KAAKH,kBAAL,CAAwB,KAAKrB,WAA7B,EAA0C,KAAKsB,cAA/C,EAA8D,GAA9D,CAAN;;AAboB;AAAA,kCAiBlB,KAAKC,cAAL,KAAwB,IAAxB,IAAgC,KAAKA,cAAL,KAAwBC,SAjBtC;AAAA;AAAA;AAAA;;AAAA;AAkBpB,mCAAM,KAAKH,kBAAL,CAAwB,KAAKrB,WAA7B,EAA0C,KAAKuB,cAA/C,EAA8D,GAA9D,CAAN;;AAlBoB;AAAA,kCAsBlB,KAAKE,cAAL,KAAwB,IAAxB,IAAgC,KAAKA,cAAL,KAAwBD,SAtBtC;AAAA;AAAA;AAAA;;AAAA;AAuBpB,mCAAM,KAAKH,kBAAL,CAAwB,KAAKrB,WAA7B,EAA0C,KAAKyB,cAA/C,EAA8D,GAA9D,CAAN;;AAvBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAZ;AAAA;AAbJ,eAAV;AAwCD;AACF;;;iBAEK,4BAAmBzB,WAAnB,EAAwC4B,IAAxC,EAAoDjC,KAApD,EAAiE;;;;;;;;;AACjEmB,yCAAmBgE,4EAAqBC;wDACrC,KAAKrI,cAAL,CAAoBmF,gBAApB,CAAqC,OAArC,EAA6Cf,gBAAgB,GAAG,GAAnB,GAAyBd,WAAzB,GAAuC+E,qFAApF,EAAgHnD,IAAhH,EAAsHjC,KAAtH,EACFqB,SADE,GACUC,IADV,CACe,UAACa,GAAD,EAAQ,CACrB,CAFF,EAGC,UAACxC,KAAD,EAAU;AACR,+BAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,uBALF;;;;;;;;;AAMR;;;iBAED,oBAAWlC,QAAX,EAA0B;AACxB,iBAAKA,QAAL,GAAgBA,QAAhB;AACD;;;iBAED,sBAAa6E,SAAb,EAA6BpE,IAA7B,EAAwC;AACtC,iBAAKqE,QAAL,GAAsBD,SAAS,CAACE,MAAV,CAAiBC,KAAjB,CAAuB,CAAvB,CAAtB;;AACA,gBAAG,KAAKF,QAAL,KAAkBV,SAArB,EAA+B;AAC7B,mBAAKa,OAAL,CAAaxE,IAAb;AACD;AACF;;;iBAED,iBAAQA,IAAR,EAAmB;AAAA;;;;AACjB,gBAAIyE,QAAQ,GAAG,WAAKJ,QAAL,MAAa,IAAb,IAAaK,aAAb,GAAa,MAAb,GAAaA,GAAEC,IAA9B;AAEA,gBAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACE,aAAP,CAAqB,KAAKT,QAA1B;;AAEAO,kBAAM,CAACG,MAAP,GAAgB,UAACC,MAAD,EAAW;AAEzB,kBAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,iBAAG,CAACE,GAAJ,GAAUP,MAAM,CAACQ,MAAjB;;AACAH,iBAAG,CAACF,MAAJ,GAAa,YAAK;AAChB,oBAAM/D,MAAM,GAAGiE,GAAG,CAACI,aAAnB;AACA,oBAAMtE,KAAK,GAAGkE,GAAG,CAACK,YAAlB;;AACA,oBAAGtF,IAAI,KAAK,sBAAZ,EAAmC;AACjC,sBAAIyE,QAAQ,CAACc,KAAT,CAAe,SAAf,MAA8B,IAAlC,EAAwC;AACtC,2BAAI,CAACuC,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,oBAA3B,EAAiD,IAAjD;AACD,mBAHD,MAIK,IAAG,OAAI,CAACO,QAAL,CAAcmB,IAAd,GAAqB,OAAxB,EAAgC;AACnC,2BAAI,CAACsC,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,qBAA3B,EAAkD,IAAlD;AACD,mBAHI,MAIA,IAAG9C,MAAM,GAAG,GAAT,IAAgBD,KAAK,GAAG,GAA3B,EAA+B;AAClC,2BAAI,CAAC+G,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,sCAA3B,EAAmE,IAAnE;AACD,mBAHI,MAID;AACF,2BAAI,CAAC2B,oBAAL,GAA4Bb,MAAM,CAACQ,MAAnC;AACA,2BAAI,CAAC3B,cAAL,GAAsB,OAAI,CAACY,QAA3B;AACD;AACF,iBAjBD,MAkBK,IAAGrE,IAAI,KAAK,sBAAZ,EAAmC;AACtC,sBAAIyE,QAAQ,CAACc,KAAT,CAAe,SAAf,MAA8B,IAAlC,EAAwC;AACtC,2BAAI,CAACuC,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,oBAA3B,EAAiD,IAAjD;AACD,mBAHD,MAIK,IAAG,OAAI,CAACO,QAAL,CAAcmB,IAAd,GAAqB,OAAxB,EAAgC;AACnC,2BAAI,CAACsC,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,qBAA3B,EAAkD,IAAlD;AACD,mBAHI,MAIA,IAAG9C,MAAM,GAAG,GAAT,IAAgBD,KAAK,GAAG,GAA3B,EAA+B;AAClC,2BAAI,CAAC+G,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,sCAA3B,EAAmE,IAAnE;AACD,mBAHI,MAIA;AACH,2BAAI,CAAC4B,oBAAL,GAA4Bd,MAAM,CAACQ,MAAnC;AACA,2BAAI,CAAC1B,cAAL,GAAsB,OAAI,CAACW,QAA3B;AACD;AACF,iBAjBI,MAkBA,IAAGrE,IAAI,KAAK,sBAAZ,EAAmC;AACtC,sBAAIyE,QAAQ,CAACc,KAAT,CAAe,SAAf,MAA8B,IAAlC,EAAwC;AACtC,2BAAI,CAACuC,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,oBAA3B,EAAiD,IAAjD;AACD,mBAHD,MAIK,IAAG,OAAI,CAACO,QAAL,CAAcmB,IAAd,GAAqB,OAAxB,EAAgC;AACnC,2BAAI,CAACsC,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,qBAA3B,EAAkD,IAAlD;AACD,mBAHI,MAIA,IAAG9C,MAAM,GAAG,GAAT,IAAgBD,KAAK,GAAG,GAA3B,EAA+B;AAClC,2BAAI,CAAC+G,eAAL,CAAqB9F,UAArB,CAAiC;AAAC,gCAAS;AAAV,qBAAjC;;AACA,2BAAI,CAACjD,YAAL,CAAkB+E,QAAlB,CAA2B,sCAA3B,EAAmE,IAAnE;AACD,mBAHI,MAIA;AACH,2BAAI,CAAC6B,oBAAL,GAA4Bf,MAAM,CAACQ,MAAnC;AACA,2BAAI,CAACxB,cAAL,GAAsB,OAAI,CAACS,QAA3B;AACD;AACF;AACF,eAzDD;AA2DD,aA/DD;AAgED;;;eAED,eAAY;AACV,mBAAO,KAAKyD,eAAL,CAAqB1G,GAArB,CAAyB,UAAzB,CAAP;AACD;;;iBAED,yBAAa;AACX,gBAAIwE,aAAa,GAAG,KAAKnF,QAAL,CAAcK,MAAlC;;AACA,gBAAG8E,aAAa,GAAG,CAAnB,EAAqB;AACnB,mBAAKnF,QAAL,CAAcoF,IAAd,CAAmB,KAAKlF,mBAAL,CAAyB,IAAIwG,iEAAJ,EAAzB,CAAnB;AACA,mBAAKrB,oBAAL;AACD;AACF;;;iBAED,yBAAa;AACX,gBAAIhE,KAAK,GAAG,KAAKrB,QAAL,CAAcK,MAAd,GAAuB,CAAnC;AACA,iBAAKL,QAAL,CAAcsF,QAAd,CAAuBjE,KAAvB;AACD;;;iBAED,yBAAgBoH,WAAhB,EAAoCC,EAApC,EAA6C;AAAA;;AAC3C,gBAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAZ;;AACA,gBAAGC,GAAG,CAACG,OAAP,EAAe;AACb,mBAAKC,oBAAL,GAA2B,iBAA3B;AACA,mBAAKC,mBAAL,GAA0B,yBAA1B;AACA,mBAAKC,gCAAL,GAAuC,OAAvC;AACA,mBAAKC,4BAAL,GAAmC,uBAAnC;AACD,aALD,MAMK;AACH,mBAAKH,oBAAL,GAA4B,kBAA5B;AACA,mBAAKC,mBAAL,GAA0B,2BAA1B;AACA,mBAAKC,gCAAL,GAAuC,UAAvC;AACA,mBAAKC,4BAAL,GAAmC,yBAAnC;AACD;;AACDX,oEAAU;AACR3G,mBAAK,EAAE,KAAKmH,oBADJ;AAERlH,kBAAI,EAAE,KAAKmH,mBAFH;AAGRlH,8BAAgB,EAAE,IAHV;AAIRC,8BAAgB,EAAE,OAJV;AAKRC,+BAAiB,EAAE,SALX;AAMRC,4BAAc,EAAE,IANR;AAORC,gCAAkB,EAAE,SAPZ;AAQRC,+BAAiB,EAAE,KAAK8G,gCARhB;AASR7G,iCAAmB,EAAE,IATb;AAURC,yBAAW,EAAE;AACXT,qBAAK,EAAE;AADI,eAVL;AAaRU,wBAAU,EAAE;AAAA,uBAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB6G,iCAAO,CAACC,GAAR,CAAYV,EAAZ;AACIW,4CAFkB,GAEG7C,4EAAqBC,sFAArB,GAAmD,GAAnD,GAAyDgC,WAAzD,GAAuEhC,uFAF1E;AAGtB,+BAAKrI,cAAL,CAAoBoK,GAApB,CAAwBa,kBAAxB,EAA4C,IAA5C,EAAkD,IAAlD,EACKxI,SADL,CACe,UAAC2C,GAAD,EAAQ;AACb,mCAAI,CAAC/E,MAAL,CAAYgF,QAAZ,CAAqB,CAACyD,sGAAD,CAArB;;AACAyB,+BAAG,CAACG,OAAJ,GAActF,GAAG,CAAC8F,OAAlB;;AACA,mCAAI,CAAChL,YAAL,CAAkB+E,QAAlB,CAA2B,OAAI,CAAC6F,4BAAhC,EAA8D,KAA9D;AACD,2BALT,EAMQ,UAAClI,KAAD,EAAU;AACR2H,+BAAG,CAACG,OAAJ,GAAc,CAACH,GAAG,CAACG,OAAnB;;AACA,mCAAI,CAACvK,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,2BATT;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;AAAA;AAbJ,aAAV,EA2BG2B,IA3BH,CA2BQ,UAAUgC,MAAV,EAAgB;AACtB,kBAAIA,MAAM,CAAC4E,WAAX,EAAwB;AACtBZ,mBAAG,CAACG,OAAJ,GAAc,CAACH,GAAG,CAACG,OAAnB;AACD;AACF,aA/BD;AAgCD;;;iBAED,gCAAoB;AAAA;;AAClB,iBAAK9I,QAAL,CAAckB,QAAd,CAAuBC,OAAvB,CAA+B,UAACC,OAAD,EAAUC,KAAV,EAAmB;AAChD,kBAAG,OAAI,CAACgG,eAAL,CAAqB1G,GAArB,CAAyB,cAAzB,EAAyCW,KAAzC,KAAmD,IAAtD,EAA2D;AACzDF,uBAAO,CAACG,UAAR,CAAmB;AAAC,2BAAQ;AAAT,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACD,eALD,MAKK;AACHH,uBAAO,CAACG,UAAR,CAAmB;AAAC,2BAAQ;AAAT,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACAH,uBAAO,CAACG,UAAR,CAAmB;AAAC,4BAAS;AAAV,iBAAnB;AACD;AACF,aAZD;AAaD;;;iBAED,iCAAqB;AACnBiI,kBAAM,CAACC,IAAP,CAAY,KAAKzC,iBAAjB;AACD;;;;;;;yBAxWUV,yBAAsBT;AAAA;;;cAAtBS;AAAsBf;AAAAmE;AAAAhI;AAAA;AAAA8D;AAAAC;AAAAC;AAAAC;AAAA;ADtBnCE;;AAOAA;;;;;;AAPMA,2FAAc,UAAd,EAAcD,GAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAN+D;;AACIA;;AACIA;;AACJA;;AACJA;;;;;;AAoD4BA;;AAAyIA;;AAA6BA;;;;;;AAA7BA;;AAAAA;;;;;;AACzIA;;AAA4IA;;AAAiCA;;;;;;AAAjCA;;AAAAA;;;;;;AAC5IA;;AAAwIA;;AAA8BA;;;;;;AAA9BA;;AAAAA;;;;;;AACxIA;;AAAwIA;;AAA+BA;;;;;;AAA/BA;;AAAAA;;;;;;;;AAOhIA;;AAAiIA;AAAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiEA;;AAAkBA;;;;;;;;AACpNA;;AAAkIA;AAAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgEA;;AAAeA;;;;;;;;AAlBjOA;;AACIA;;AAAqFA;;AAA+DA;;AAAmBA;;AACvKA;;AAA+CA;;;;AAA2DA;;AAC1GA;;AAA+CA;;AAAqBA;;AACpEA;;AAAoFA;;AAAiDA;;AACrIA;;AAA8CA;;AAA+CA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmEA;;AAAIA;;AACpKA;;AACIA;;AACAA;;AACAA;;AACAA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA4FA;;AAAgCA;;AAC5HA;;AACIA;;AAAwBA;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0BC,kBAA1B;AAA0B,WAA1B;;AAA6CD;;AAAYA;;AACjFA;;AACAA;;AAEJA;;AACJA;;AACJA;;AACJA;;;;;;;;;AAtBQA;;AAAAA;;AAA8GA;;AAAAA;;AAAkCA;;AAAAA;;AAChJA;;AAAAA;;AAA2CA;;AAAAA;;AAC3CA;;AAAAA;;AAA2CA;;AAAAA;;AAC3CA;;AAAAA;;AAAgFA;;AAAAA;;AAChFA;;AAAAA;;AACAA;;AAAAA;;AACOA;;AAAAA;;AACAA;;AAAAA;;AACAA;;AAAAA;;AACAA;;AAAAA;;AAEPA;;AAAAA;;AAKiBA;;AAAAA;;AACAA;;AAAAA;;;;;;AAnBzBA;;AACAA;;AAwBAA;;;;;;AAxB0BA;;AAAAA;;;;;;AA4B9BA;;AACQA;;AACIA;;AACJA;;AACJA;;AACIA;;AAAIA;;AAAsBA;;AAC9BA;;AACAA;;AACIA;;AAAMA;;AAA+BA;;AACzCA;;AACAA;;AACIA;;AAAMA;;AAAyBA;;AACnCA;;AACJA;;;;;;;;AAhFZA;;AAGIA;;AACIA;;AACIA;;AAAIA;;AAAaA;;AACjBA;;AAAGA;;AAA6BA;;AACpCA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACIA;;AAAsGA;AAAAA;;AAAA;;AAAA;AAAA;;AAAtGA;;AACAA;;AAA4EA;AAAAA;;AAAA;;AAAA;AAAA;;AAAgCA;;AAChHA;;AACAA;;AACIA;;AAA8CA;AAAAA;;AAAA;;AAAA,sCAAoB,KAApB,EAA2B,IAA3B;AAA+B,WAA/B;;AAAkCA;;AAAcA;;AAAkCA;;AACpIA;;AACJA;;AACJA;;AAGAA;;AACIA;;AACIA;;AACIA;;AACAA;;AACIA;;AAAgBA;;AAAIA;;AACpBA;;AAAgBA;;AAASA;;AACzBA;;AAAgBA;;AAAKA;;AACrBA;;AAAgBA;;AAAMA;;AACtBA;;AACAA;;AAAgBA;;AAAMA;;AACtBA;;AACJA;;AACAA;;AAEAA;;AA2BJA;;AAEAA;;AAeAA;;AACIA;;AAAoFA;AAAAA;;AAAA;;AAAA;AAAA,aAAsB,eAAtB,EAAsB;AAAAA;;AAAA;;AAAA;AAAA,WAAtB;;AAChFA;;AAAsBA;;AAAgBA;;AACtCA;;AAAuBA;;AAAiBA;;AACxCA;;AAAuBA;;AAAiBA;;AAC5CA;;AACAA;;AAA0DA;;AAA+DA;;AACzHA;;AAAsDA;AAAAA;;AAAA;;AAAA;AAAA,aAAe,YAAf,EAAe;AAAAA;;AAAA;;AAAA;AAAA,WAAf;;AAA8HA;;AACxLA;;AAEJA;;AACJA;;AACJA;;;;;;AAjFsHA;;AAAAA;;AAyB9FA;;AAAAA;;AA6BNA;;AAAAA;;AAgBkFA;;AAAAA;;AACxEA;;AAAAA;;AACAA;;AAAAA;;AACAA;;AAAAA;;AAE8CA;;AAAAA;;AACJA;;AAAAA,yFAAe,UAAf,EAAeE,eAAf,EAAe,gBAAf,EAAeA,gBAAf,EAAe,SAAf,EAAe,CAAf;;;;;;AAQtEF;;AACIA;;AACJA;;;;;;AAGAA;;AACIA;;AACJA;;;;;;AADwBA;;AAAAA;;;;;;AAvGxBA;;AAiGAA;;AAKAA;;;;;;AAtGeA;;AAiGAA;;AAAAA;;AAKAA;;AAAAA;;;;;;;;AASfA;;AACIA;;AACIA;;AACIA;;AACIA;;AAEJA;;AACAA;;AACIA;;AAAIA;;AAAmBA;;AAC3BA;;AACJA;;AACJA;;AAEJA;;AACAA;;AACIA;;AACIA;;AACJA;;AACJA;;AACAA;;AACIA;;AAA2CA;AAAA;;AAAA;AAAA,mBAASG,iBAAT;AAAsB,WAAtB;;AAAwBH;;AAAKA;;AACxEA;;AAA8CA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+BA;;AAAWA;;AAC5FA;;;;;;;;AAMAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAEJA;;AACAA;;AACIA;;AAAIA;;AAAgBA;;AACxBA;;AACJA;;AACJA;;AAEJA;;AACAA;;AACIA;;AACIA;;AACJA;;AACJA;;AACAA;;AACIA;;AAA2CA;AAAA;;AAAA;AAAA,mBAASI,iBAAT;AAAsB,WAAtB;;AAAwBJ;;AAAKA;;AACxEA;;AAA8CA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+BA;;AAAQA;;AACzFA;;;;;;;;AAMAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACJA;;AACAA;;AACIA;;AAAIA;;AAAWA;;AACnBA;;AACJA;;AACJA;;AAEJA;;AACAA;;AACIA;;AACIA;;AACJA;;AACJA;;AACAA;;AACIA;;AAA8CA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkCA;;AAAEA;;AACtFA;;;;UC/KSK;AAEX,yCACqB7L,WADrB,EAEYC,cAFZ,EAGWC,yBAHX,EAIYC,YAJZ,EAKYC,YALZ,EAMYgI,YANZ,EAOY9H,MAPZ,EAQYwL,cARZ,EAQyC;AAAA;;AAPpB;AACT;AACD;AACC;AACA;AACA;AACA;AACA,+CAA6B,CAezC;;AACA,yBAAU,IAAV;AACA,0BAAoB,EAApB,CAjByC,CAmBzC;;AACA,sBAAO,CAAP;AACA,0BAAW,CAAX;AACA,2BAAY,CAAZ;AACA,2BAAY,CAAZ;AACA,yBAAU,CAAV;AAEA,sBAAO,IAAIvL,2DAAJ,EAAP;AACA,6BAAc,IAAIwL,0EAAJ,EAAd;AACA,6BAAc,IAAIC,KAAJ,EAAd;AACA,mCAAoBC,2EAApB;AACA,oCAA8B,IAA9B;AAEQ,+BAAgB5D,4EAAqBC,8EAArC;AACA,mCAAoBD,4EAAqBC,oFAAzC;AACR,qCAAsB,EAAtB;AACA,0CAAoC,EAApC;AACA,iCAAkBD,4EAAqB,GAArB,GAA2BU,mGAA3B,GAA+D,GAA/D,GAAqEA,qGAArE,GAA2G,GAA7H,CApCyC,CAqCzC;;AACO,6BAAc,EAAd;AApCL;;;;iBAEI,oBAAQ;;;;;;;AACZ,6BAAM,KAAKnI,QAAL,EAAN;;;AACA;AACA,2BAAKG,IAAL,GAAY,KAAKd,cAAL,CAAoBe,YAApB,EAAZ;;AAC2B,6BAAM,KAAK2H,eAAL,EAAN;;;AAA3B,2BAAKC;AACL,2BAAKE,eAAL,GAAuBT,4EAAqB,GAArB,GAA2BU,mGAA3B,GAA+D,GAA/D,GAAqEA,qGAArE,GAA2G,GAA3G,GAAiH,KAAKH,mBAAtH,GAA4I,GAAnK;;;;;;;;;AACD;;;iBA8BK,oBAAQ;;;;;;;;;AACZ;AACA,2BAAKsD,gBAAL,CAAsB,KAAK7I,IAA3B,EAAiC,KAAK8I,QAAtC,EAAgD,MAAhD,EAAwD,KAAKC,kBAA7D;AACMzL,iCAAW,uBAAKmL,cAAL,MAAmB,IAAnB,IAAmBhG,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEuG,QAArB,MAA6B,IAA7B,IAA6BvC,aAA7B,GAA6B,MAA7B,GAA6BA,GAAEwC,aAA/B,MAA4C,IAA5C,IAA4CvC,aAA5C,GAA4C,MAA5C,GAA4CA,GAAEvH,GAAF,CAAM,UAAN;AAE7D,2BAAK7B,QAAL,GAAgBA,QAAQ,SAAR,YAAQ,WAAR,cAAW,MAA3B;;;;;;;;;AACD;;;iBAED,0BAAiB0C,IAAjB,EAA+B8I,QAA/B,EAAiDI,IAAjD,EAA+DnL,IAA/D,EAA2E;AAAA;;AACzE,gBAAIoL,YAAY,GAAG,IAAIC,GAAJ,EAAnB;AACAD,wBAAY,CAACE,GAAb,CAAiB,MAAjB,EAAyBrJ,IAAI,GAAC,CAA9B;AACAmJ,wBAAY,CAACE,GAAb,CAAiB,MAAjB,EAAyBP,QAAzB;AACAK,wBAAY,CAACE,GAAb,CAAiB,MAAjB,EAAyBH,IAAzB;;AACA,gBAAGnL,IAAI,KAAK,IAAZ,EAAiB;AACboL,0BAAY,CAACE,GAAb,CAAiB,MAAjB,EAAyBtL,IAAzB;AACH;;AAED,iBAAKnB,cAAL,CAAoBuC,GAApB,CAAwB,KAAKmK,aAA7B,EAA4CH,YAA5C,EAA0D9J,SAA1D,CACI,UAACC,QAAD,EAAa;AACX,qBAAI,CAACiK,WAAL,GAAmB,OAAI,CAAC1M,yBAAL,CAA+BwJ,gBAA/B,CAAgD/G,QAAQ,CAACkK,QAAzD,CAAnB;AACA,qBAAI,CAACC,SAAL,GAAiBnK,QAAQ,CAACoK,QAAT,CAAkBC,UAAnC;AACA,qBAAI,CAACC,SAAL,GAAiBtK,QAAQ,CAACoK,QAAT,CAAkBG,UAAnC;AACA,qBAAI,CAACC,OAAL,GAAexK,QAAQ,CAACoK,QAAT,CAAkBK,QAAjC;AACA,qBAAI,CAACnM,OAAL,GAAe,KAAf;AACD,aAPL,EASI,UAAC4B,KAAD,EAAU;AACN,qBAAI,CAACwK,WAAL,GAAmBxK,KAAK,CAACA,KAAzB;;AACA,kBAAG,OAAI,CAACwK,WAAL,CAAiBxK,KAAjB,CAAuByK,IAAvB,KAAgCC,qGAAnC,EAAmE;AAC/D,uBAAI,CAACjN,MAAL,CAAYgF,QAAZ,CAAqB,CAACyD,iGAAD,EAAkCyE,uFAAlC,CAArB;AACH,eAFD,MAGK,IAAG,OAAI,CAACH,WAAL,CAAiBxK,KAAjB,CAAuByK,IAAvB,KAAgCC,oGAAnC,EAAkE;AACnE,uBAAI,CAACnF,YAAL,CAAkBkD,IAAlB,CAAuB,OAAI,CAACmC,kBAA5B,EAAgD;AAACC,0BAAQ,EAAE,QAAX;AAAqBC,0BAAQ,EAAE;AAA/B,iBAAhD;AACH,eAFI,MAGD;AACA,uBAAI,CAACvN,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACH;AACJ,aApBL;AAsBD;;;iBAED,2BAAe;AAAA;;AACb,mBAAO,KAAK5C,cAAL,CAAoBuC,GAApB,CAAwB,KAAKwH,iBAA7B,EAA+C,IAA/C,EAAqDzF,SAArD,GAAiEC,IAAjE,CACH,UAAC7B,QAAD,EAAa;AACT,qBAAOA,QAAQ,CAACsH,QAAT,CAAkBhB,IAAzB;AACH,aAHE,EAKH,UAACpG,KAAD,EAAU;AACN,qBAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACH,aAPE,CAAP;AASD;;;iBAED,8BAAkB;AACdwI,kBAAM,CAACuC,MAAP,CAAcC,WAAd,CAA0B;AACtBC,kBAAI,EAAE,cADgB;AAEtBjE,iBAAG,EAAE,MAAMd,mGAAN,GAA0C,GAA1C,GAAgDA;AAF/B,aAA1B,EAGE,GAHF;AAIH;;;iBAED,qBAAYgF,GAAZ,EAAuB;AACrB,gBAAMC,MAAM,GAAGvD,QAAQ,CAACwD,aAAT,CAAuB,UAAvB,CAAf;AACAD,kBAAM,CAACE,KAAP,CAAaC,QAAb,GAAwB,OAAxB;AACAH,kBAAM,CAACE,KAAP,CAAaE,IAAb,GAAoB,GAApB;AACAJ,kBAAM,CAACE,KAAP,CAAaG,GAAb,GAAmB,GAAnB;AACAL,kBAAM,CAACE,KAAP,CAAaI,OAAb,GAAuB,GAAvB;AACAN,kBAAM,CAAC7K,KAAP,GAAe4K,GAAf;AACAtD,oBAAQ,CAAC8D,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACAA,kBAAM,CAACS,KAAP;AACAT,kBAAM,CAACU,MAAP;AACAjE,oBAAQ,CAACkE,WAAT,CAAqB,MAArB;AACAlE,oBAAQ,CAAC8D,IAAT,CAAcK,WAAd,CAA0BZ,MAA1B;AACA,iBAAK7N,YAAL,CAAkB+E,QAAlB,CAA2B,gCAA3B,EAA6D,KAA7D;AACD;;;iBAED,oBAAWvE,QAAX,EAA4B4C,WAA5B,EAA8C;AAC1C,gBAAG5C,QAAQ,KAAK,MAAhB,EAAuB;AACnB,mBAAK4C,WAAL,GAAmBA,WAAnB;AACH;;AACH,iBAAK5C,QAAL,GAAgBA,QAAhB;AACD;;;iBAED,sBAAa0C,IAAb,EAAmB8I,QAAnB,EAAmC;AACjC,iBAAKD,gBAAL,CAAsB7I,IAAtB,EAA4B8I,QAA5B,EAAsC,MAAtC,EAA8C,KAAKC,kBAAnD;AACD;;;iBAED,gCAAuByC,OAAvB,EAAgCtL,WAAhC,EAAkD;AAChD,iBAAKuL,wBAAL,GAAgCvL,WAAhC;AACA,iBAAK6E,YAAL,CAAkBkD,IAAlB,CAAuBuD,OAAvB,EAAgC;AAACnB,sBAAQ,EAAE,QAAX;AAAqBC,sBAAQ,EAAE;AAA/B,aAAhC;AACD;;;iBAED,2BAAe;AAAA;;AACb,gBAAIoB,sBAAsB,GAAG,KAAKpC,aAAL,GAAqB,GAArB,GAA2B,KAAKmC,wBAAhC,GAA2DxG,uFAAxF;AAEA,iBAAKrI,cAAL,CAAoBoK,GAApB,CAAwB0E,sBAAxB,EAAgD,IAAhD,EAAsD,IAAtD,EAA4DrM,SAA5D,CACI,UAACC,QAAD,EAAa;AACX,kBAAIqM,UAAU,GAAG,EAAjB;;AACA,kBAAGrM,QAAQ,CAACwI,OAAT,KAAqB,KAAxB,EAA8B;AAC5B6D,0BAAU,GAAG,UAAb;AACD,eAFD,MAEK;AACHA,0BAAU,GAAG,OAAb;AACD;;AACD,qBAAI,CAAC7O,YAAL,CAAkB+E,QAAlB,CAA2B,gCAAgC8J,UAA3D,EAAuE,KAAvE;;AACA,qBAAI,CAAC9C,gBAAL,CAAsB,OAAI,CAAC7I,IAA3B,EAAiC,OAAI,CAAC8I,QAAtC,EAAgD,MAAhD,EAAwD,OAAI,CAACC,kBAA7D;AACD,aAVL,EAYI,UAACvJ,KAAD,EAAU;AACR,qBAAI,CAACzC,YAAL,CAAkB0C,WAAlB,CAA8BD,KAA9B;AACD,aAdL;AAiBD;;;;;;;;;;;;;YAED,UAAUoM,KAAV,EAAuB;AACrB,mBAAOtF,SAAS,CAACsF,KAAD,CAAhB;AACD;;;iBAED,+BAAmB;AACfjE,mBAAO,CAACC,GAAR,CAAY,KAAKmB,kBAAjB;AACA,iBAAKF,gBAAL,CAAsB,KAAK7I,IAA3B,EAAiC,KAAK8I,QAAtC,EAAgD,MAAhD,EAAwD,KAAKC,kBAA7D;AACH;;;;;;;yBA1KUP,yBAAsBL;AAAA;;;cAAtBK;AAAsBzE;AAAA8H;AAAA;;;;;;;;;;;;;;;ADtBnC1D;;AAOAA;;AAgHAA;;AA4BAA;;AA4BAA;;;;;;AA/KMA,2FAAc,UAAd,EAAc/D,GAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AESN,UAAM0H,MAAM,GAAW,CACrB;AACEC,YAAI,EAAC,EADP;AAEEC,iBAAS,EAAEC,4FAFb;AAGEC,iBAAS,EAAE;AAHb,OADqB,CAAvB;;UAqBaC;;;;;yBAAAA;AAAe;;;cAAfA;;;kBAXA,CACLC,yDADK,EAELC,mEAAsBP,MAAtB,CAFK,EAGLQ,2EAHK,EAILC,uDAJK,EAKLD,yEALK,EAMLE,gEANK,EAOLD,+DAPK,EAQLD,wEARK;;;;4HAWAH,kBAAe;AAAAM,yBAZXR,4FAYW,EAZaS,yFAYb,EAZoCC,4FAYpC;AAZ0DC,oBAE9ER,yDAF8E,EAElEC,yDAFkE,EAI9EC,2EAJ8E,EAK9EC,uDAL8E,EAM9ED,yEAN8E,EAO9EE,gEAP8E,EAQ9ED,+DAR8E,EAS9ED,wEAT8E;AAY1D;AAHJ;;wEATiBI,2FAAqB,oDAA7CT,4FAA6C,EAArBM,4DAAqB,EAArBA,gEAAqB,EAArBA,8DAAqB,EAArBD,kEAAqB,EAArBC,qEAAqB,EAArBA,gEAAqB,EAArBA,2DAAqB,EAArBA,2DAAqB,EAArBA,6DAAqB,EAArBA,4DAAqB,EAArBA,8DAAqB,EAArBC,mEAAqB,EAArBJ,oDAAqB,EAArBI,uDAAqB,EAArBD,yDAAqB,EAArBA,yDAAqB,GAArB;;wEAAuBI,8FAAsB,oDAArEV,4FAAqE,EAA7CM,4DAA6C,EAA7CA,gEAA6C,EAA7CA,8DAA6C,EAA7CD,kEAA6C,EAA7CC,qEAA6C,EAA7CA,gEAA6C,EAA7CA,2DAA6C,EAA7CA,2DAA6C,EAA7CA,6DAA6C,EAA7CA,4DAA6C,EAA7CA,8DAA6C,EAA7CC,mEAA6C,EAA7CJ,oDAA6C,EAA7CI,uDAA6C,EAA7CD,yDAA6C,EAA7CA,yDAA6C,GAA7C;;;;","names":["_angular_core__WEBPACK_IMPORTED_MODULE_11__","ctx_r43","ctx_r52","ctx_r54","ctx_r55","ctx_r57","ctx_r59","ctx_r60","InventoryAddComponent","formBuilder","requestService","apiModelTranslatorService","alertService","errorService","validationService","router","_shared_models_user_model__WEBPACK_IMPORTED_MODULE_0__","_environments_environment__WEBPACK_IMPORTED_MODULE_2__","_shared_constant_api_constant__WEBPACK_IMPORTED_MODULE_3__","_shared_enum_product_condition_enum__WEBPACK_IMPORTED_MODULE_4__","pageName","initLoad","form","getListCategoryProduct","user","getUserToken","loading","addProductForm","group","name","_angular_forms__WEBPACK_IMPORTED_MODULE_13__","category","digitalGoods","description","image1","image2","image3","condition","variants","array","initVariantsProduct","color","minimumOrder","length","width","height","stock","price","weight","get","apiGetProductCategory","subscribe","response","listCategoryProduct","error","getErrorApi","controls","forEach","element","index","value","patchValue","page","valid","productUiId","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","title","text","showCancelButton","cancelButtonText","cancelButtonColor","reverseButtons","confirmButtonColor","confirmButtonText","showLoaderOnConfirm","customClass","preConfirm","post","apiSubmitProduct","camelToSnakeCase","toPromise","then","product","detail","uuid","uploadImageProduct","imageToUpload1","imageToUpload2","undefined","imageToUpload3","changePage","setProps","file","uploadSingleFile","res","navigate","src_app_shared_constant_navigation_constant__WEBPACK_IMPORTED_MODULE_5__","fileInput","fileData","target","files","preview","mimeType","_a","type","reader","FileReader","readAsDataURL","onload","_event","img","Image","src","result","naturalHeight","naturalWidth","match","size","previewImageProduct1","previewImageProduct2","previewImageProduct3","lengthVariant","push","validateDigitalGoods","removeAt","selectors","decls","vars","consts","template","_r1","_angular_core__WEBPACK_IMPORTED_MODULE_13__","variant_r27","i_r28","ctx_r47","ctx_r56","ctx_r58","ctx_r61","ctx_r63","ctx_r64","InventoryEditComponent","modalService","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_shared_constant_api_constant__WEBPACK_IMPORTED_MODULE_2__","_shared_models_product_model__WEBPACK_IMPORTED_MODULE_5__","_shared_enum_product_condition_enum__WEBPACK_IMPORTED_MODULE_6__","_shared_enum_product_status_enum__WEBPACK_IMPORTED_MODULE_7__","getDetailProduct","getMerchantLink","productLinkBusiness","productLinkDetail","productLinkRoot","_shared_constant_navigation_constant__WEBPACK_IMPORTED_MODULE_4__","productDetail","link","editProductForm","_angular_forms__WEBPACK_IMPORTED_MODULE_15__","uiId","map","variant","active","apiDetailProduct","apiProduct","snakeToCamelCase","decodeURI","images","url","_b","_c","apiGetMerchatLink","merchant","encodedLink","encodeURI","sweetalert2__WEBPACK_IMPORTED_MODULE_3___default","put","variantUiId","id","ele","document","getElementById","checked","titleInactiveVariant","textInactiveVariant","confirmButtonTextInactiveVariant","successAllertInactiveVariant","console","log","apiInactiveVariant","current","isDismissed","window","open","inputs","_angular_core__WEBPACK_IMPORTED_MODULE_14__","inventory_r15","ctx_r9","modal_r40","modal_r45","InventoryListComponent","activatedRoute","_shared_models_response_api_model__WEBPACK_IMPORTED_MODULE_3__","Array","_shared_enum_product_status_enum__WEBPACK_IMPORTED_MODULE_6__","getListInventory","pageSize","inputSearchProduct","snapshot","queryParamMap","sort","requestParam","Map","set","apiGetProduct","productList","products","totalData","pageable","total_data","startData","start_data","endData","end_data","responseApi","code","_shared_constant_api_error_code_constant__WEBPACK_IMPORTED_MODULE_7__","_shared_constant_error_code_constant__WEBPACK_IMPORTED_MODULE_5__","configurationModal","backdrop","keyboard","parent","postMessage","func","val","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","idModal","modalUiIdProductActivate","apiUpdateProductActive","propsAlert","param","viewQuery","routes","path","component","_inventory_list_inventory_list_component__WEBPACK_IMPORTED_MODULE_0__","pathMatch","InventoryModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__","declarations","_inventory_add_inventory_add_component__WEBPACK_IMPORTED_MODULE_1__","_inventory_edit_inventory_edit_component__WEBPACK_IMPORTED_MODULE_2__","imports"],"sources":["webpack:///src/app/modules/inventory/inventory-add/inventory-add.component.html","webpack:///src/app/modules/inventory/inventory-add/inventory-add.component.ts","webpack:///src/app/modules/inventory/inventory-edit/inventory-edit.component.html","webpack:///src/app/modules/inventory/inventory-edit/inventory-edit.component.ts","webpack:///src/app/modules/inventory/inventory-list/inventory-list.component.html","webpack:///src/app/modules/inventory/inventory-list/inventory-list.component.ts","webpack:///src/app/modules/inventory/inventory.module.ts"],"sourcesContent":["<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n        <app-inventory-list></app-inventory-list>\n    </ng-container>\n\n    <!-- Add Inventory Data-->\n    <ng-container *ngIf=\"pageName === 'add'\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Tambah Produk</h3>\n                <p>Tambahkan produk dan mulailah untuk menjual produk Anda</p>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <form [formGroup]=\"addProductForm\" class=\"pt-10\" id=\"addProductForm\">\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Tipe Produk</b></div>\n                                    <small>Pilih jika Anda ingin menambahkan\n                                        <span class=\"text-primary\"style=\"cursor: pointer;\" [autoClose]=\"'inside'\"\n                                              ngbPopover=\"Contoh: Voucher Pulsa, Token Listrik, Voucher Belanja, Game, dll, yang tidak memerlukan pengiriman\"\n                                              popoverTitle=\"Produk Digital\">\n                                        produk digital\n                                        </span>\n                                    yang tidak membutuhkan pengiriman</small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"physicalGoods\" formControlName=\"digitalGoods\" [value]=false (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"physicalGoods\">Produk fisik</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"digitalGoods\" formControlName=\"digitalGoods\" [value]=true (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"digitalGoods\">Produk digital</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Foto Produk</b></div>\n                                    <small>\n                                        Maksimal ukuran gambar 1 MB atau minimum 300 x 300 px. Format gambar\n                                        .jpg .jpeg atau .png\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"row mt-3 px-3\">\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"form-group d-flex justify-content-center\">\n                                                    <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                        <label for=\"file-input1\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                            <div *ngIf=\"!previewImageProduct1\">\n                                                                <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                <p>Pilih Gambar</p>\n                                                            </div>\n                                                            <div *ngIf=\"previewImageProduct1\">\n                                                                <img [src]=\"previewImageProduct1\" class=\"image-container\"/>\n                                                            </div>\n                                                        </label>\n                                                        <input id=\"file-input1\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\" (change)=\"fileProgress($event, 'previewImageProduct1')\" formControlName=\"image1\"/>\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group d-flex justify-content-center text-danger\" *ngIf=\"addProductForm.get('image1').hasError('required') && (addProductForm.get('image1').dirty || addProductForm.get('image1').touched)\">*This field is cannot be left empty</div>\n                                            </div>\n\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"form-group d-flex justify-content-center\">\n                                                    <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                        <label for=\"file-input2\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                            <div *ngIf=\"!previewImageProduct2\">\n                                                                <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                <p>Pilih Gambar</p>\n                                                            </div>\n                                                            <div *ngIf=\"previewImageProduct2\">\n                                                                <img [src]=\"previewImageProduct2\" class=\"image-container\"/>\n                                                            </div>\n                                                        </label>\n                                                        <input id=\"file-input2\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct2')\" formControlName=\"image2\"/>\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group d-flex justify-content-center text-danger\" *ngIf=\"addProductForm.get('image2').hasError('required') && (addProductForm.get('image2').dirty || addProductForm.get('image2').touched)\">*This field is cannot be left empty</div>\n                                            </div>\n\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"form-group d-flex justify-content-center\">\n                                                    <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                        <label for=\"file-input3\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                            <div *ngIf=\"!previewImageProduct3\">\n                                                                <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                <p>Pilih Gambar</p>\n                                                            </div>\n                                                            <div *ngIf=\"previewImageProduct3\">\n                                                                <img [src]=\"previewImageProduct3\" class=\"image-container\"/>\n                                                            </div>\n                                                        </label>\n                                                        <input id=\"file-input3\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct3')\" formControlName=\"image3\"/>\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group d-flex justify-content-center text-danger\" *ngIf=\"addProductForm.get('image3').hasError('required') && (addProductForm.get('image3').dirty || addProductForm.get('image3').touched)\">*This field is cannot be left empty</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Nama Produk</b></div>\n                                    <small> Cantumkan maksimal 238 karakter terdiri dari jenis produk, merek, dan keterangan seperti warna, bahan, atau tipe </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <input class=\"form-control dk-text-input\" formControlName=\"name\" id=\"name\" placeholder=\"Baju lengan panjang\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" maxlength=\"238\">\n                                    <div class=\"text-danger\" *ngIf=\"addProductForm.get('name').hasError('required') && (addProductForm.get('name').dirty || addProductForm.get('name').touched)\">*This field is cannot be left empty</div>\n                                    <div class=\"text-danger\" *ngIf=\"addProductForm.get('name').hasError('pattern')\">*This field is not valid input text</div>\n                                </div>\n                            </div>\n\n                            <hr class=\"row p-3 my-2\">\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kategori</b></div>\n                                    <small> Pilih kategori yang sesuai dengan produk Anda </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <ng-select [multiple]=\"false\" formControlName=\"category\" id=\"category\" placeholder=\"Pilih kategori produk\">\n                                        <ng-option *ngFor=\"let categoryProduct of listCategoryProduct\" [value]=\"categoryProduct\">{{categoryProduct}}</ng-option>\n                                    </ng-select>\n                                    <div class=\"text-danger\" *ngIf=\"addProductForm.get('category').hasError('required') && (addProductForm.get('category').dirty || addProductForm.get('category').touched)\">*This field is cannot be left empty</div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kondisi</b></div>\n                                    <small> Pilih kondisi produk yang dijual </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input type=\"radio\" id=\"conditionNew\" [value]=productCondition.New formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionNew\">Baru</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input type=\"radio\" id=\"conditionUsed\" [value]=productCondition.Used formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionUsed\">Bekas</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Deskripsi Produk</b></div>\n                                    <small>\n                                        Pastikan deskripsi produk memuat spesifikasi, ukuran, bahan, masa\n                                        berlaku, dan lainnya. Cantumkan maksimal 260 karakter agar pembeli\n                                        semakin mudah mengerti produk Anda\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <textarea class=\"form-control dk-text-input\" formControlName=\"description\" id=\"description\" placeholder=\"Deskripsi produk anda\" required pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" rows=\"4\" maxlength=\"260\"></textarea>\n                                        <div class=\"text-danger\" *ngIf=\"addProductForm.get('description').hasError('required') && (addProductForm.get('description').dirty || addProductForm.get('description').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"text-danger\" *ngIf=\"addProductForm.get('description').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-3\" style=\"margin-bottom: auto; margin-top: auto\">\n                                    <h4 style=\"margin-bottom: auto; margin-top: auto\">Informasi Penjualan</h4>\n                                </div>\n                                <div class=\"col-9\">\n                                    <button class=\"btn btn-secondary btn-sm ml-auto\" style=\"float: right\" *ngIf=\"variants.length < 5\" type=\"button\" id=\"addVariant\" (click)=\"addNewVariant()\">\n                                        <i class=\"fa fa-plus in-icon\"></i> Tambah Varian\n                                    </button>\n\n                                    <button class=\"btn btn-secondary btn-sm ml-auto mr-3\" style=\"float: right\" *ngIf=\"variants.length > 1\" type=\"button\" id=\"deleteVariant\" (click)=\"deleteVariant()\">\n                                        <i class=\"fa fa-minus in-icon\"></i> Hapus Varian\n                                    </button>\n\n                                </div>\n                            </div>\n\n                            <!-- Varian Produk -->\n                            <div formArrayName=\"variants\">\n                                <div *ngFor=\"let variant of addProductForm.get('variants')['controls']; let i=index;\" [formGroupName]=\"i\">\n                                    <div class=\"row px-3 mb-3\">\n                                        <div class=\"col-12 rounded p-3\" style=\"border: 1px dashed #cccccc\">\n                                            <div class=\"row mb-2\">\n                                                <div class=\"d-flex px-3 mb-3 w-100 align-items-center\">\n                                                    <h4 class=\"d-inline-block m-0\">Varian {{i+1}}</h4>\n<!--                                                    <div class=\"custom-control custom-switch d-inline-block\">-->\n<!--                                                        <input id=\"s1\" type=\"checkbox\" class=\"switch\" />-->\n<!--                                                        <label for=\"s1\">Aktif</label>-->\n<!--                                                    </div>-->\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Nama Varian</b></div>\n                                                    <small> Varian nama dari produk yang Anda jual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"form-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"color\" id=\"color-{{i}}\" placeholder=\"Merah\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\">\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('required') && (variant.get('color').dirty || variant.get('color').touched)\">*This field is cannot be left empty</div>\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('pattern')\">*This field is not valid input text</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Harga Varian</b></div>\n                                                    <small> Harga dari varian produk yang Anda jual. Harga minimum Rp 10.000, tanpa titik </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"currency\">Rp</span>\n                                                        </div>\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"price\" id=\"price-{{i}}\" placeholder=\"10000\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('required') && (variant.get('price').dirty || variant.get('price').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('pattern')\">*This field is not valid input text</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('min')\">*Minimal harga 10000</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Stok Varian</b></div>\n                                                    <small> Jumlah varian produk yang dijual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"stock\" id=\"stock-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('required') && (variant.get('stock').dirty || variant.get('stock').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Minimal Pembelian</b></div>\n                                                    <small> Minimal pembelian varian produk </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"minimumOrder\" id=\"minimumOrder-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('required') && (variant.get('minimumOrder').dirty || variant.get('minimumOrder').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <!-- If category product is Digital Goods Hide Berat dan Ukuran Product -->\n                                            <div class=\"row mb-4\" *ngIf=\"addProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Berat Varian</b></div>\n                                                    <small> Berat dari varian produk setelah dikemas. Gunakan titik untuk bilangan desimal </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"weight\" id=\"weight-{{i}}\" placeholder=\"0.1\" required type=\"text\" pattern=\"^[0-9]+(\\.[0-9]{1,2})?$\" (keypress)=\"validationService.decimalOnly($event)\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"unit\">Kilogram (kg)</span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('required') && (variant.get('weight').dirty || variant.get('weight').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\" *ngIf=\"addProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Ukuran Varian</b></div>\n                                                    <small> Ukuran dari varian produk setelah dikemas untuk menghitung volume </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"d-flex\" style=\"gap: 12px\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"length\" id=\"length-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"lengthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('required') && (variant.get('length').dirty || variant.get('length').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"width\" id=\"width-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"widthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('required') && (variant.get('width').dirty || variant.get('width').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"height\" id=\"height-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"heightUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('required') && (variant.get('height').dirty || variant.get('height').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row p-3 my-2\">\n                                <hr class=\"m-0\" />\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-6 mb-3 mb-md-0\">\n                                            <button (click)=\"changePage('list')\" id=\"backButton\" type=\"button\" class=\"btn btn-secondary btn-block ml-auto\">\n                                                <i class=\"fa fa-arrow-left in-icon\"></i> BATAL\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-8 mb-3 mb-md-0\">\n<!--                                            <button (click)=\"submitAddProduct('add')\" class=\"btn btn-secondary btn-block mr-3 mr-md-0\" id=\"saveAndAddNew\" type=\"submit\" [disabled]=\"!addProductForm.valid\" >-->\n<!--                                                SIMPAN DAN TAMBAH BARU-->\n<!--                                            </button>-->\n                                        </div>\n                                        <div class=\"col-12 col-md-4\">\n                                            <button (click)=\"submitAddProduct('list')\" class=\"btn btn-primary btn-block\" id=\"save\" type=\"submit\" [disabled]=\"!addProductForm.valid\" >SIMPAN</button>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </ng-container>\n\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {ValidationService} from \"../../../shared/service/validation.service\";\nimport {User} from \"../../../shared/models/user.model\";\nimport Swal from 'sweetalert2';\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {ProductCondition} from \"../../../shared/enum/product-condition.enum\";\nimport { Router } from '@angular/router';\nimport { NavigationConstant } from 'src/app/shared/constant/navigation.constant';\n\n@Component({\n  selector: 'app-inventory-add',\n  templateUrl: './inventory-add.component.html',\n  styleUrls: ['./inventory-add.component.css']\n})\nexport class InventoryAddComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      public validationService: ValidationService,\n      private router: Router\n      )\n  { }\n\n  ngOnInit(): void {\n    this.pageName = 'add';\n    this.initLoad();\n    this.form();\n  }\n\n  //loading component\n  loading = true;\n\n  user = new User();\n  listCategoryProduct = [];\n  public addProductForm: FormGroup;\n  pageName : String = \"\";\n  fileData: any;\n  imageToUpload1:any;\n  imageToUpload2:any;\n  imageToUpload3:any;\n  previewImageProduct1: any;\n  previewImageProduct2: any;\n  previewImageProduct3: any;\n  private apiGetProductCategory = environment.apiUrl + APIConstant.PRODUCT_CATEGORY;\n  private apiSubmitProduct = environment.apiUrl + APIConstant.PRODUCT;\n  productCondition = ProductCondition;\n\n  async initLoad(){\n    await this.getListCategoryProduct();\n    this.user = this.requestService.getUserToken();\n    this.loading = false;\n  }\n\n  form() {\n    this.addProductForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern]],\n      category: [null, [Validators.required]],\n      digitalGoods: [null, [Validators.required]],\n      description: [null, [Validators.required, Validators.pattern]],\n      image1: [null, [Validators.required]],\n      image2: [null],\n      image3: [null],\n      condition: [null, [Validators.required]],\n      variants: this.formBuilder.array([this.initVariantsProduct()])\n    });\n  }\n\n  initVariantsProduct() {\n    return this.formBuilder.group({\n      color: [null, [Validators.required, Validators.pattern]],\n      minimumOrder: [null, [Validators.required, Validators.pattern]],\n      length: [null, [Validators.required, Validators.pattern]],\n      width: [null, [Validators.required, Validators.pattern]],\n      height: [null, [Validators.required, Validators.pattern]],\n      stock: [null, [Validators.required, Validators.pattern]],\n      price: [null, [Validators.required, Validators.pattern, Validators.min(10000)]],\n      weight: [null, [Validators.required, Validators.pattern]],\n    });\n  }\n\n  getListCategoryProduct() {\n    this.requestService.get(this.apiGetProductCategory,null).subscribe(\n        (response) => {\n          this.listCategoryProduct = response;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  validateDigitalGoods(){\n      this.variants.controls.forEach((element, index) => {\n        if(this.addProductForm.get('digitalGoods').value === true){\n          element.patchValue({'width':1});\n          element.patchValue({'height':1});\n          element.patchValue({'length':1});\n          element.patchValue({'weight':1});\n        }else{\n          element.patchValue({'width':\"\"});\n          element.patchValue({'height':\"\"});\n          element.patchValue({'length':\"\"});\n          element.patchValue({'weight':\"\"});\n        }\n      })\n  }\n\n  async submitAddProduct(page: string) {\n    if (this.addProductForm.valid) {\n      let productUiId = null;\n\n      Swal.fire({\n        title: 'Tambahkan Produk Baru?',\n        text: 'Produk akan ditampilkan dan siap untuk dijual ke Pelanggan ?',\n        showCancelButton: true,\n        cancelButtonText: 'BATAL',\n        cancelButtonColor: '#666666',\n        reverseButtons: true,\n        confirmButtonColor: '#E1251B',\n        confirmButtonText: 'TAMBAHKAN',\n        showLoaderOnConfirm: true,\n        customClass: {\n          title: 'swal2-title-modal-medium'\n        },\n        preConfirm: async () => {\n          await this.requestService.post(this.apiSubmitProduct, null, this.apiModelTranslatorService.camelToSnakeCase(this.addProductForm.value))\n              .toPromise().then(async (response) => {\n                    productUiId = response.product.detail.uuid;\n                  },\n                  (error) => {\n                    this.errorService.getErrorApi(error);\n                  });\n\n          // upload image product 1\n          await this.uploadImageProduct(productUiId, this.imageToUpload1,\"0\");\n\n          //upload image product 2\n          if (this.imageToUpload2 !== null && this.imageToUpload2 !== undefined) {\n            await this.uploadImageProduct(productUiId, this.imageToUpload2,\"1\");\n          }\n\n          //upload image product 3\n          if (this.imageToUpload3 !== null && this.imageToUpload3 !== undefined) {\n            await this.uploadImageProduct(productUiId, this.imageToUpload3,\"2\");\n          }\n\n          this.changePage(page);\n          this.alertService.setProps(\"Success! Add Product\", false);\n        }\n      });\n    }\n  }\n\n  async uploadImageProduct(productUiId: string, file: File, index: string){\n    return this.requestService.uploadSingleFile(\"image\",this.apiSubmitProduct + '/' + productUiId + APIConstant.PRODUCT_IMAGES, file,index)\n        .toPromise().then((res) => {\n\n            },\n            (error) => {\n              this.errorService.getErrorApi(error);\n            });\n  }\n\n  changePage(pageName:String) {\n    this.router.navigate([NavigationConstant.ROUTING_INVENTORY]);\n    this.pageName = pageName\n  }\n\n  fileProgress(fileInput: any, name:string) {\n    this.fileData = <File>fileInput.target.files[0];\n    if(this.fileData !== undefined){\n      this.preview(name);\n    }\n  }\n\n  preview(name:string) {\n    let mimeType = this.fileData?.type;\n\n    let reader = new FileReader();\n    reader.readAsDataURL(this.fileData);\n\n    reader.onload = (_event) => {\n\n      let img = new Image();\n      img.src = reader.result as string;\n      img.onload = () => {\n        const height = img.naturalHeight;\n        const width = img.naturalWidth;\n          if(name === 'previewImageProduct1'){\n            if (mimeType.match('image.*') === null) {\n              this.addProductForm.patchValue( {'image1':null} );\n              this.alertService.setProps(\"Failed Upload Type\", true);\n            }\n            else if(this.fileData.size > 1000000){\n              this.addProductForm.patchValue( {'image1':null} );\n              this.alertService.setProps(\"Size more than 1 MB\", true);\n            }\n            else if(height < 300 || width < 300){\n              this.addProductForm.patchValue( {'image1':null} );\n              this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n            }\n            else{\n              this.previewImageProduct1 = reader.result;\n              this.imageToUpload1 = this.fileData;\n            }\n          }\n          else if(name === 'previewImageProduct2'){\n            if (mimeType.match('image.*') === null) {\n              this.addProductForm.patchValue( {'image2':null} );\n              this.alertService.setProps(\"Failed Upload Type\", true);\n            }\n            else if(this.fileData.size > 1000000){\n              this.addProductForm.patchValue( {'image2':null} );\n              this.alertService.setProps(\"Size more than 1 MB\", true);\n            }\n            else if(height < 300 || width < 300){\n              this.addProductForm.patchValue( {'image2':null} );\n              this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n            }\n            else {\n              this.previewImageProduct2 = reader.result;\n              this.imageToUpload2 = this.fileData;\n            }\n          }\n          else if(name === 'previewImageProduct3'){\n            if (mimeType.match('image.*') === null) {\n              this.addProductForm.patchValue( {'image3':null} );\n              this.alertService.setProps(\"Failed Upload Type\", true);\n            }\n            else if(this.fileData.size > 1000000){\n              this.addProductForm.patchValue( {'image3':null} );\n              this.alertService.setProps(\"Size more than 1 MB\", true);\n            }\n            else if(height < 300 || width < 300){\n              this.addProductForm.patchValue( {'image3':null} );\n              this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n            }\n            else {\n              this.previewImageProduct3 = reader.result;\n              this.imageToUpload3 = this.fileData;\n            }\n          }\n      };\n\n    }\n  }\n\n  get variants() {\n    return this.addProductForm.get('variants') as FormArray;\n  }\n\n  addNewVariant() {\n    let lengthVariant = this.variants.length;\n    if(lengthVariant < 5) {\n      this.variants.push(this.initVariantsProduct());\n      this.validateDigitalGoods();\n    }\n  }\n\n  deleteVariant() {\n    let index = this.variants.length - 1;\n    this.variants.removeAt(index);\n  }\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n        <app-inventory-list></app-inventory-list>\n    </ng-container>\n\n    <!-- Add Inventory Data-->\n    <ng-container *ngIf=\"pageName === 'edit'\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Detail Produk</h3>\n                <p>Tambahkan produk dan mulailah untuk menjual produk Anda</p>\n            </div>\n        </div>\n\n        <div class=\"alert alert-warning border-warning\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.WAITING\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-exclamation-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Produk dalam proses verifikasi </strong>\n                        <br>\n                        <span>Produk anda dalam proses verifikasi oleh tim DOKU, proses verifikasi dapat berlangsung dalam 1-2 jam.</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"alert alert-danger border-danger\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.REJECTED\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-times-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Mohon perbarui detail produk Anda </strong>\n                        <br>\n                        <span>{{\"Alasan penolakan produk: \" + productDetail.notes}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"alert alert-success border-success\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.APPROVED && productDetail.active === true\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-check-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Produk Anda sudah aktif dan live di website Anda </strong>\n                        <br>\n                        <span (click)=\"openProductLinkDetail()\" style=\"cursor: pointer\" class=\"text-primary\">Lihat Produk Live <i class=\"fas fa-external-link-alt\"></i></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"alert alert-dark border-dark\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.APPROVED && productDetail.active === false\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-question-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Produk dalam status nonaktif </strong>\n                        <br>\n                        <span>Segera aktifkan produk Anda agar dapat live di website Anda </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <form (ngSubmit)=\"submitEditProduct()\" [formGroup]=\"editProductForm\" class=\"pt-10\" id=\"editProductForm\">\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Tipe Produk</b></div>\n                                    <small>Pilih jika Anda ingin menambahkan\n                                        <span class=\"text-primary\"style=\"cursor: pointer;\" [autoClose]=\"'inside'\"\n                                              ngbPopover=\"Contoh: Voucher Pulsa, Token Listrik, Voucher Belanja, Game, dll, yang tidak memerlukan pengiriman\"\n                                              popoverTitle=\"Produk Digital\">\n                                        produk digital\n                                        </span>\n                                        yang tidak membutuhkan pengiriman</small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"physicalGoods\" formControlName=\"digitalGoods\" [value]=false (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"physicalGoods\">Produk fisik</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"digitalGoods\" formControlName=\"digitalGoods\" [value]=true (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"digitalGoods\">Produk digital</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Foto Produk</b></div>\n                                    <small>\n                                        Maksimal ukuran gambar 1 MB atau minimum 300 x 300 px. Format gambar\n                                        .jpg .jpeg atau .png\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"row mt-3 px-3\">\n\n                                                <div class=\"col-12 col-md-4\">\n                                                    <div class=\"form-group d-flex justify-content-center\">\n                                                        <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                            <label for=\"file-input1\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                                <div *ngIf=\"!previewImageProduct1\">\n                                                                    <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                    <p>Pilih Gambar</p>\n                                                                </div>\n                                                                <div *ngIf=\"previewImageProduct1\">\n                                                                    <img [src]=\"previewImageProduct1\" class=\"image-container\"/>\n                                                                </div>\n                                                            </label>\n                                                            <input id=\"file-input1\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct1')\" formControlName=\"image1\"/>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col text-danger\" *ngIf=\"editProductForm.get('image1').hasError('required') && (editProductForm.get('image1').dirty || editProductForm.get('image1').touched)\">*This field is cannot be left empty</div>\n                                                </div>\n                                                <div class=\"col-12 col-md-4\">\n                                                    <div class=\"form-group d-flex justify-content-center\">\n                                                        <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                            <label for=\"file-input2\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                                <div *ngIf=\"!previewImageProduct2\">\n                                                                    <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                    <p>Pilih Gambar</p>\n                                                                </div>\n                                                                <div *ngIf=\"previewImageProduct2\">\n                                                                    <img [src]=\"previewImageProduct2\" class=\"image-container\"/>\n                                                                </div>\n                                                            </label>\n                                                            <input id=\"file-input2\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct2')\"/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-12 col-md-4\">\n                                                    <div class=\"form-group d-flex justify-content-center\">\n                                                        <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                            <label for=\"file-input3\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                                <div *ngIf=\"!previewImageProduct3\">\n                                                                    <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                    <p>Pilih Gambar</p>\n                                                                </div>\n                                                                <div *ngIf=\"previewImageProduct3\">\n                                                                    <img [src]=\"previewImageProduct3\" class=\"image-container\"/>\n                                                                </div>\n                                                            </label>\n                                                            <input id=\"file-input3\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct3')\"/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Nama Produk</b></div>\n                                    <small> Cantumkan maksimal 238 karakter terdiri dari jenis produk, merek, dan keterangan seperti warna, bahan, atau tipe </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <input class=\"form-control dk-text-input\" formControlName=\"name\" id=\"name\" placeholder=\"Baju lengan panjang\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" maxlength=\"238\">\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('name').hasError('required') && (editProductForm.get('name').dirty || editProductForm.get('name').touched)\">*This field is cannot be left empty</div>\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('name').hasError('pattern')\">*This field is not valid input text</div>\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('name').hasError('maxLength')\">*Maksimal 238 karakter</div>\n                                </div>\n                            </div>\n\n                            <hr class=\"row p-3 my-2\">\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kategori</b></div>\n                                    <small> Pilih kategori yang sesuai dengan produk Anda </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <ng-select [multiple]=\"false\" formControlName=\"category\" id=\"category\" placeholder=\"Pilih kategori produk\">\n                                        <ng-option *ngFor=\"let categoryProduct of listCategoryProduct\" [value]=\"categoryProduct\">{{categoryProduct}}</ng-option>\n                                    </ng-select>\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('category').hasError('required') && (editProductForm.get('category').dirty || editProductForm.get('category').touched)\">*This field is cannot be left empty</div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kondisi</b></div>\n                                    <small> Pilih kondisi produk yang dijual </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input type=\"radio\" id=\"conditionNew\" [value]=productCondition.New formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionNew\">Baru</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input type=\"radio\" id=\"conditionUsed\" [value]=productCondition.Used formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionUsed\">Bekas</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Deskripsi Produk</b></div>\n                                    <small>\n                                        Pastikan deskripsi produk memuat spesifikasi, ukuran, bahan, masa\n                                        berlaku, dan lainnya. Cantumkan maksimal 260 karakter agar pembeli\n                                        semakin mudah mengerti produk Anda\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <textarea class=\"form-control dk-text-input\" formControlName=\"description\" id=\"description\" placeholder=\"Deskripsi produk anda\" required pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" rows=\"4\" maxlength=\"260\"></textarea>\n                                        <div class=\"text-danger\" *ngIf=\"editProductForm.get('description').hasError('required') && (editProductForm.get('description').dirty || editProductForm.get('description').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"text-danger\" *ngIf=\"editProductForm.get('description').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-3\" style=\"margin-bottom: auto; margin-top: auto\">\n                                    <h4 style=\"margin-bottom: auto; margin-top: auto\">Informasi Penjualan</h4>\n                                </div>\n                            </div>\n\n                            <!-- Varian Produk -->\n                            <div formArrayName=\"variants\">\n                                <div *ngFor=\"let variant of editProductForm.get('variants')['controls']; let i=index;\" [formGroupName]=\"i\">\n                                    <div class=\"row px-3 mb-3\">\n                                        <div class=\"col-12 rounded p-3\" style=\"border: 1px dashed #cccccc\">\n                                            <div class=\"row mb-2\">\n                                                <div class=\"d-flex px-3 mb-3 w-100 align-items-center\">\n                                                    <h4 class=\"d-inline-block m-0\">Varian {{i+1}}</h4>\n                                                    <div *ngIf=\"productStatus[productDetail.status] === productStatus.APPROVED\" class=\"custom-control custom-switch d-inline-block\">\n                                                        <input id=\"{{'swtVariant-' + i}}\" type=\"checkbox\" class=\"switch\" [checked]=\"variant.get('active').value\" (change)=\"inactiveVariant(variant.get('uiId').value, 'swtVariant-' + i)\"/>\n                                                        <label for=\"{{'swtVariant-' + i}}\">Aktif</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Nama Varian</b></div>\n                                                    <small> Varian nama dari produk yang Anda jual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"form-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"color\" id=\"color-{{i}}\" placeholder=\"Merah\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\">\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('required') && (variant.get('color').dirty || variant.get('color').touched)\">*This field is cannot be left empty</div>\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('pattern')\">*This field is not valid input text</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Harga Varian</b></div>\n                                                    <small> Harga dari varian produk yang Anda jual. Harga minimum Rp 10.000, tanpa titik </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"currency\">Rp</span>\n                                                        </div>\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"price\" id=\"price-{{i}}\" placeholder=\"10000\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('required') && (variant.get('price').dirty || variant.get('price').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('pattern')\">*This field is not valid input text</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('min')\">*Minimal harga 10000</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Stok Varian</b></div>\n                                                    <small> Jumlah varian produk yang dijual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"stock\" id=\"stock-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('required') && (variant.get('stock').dirty || variant.get('stock').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Minimal Pembelian</b></div>\n                                                    <small> Minimal pembelian varian produk </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"minimumOrder\" id=\"minimumOrder-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('required') && (variant.get('minimumOrder').dirty || variant.get('minimumOrder').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <!-- If category product is Digital Goods Hide Berat dan Ukuran Product -->\n                                            <div class=\"row mb-4\" *ngIf=\"editProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Berat Varian</b></div>\n                                                    <small> Berat dari varian produk setelah dikemas. Gunakan titik untuk bilangan desimal </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"weight\" id=\"weight-{{i}}\" placeholder=\"0.1\" required type=\"text\" pattern=\"^[0-9]+(\\.[0-9]{1,2})?$\" (keypress)=\"validationService.decimalOnly($event)\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"unit\">Kilogram (kg)</span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('required') && (variant.get('weight').dirty || variant.get('weight').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\" *ngIf=\"editProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Ukuran Varian</b></div>\n                                                    <small> Ukuran dari varian produk setelah dikemas untuk menghitung volume </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"d-flex\" style=\"gap: 12px\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"length\" id=\"length-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"lengthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('required') && (variant.get('length').dirty || variant.get('length').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"width\" id=\"width-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"widthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('required') && (variant.get('width').dirty || variant.get('width').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"height\" id=\"height-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"heightUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('required') && (variant.get('height').dirty || variant.get('height').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row p-3 my-2\">\n                                <hr class=\"m-0\" />\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-6 mb-3 mb-md-0\">\n                                            <button (click)=\"changePage('list')\" id=\"backButton\" type=\"button\" class=\"btn btn-secondary btn-block ml-auto\">\n                                                <i class=\"fa fa-arrow-left in-icon\"></i> BATAL\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-8 mb-3 mb-md-0\">\n                                            <!--                                            <button (click)=\"submitAddProduct('add')\" class=\"btn btn-secondary btn-block mr-3 mr-md-0\" id=\"saveAndAddNew\" type=\"submit\" [disabled]=\"!editProductForm.valid\" >-->\n                                            <!--                                                SIMPAN DAN TAMBAH BARU-->\n                                            <!--                                            </button>-->\n                                        </div>\n                                        <div class=\"col-12 col-md-4\">\n                                            <button class=\"btn btn-primary btn-block\" id=\"save\" type=\"submit\" [disabled]=\"!editProductForm.valid\" >SIMPAN</button>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </ng-container>\n\n</ng-template>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {ValidationService} from \"../../../shared/service/validation.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../../../shared/models/user.model\";\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport Swal from \"sweetalert2\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport {Product, Variant} from \"../../../shared/models/product.model\";\nimport {ProductCondition} from \"../../../shared/enum/product-condition.enum\";\nimport {ProductStatus} from \"../../../shared/enum/product-status.enum\";\n\n@Component({\n  selector: 'app-inventory-edit',\n  templateUrl: './inventory-edit.component.html',\n  styleUrls: ['./inventory-edit.component.css']\n})\nexport class InventoryEditComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      public validationService: ValidationService,\n      private modalService: NgbModal,\n      private router: Router,\n  )\n  { }\n\n  ngOnInit(): void {\n    this.pageName = 'edit';\n    this.initLoad();\n  }\n\n  //loading component\n  loading = true;\n\n  //image\n  fileData: any;\n  imageToUpload1:any;\n  imageToUpload2:any;\n  imageToUpload3:any;\n  previewImageProduct1: any;\n  previewImageProduct2: any;\n  previewImageProduct3: any;\n\n  user = new User();\n  listCategoryProduct = [];\n  private editProductForm: FormGroup;\n  productLinkRoot = environment.envUrl;\n  productLinkBusiness = \"\";\n  productLinkDetail = \"\";\n  pageName : String = \"\";\n\n  private apiGetProductCategory = environment.apiUrl + APIConstant.PRODUCT_CATEGORY;\n  private apiGetMerchatLink = environment.apiUrl + APIConstant.MERCHANT_LINK;\n  private apiProduct = environment.apiUrl + APIConstant.PRODUCT;\n  productDetail : Product = new Product();\n  productCondition = ProductCondition;\n  productStatus = ProductStatus;\n\n  titleInactiveVariant = \"Inaktif Varian ?\";\n  textInactiveVariant =\"Varian akan dinonaktifkan\";\n  confirmButtonTextInactiveVariant =\"NONAKTIF\";\n  successAllertInactiveVariant =\"Success! Inaktif Varian\";\n\n  //get variable from add component (parent)\n  @Input() productUiId: string;\n\n  async initLoad(){\n    let product : Product = await this.getDetailProduct();\n    await this.getListCategoryProduct();\n    this.form(product);\n    this.user = this.requestService.getUserToken();\n    this.productLinkBusiness = await this.getMerchantLink();\n    this.productLinkDetail = this.productLinkRoot + '/' + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/' + this.productLinkBusiness + '/' + this.productDetail.link;\n  }\n\n  form(product:Product) {\n    this.editProductForm = this.formBuilder.group({\n      name: [product?.name, [Validators.required, Validators.pattern]],\n      category: [product?.category, [Validators.required]],\n      digitalGoods: [product?.variants[0].digitalGoods, [Validators.required]],\n      description: [product?.description, [Validators.required, Validators.pattern]],\n      link: [product?.link, [Validators.required, Validators.pattern]],\n      image1: [null],\n      uiId: [this.productUiId],\n      condition: [product?.condition, [Validators.required]],\n      variants: this.formBuilder.array(product.variants.map(variant => this.initVariantsProduct(variant)))\n    });\n  }\n\n  initVariantsProduct(variant: Variant) {\n    return this.formBuilder.group({\n      uiId: [variant.uiId, [Validators.required]],\n      active:[variant.active],\n      color: [variant.color, [Validators.required, Validators.pattern]],\n      minimumOrder: [variant.minimumOrder, [Validators.required, Validators.pattern]],\n      length: [variant.length, [Validators.required, Validators.pattern]],\n      width: [variant.width, [Validators.required, Validators.pattern]],\n      height: [variant.height, [Validators.required, Validators.pattern]],\n      stock: [variant.stock, [Validators.required, Validators.pattern]],\n      price: [variant.price, [Validators.required, Validators.pattern, Validators.min(10000)]],\n      weight: [variant.weight, [Validators.required, Validators.pattern]],\n    });\n  }\n\n  getListCategoryProduct() {\n    this.requestService.get(this.apiGetProductCategory,null).subscribe(\n        (response) => {\n          this.listCategoryProduct = response;\n          this.loading = false;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  async getDetailProduct() {\n    let apiDetailProduct = this.apiProduct + '/' + this.productUiId + APIConstant.PRODUCT_DETAIL;\n\n    return this.requestService.get(apiDetailProduct,null).toPromise().then(\n        (response) => {\n          this.productDetail = this.apiModelTranslatorService.snakeToCamelCase(response);\n          this.productDetail.link = decodeURI(this.productDetail.link)\n          this.previewImageProduct1 = this.productDetail.images[0]?.url;\n          this.previewImageProduct2 = this.productDetail.images[1]?.url;\n          this.previewImageProduct3 = this.productDetail.images[2]?.url;\n          return this.productDetail;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  getMerchantLink() {\n    return this.requestService.get(this.apiGetMerchatLink,null).toPromise().then(\n        (response) => {\n          return response.merchant.link;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  submitEditProduct() {\n    if (this.editProductForm.valid) {\n      let encodedLink = encodeURI(this.editProductForm.get(\"link\").value);\n      this.editProductForm.patchValue({'link':encodedLink})\n\n      Swal.fire({\n        title: 'Ubah Produk?',\n        text: 'Informasi produk akan berubah dan ditampilkan ke website Pelanggan',\n        showCancelButton: true,\n        cancelButtonText: 'BATAL',\n        cancelButtonColor: '#666666',\n        reverseButtons: true,\n        confirmButtonColor: '#E1251B',\n        confirmButtonText: 'UBAH',\n        showLoaderOnConfirm: true,\n        customClass: {\n          title: 'swal2-title-modal-medium'\n        },\n        preConfirm: async () => {\n          this.requestService.put(this.apiProduct, null, this.apiModelTranslatorService.camelToSnakeCase(this.editProductForm.value))\n              .subscribe((res) => {\n\n                    this.router.navigate([NavigationConstant.ROUTING_INVENTORY]);\n                    this.alertService.setProps(\"Success! Edit Produk\", false);\n                  },\n                  (error) => {\n                    this.errorService.getErrorApi(error);\n                  });\n\n          // upload image product 1\n          if (this.imageToUpload1 !== null && this.imageToUpload1 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload1,\"0\");\n          }\n\n          //upload image product 2\n          if (this.imageToUpload2 !== null && this.imageToUpload2 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload2,\"1\");\n          }\n\n          //upload image product 3\n          if (this.imageToUpload3 !== null && this.imageToUpload3 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload3,\"2\");\n          }\n        }\n      });\n    }\n  }\n\n  async uploadImageProduct(productUiId: string, file: File, index: string){\n    let apiSubmitProduct = environment.apiUrl + APIConstant.PRODUCT;\n    return this.requestService.uploadSingleFile(\"image\",apiSubmitProduct + '/' + productUiId + APIConstant.PRODUCT_IMAGES, file, index)\n        .toPromise().then((res) => {\n            },\n            (error) => {\n              this.errorService.getErrorApi(error);\n            });\n  }\n\n  changePage(pageName:String) {\n    this.pageName = pageName;\n  }\n\n  fileProgress(fileInput: any, name:string) {\n    this.fileData = <File>fileInput.target.files[0];\n    if(this.fileData !== undefined){\n      this.preview(name);\n    }\n  }\n\n  preview(name:string) {\n    let mimeType = this.fileData?.type;\n\n    let reader = new FileReader();\n    reader.readAsDataURL(this.fileData);\n\n    reader.onload = (_event) => {\n\n      let img = new Image();\n      img.src = reader.result as string;\n      img.onload = () => {\n        const height = img.naturalHeight;\n        const width = img.naturalWidth;\n        if(name === 'previewImageProduct1'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else{\n            this.previewImageProduct1 = reader.result;\n            this.imageToUpload1 = this.fileData;\n          }\n        }\n        else if(name === 'previewImageProduct2'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else {\n            this.previewImageProduct2 = reader.result;\n            this.imageToUpload2 = this.fileData;\n          }\n        }\n        else if(name === 'previewImageProduct3'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else {\n            this.previewImageProduct3 = reader.result;\n            this.imageToUpload3 = this.fileData;\n          }\n        }\n      };\n\n    }\n  }\n\n  get variants() {\n    return this.editProductForm.get('variants') as FormArray;\n  }\n\n  addNewVariant() {\n    let lengthVariant = this.variants.length;\n    if(lengthVariant < 5){\n      this.variants.push(this.initVariantsProduct(new Variant()));\n      this.validateDigitalGoods();\n    }\n  }\n\n  deleteVariant() {\n    let index = this.variants.length - 1;\n    this.variants.removeAt(index);\n  }\n\n  inactiveVariant(variantUiId:string, id:string) {\n    const ele = document.getElementById(id) as HTMLInputElement;\n    if(ele.checked){\n      this.titleInactiveVariant =\"Aktif Variant ?\";\n      this.textInactiveVariant =\"Variant akan diaktifkan\";\n      this.confirmButtonTextInactiveVariant =\"AKTIF\";\n      this.successAllertInactiveVariant =\"Success! Aktif Varian\"\n    }\n    else {\n      this.titleInactiveVariant = \"Inaktif Varian ?\";\n      this.textInactiveVariant =\"Varian akan dinonaktifkan\";\n      this.confirmButtonTextInactiveVariant =\"NONAKTIF\";\n      this.successAllertInactiveVariant =\"Success! Inaktif Varian\";\n    }\n    Swal.fire({\n      title: this.titleInactiveVariant,\n      text: this.textInactiveVariant,\n      showCancelButton: true,\n      cancelButtonText: 'BATAL',\n      cancelButtonColor: '#666666',\n      reverseButtons: true,\n      confirmButtonColor: '#E1251B',\n      confirmButtonText: this.confirmButtonTextInactiveVariant,\n      showLoaderOnConfirm: true,\n      customClass: {\n        title: 'swal2-title-modal-medium'\n      },\n      preConfirm: async () => {\n        console.log(id)\n        let apiInactiveVariant = environment.apiUrl + APIConstant.PRODUCT_VARIANT + '/' + variantUiId + APIConstant.PRODUCT_ACTIVATE;\n        this.requestService.put(apiInactiveVariant, null, null)\n            .subscribe((res) => {\n                  this.router.navigate([NavigationConstant.ROUTING_INVENTORY]);\n                  ele.checked = res.current;\n                  this.alertService.setProps(this.successAllertInactiveVariant, false);\n                },\n                (error) => {\n                  ele.checked = !ele.checked;\n                  this.errorService.getErrorApi(error);\n                });\n      }\n    }).then(function (result) {\n      if (result.isDismissed) {\n        ele.checked = !ele.checked;\n      }\n    });\n  }\n\n  validateDigitalGoods(){\n    this.variants.controls.forEach((element, index) => {\n      if(this.editProductForm.get('digitalGoods').value === true){\n        element.patchValue({'width':1});\n        element.patchValue({'height':1});\n        element.patchValue({'length':1});\n        element.patchValue({'weight':1});\n      }else{\n        element.patchValue({'width':\"\"});\n        element.patchValue({'height':\"\"});\n        element.patchValue({'length':\"\"});\n        element.patchValue({'weight':\"\"});\n      }\n    })\n  }\n\n  openProductLinkDetail(){\n    window.open(this.productLinkDetail);\n  }\n\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n\n        <!--Header-->\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Daftar Produk</h3>\n                <p>Atur dan kelola produk disini</p>\n            </div>\n        </div>\n\n        <div class=\"card card-body mb-4\">\n            <div class=\"form-group row mr-1 ml-1\">\n                <div style=\"width: 30%\">\n                    <input type=\"text\" class=\"form-control dk-text-input\" placeholder=\"Cari nama produk\" id=\"inputSearch\" [(ngModel)]=\"inputSearchProduct\">\n                    <i class=\"fas fa-search field-icon pointer-cursor\" style=\"\" id=\"iconSearch\" (click)=\"findProductMerchant()\"></i>\n                </div>\n                <div class=\"d-flex ml-auto\">\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"changePage('add', null)\">Tambah Produk <i class=\"fa fa-plus in-icon\"></i></button>\n                </div>\n            </div>\n        </div>\n\n        <!-- List Inventory Data-->\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <table class=\"table table-responsive-sm table-striped\" style=\"table-layout: fixed\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Nama</th>\n                        <th scope=\"col\">Harga(Rp)</th>\n                        <th scope=\"col\">Stock</th>\n                        <th scope=\"col\">Tautan</th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                    </thead>\n\n                    <tbody *ngIf=\"productList.length !== 0\">\n                    <tr *ngFor=\"let inventory of productList; let i = index\">\n                        <td id=\"{{'name-' + i}}\" class=\"align-middle text-ellipsis text-ellipsis-breakable\"> <img class=\"image-container\" [src]=\"inventory.images[0]?.url\"> {{ inventory.name}}</td>\n                        <td id=\"{{'price-' + i}}\" class=\"align-middle\">{{ inventory.price | currency:'Rp ':'symbol-narrow':'1.0'}}</td>\n                        <td id=\"{{'stock-' + i}}\" class=\"align-middle\">{{ inventory.stock }}</td>\n                        <td id=\"{{'link-' + i}}\" class=\"align-middle text-ellipsis text-ellipsis-breakable\">{{ productLinkRoot + decodeURI(inventory.link) }}</td>\n                        <td id=\"{{'copy-' + i}}\" class=\"align-middle\"><i class=\"far fa-copy\" style=\"cursor: pointer\" (click)=\"copyMessage(productLinkRoot + decodeURI(inventory.link))\"></i></td>\n                        <td id=\"{{'status-' + i}}\" class=\"align-middle\">\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.APPROVED\" class=\"badge badge-success\"> {{productStatusEnum.ACTIVE}} </span>\n                            <span *ngIf=\"inventory.active == false && productStatusEnum[inventory.status] == productStatusEnum.APPROVED\" class=\"badge badge-secondary\"> {{productStatusEnum.NON_ACTIVE}} </span>\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.WAITING\" class=\"badge badge-warning\"> {{productStatusEnum.WAITING}} </span>\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.REJECTED\" class=\"badge badge-danger\"> {{productStatusEnum.REJECTED}} </span>\n                        </td>\n                        <td id=\"{{'action-' + i}}\">\n                            <div ngbDropdown class=\"d-inline-block\">\n                                <button class=\"btn btn-outline-primary dropdown-icon\" id=\"dropdownAction\" ngbDropdownToggle><i class=\"fa fa-ellipsis-v\"></i></button>\n                                <div ngbDropdownMenu aria-labelledby=\"dropdownAction\">\n                                    <button ngbDropdownItem (click)=\"changePage('edit', inventory.uiId)\">Lihat Detail</button>\n                                    <button *ngIf=\"inventory.active == true && (productStatusEnum[inventory.status] === productStatusEnum.APPROVED)\" ngbDropdownItem (click)=\"openModalStatusProduct(disableProduct, inventory.uiId)\">Nonaktifkan Produk</button>\n                                    <button *ngIf=\"inventory.active == false && (productStatusEnum[inventory.status] === productStatusEnum.APPROVED)\" ngbDropdownItem (click)=\"openModalStatusProduct(enableProduct, inventory.uiId)\">Aktifkan Produk</button>\n<!--                                    <button ngbDropdownItem disabled=\"true\">Bagikan</button>-->\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n\n                </table>\n\n                <div *ngIf=\"productList.length === 0\" style=\"margin-top: 100px; margin-bottom: 100px\">\n                        <div class=\"d-flex justify-content-center\" style=\"margin-bottom: 20px\">\n                            <i class=\"fas fa-search fa-8x\"></i>\n                        </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <h4>Maaf, belum ada Produk</h4>\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <span>Klik button TAMBAH PRODUK untuk</span>\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <span>menambah produk pertamamu</span>\n                    </div>\n                </div>\n\n                <div class=\"d-flex bd-highlight mb-3\">\n                    <select class=\"custom-select mr-auto bd-highlight align-middle\" style=\"width: auto\" [(ngModel)]=\"pageSize\" (ngModelChange)=\"onPageChange(page,pageSize)\">\n                        <option [ngValue]=\"5\">5 items per page</option>\n                        <option [ngValue]=\"10\">10 items per page</option>\n                        <option [ngValue]=\"15\">15 items per page</option>\n                    </select>\n                    <p class=\"card-description p-2 bd-highlight align-middle\">Showing {{startData}} to {{endData}} from {{totalData}} entries</p>\n                    <ngb-pagination class=\"p-2 bd-highlight align-middle\" [(page)]=\"page\" [pageSize]=\"pageSize\" [collectionSize]=\"totalData\" (pageChange)=\"onPageChange($event,pageSize)\" [maxSize]=\"2\"></ngb-pagination>\n                </div>\n\n            </div>\n        </div>\n    </ng-container>\n\n    <!-- Add Inventory-->\n    <ng-container *ngIf=\"pageName === 'add'\">\n        <app-inventory-add ></app-inventory-add>\n    </ng-container>\n\n    <!-- Detail/Edit Inventory-->\n    <ng-container *ngIf=\"pageName === 'edit'\">\n        <app-inventory-edit [productUiId]='productUiId'></app-inventory-edit>\n    </ng-container>\n\n</ng-template>\n\n<!--Modal Nonaktifkan Produk-->\n<ng-template #disableProduct let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\"\n                            alt=\"\">\n                </div>\n                <div class=\"header-content\">\n                    <h4>Nonaktifkan Produk?</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            Produk akan dinonaktifkan dan tidak akan tertampil pada website pelanggan Anda.\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"modal.close()\">BATAL</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"c(activateProduct())\">NONAKTIFKAN</button>\n    </div>\n</ng-template>\n\n<!--Modal Aktifkan Produk-->\n<ng-template #enableProduct let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\"\n                         alt=\"\">\n                </div>\n                <div class=\"header-content\">\n                    <h4>Aktifkan Produk?</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            Produk akan diaktifkan dan akan tertampil pada website pelanggan Anda.\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"modal.close()\">BATAL</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"c(activateProduct())\">AKTIFKAN</button>\n    </div>\n</ng-template>\n\n<!--Modal Change To Configuration-->\n<ng-template #configurationModal let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\" alt=\"\">\n                </div>\n                <div class=\"header-content mt-auto mb-auto \">\n                    <h4>Profil Toko</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            Sebelum mengaktifkan fitur ini, mohon isikan terlebih dahulu profil toko Anda.\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"c(configurationStore())\">OK</button>\n    </div>\n</ng-template>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder} from \"@angular/forms\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {User} from \"../../../shared/models/user.model\";\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {ResponseApi} from \"../../../shared/models/response-api.model\";\nimport {Product} from \"../../../shared/models/product.model\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport {ErrorCodeConstant} from \"../../../shared/constant/error-code.constant\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ProductStatus} from \"../../../shared/enum/product-status.enum\";\nimport {ApiErrorCode} from \"../../../shared/constant/api-error-code.constant\";\n\n@Component({\n  selector: 'app-inventory-list',\n  templateUrl: './inventory-list.component.html',\n  styleUrls: ['./inventory-list.component.css']\n})\nexport class InventoryListComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      private modalService: NgbModal,\n      private router: Router,\n      private activatedRoute:ActivatedRoute\n      )\n  {}\n\n  async ngOnInit() {\n    await this.initLoad();\n    // this.initLoad();\n    this.user = this.requestService.getUserToken();\n    this.productLinkBusiness = await this.getMerchantLink();\n    this.productLinkRoot = environment.envUrl + \"/\" + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/' + this.productLinkBusiness + '/';\n  }\n\n  //modal\n  @ViewChild('configurationModal') configurationModal:ElementRef;\n\n  //loading component\n  loading = true;\n  pageName : String = \"\";\n\n  //table pagination\n  page = 1;\n  pageSize = 5;\n  totalData = 0;\n  startData = 0;\n  endData = 0;\n\n  user = new User();\n  responseApi = new ResponseApi();\n  productList = new Array<Product>();\n  productStatusEnum = ProductStatus;\n  inputSearchProduct : string = null;\n\n  private apiGetProduct = environment.apiUrl + APIConstant.PRODUCT;\n  private apiGetMerchatLink = environment.apiUrl + APIConstant.MERCHANT_LINK;\n  productLinkBusiness = \"\";\n  modalUiIdProductActivate : string = \"\";\n  productLinkRoot = environment.envUrl + \"/\" + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/';\n  //transfer variable to edit component\n  public productUiId = '';\n\n  async initLoad(){\n    // await this.kybValidation();\n    this.getListInventory(this.page, this.pageSize, 'DESC', this.inputSearchProduct);\n    const pageName = this.activatedRoute?.snapshot?.queryParamMap?.get('pageName');\n    \n    this.pageName = pageName ??'list';\n  }\n\n  getListInventory(page: number, pageSize: number, sort: string, name: string) {\n    let requestParam = new Map();\n    requestParam.set('page', page-1);\n    requestParam.set('size', pageSize);\n    requestParam.set('sort', sort);\n    if(name !== null){\n        requestParam.set('name', name);\n    }\n\n    this.requestService.get(this.apiGetProduct, requestParam).subscribe(\n        (response) => {\n          this.productList = this.apiModelTranslatorService.snakeToCamelCase(response.products);\n          this.totalData = response.pageable.total_data;\n          this.startData = response.pageable.start_data;\n          this.endData = response.pageable.end_data;\n          this.loading = false;\n        }\n        ,\n        (error) => {\n            this.responseApi = error.error;\n            if(this.responseApi.error.code === ApiErrorCode.MERCHANT_NOT_FOUND){\n                this.router.navigate([NavigationConstant.ERROR_CUSTOM, ErrorCodeConstant.KYB]);\n            }\n            else if(this.responseApi.error.code === ApiErrorCode.MERCHANT_INACTIVE){\n                this.modalService.open(this.configurationModal, {backdrop: 'static', keyboard: false});\n            }\n            else{\n                this.errorService.getErrorApi(error);\n            }\n        }\n    )\n  }\n\n  getMerchantLink() {\n    return this.requestService.get(this.apiGetMerchatLink,null).toPromise().then(\n        (response) => {\n            return response.merchant.link;\n        }\n        ,\n        (error) => {\n            this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  configurationStore(){\n      window.parent.postMessage({\n          func: 'onNavigation',\n          url: '/' + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_CONFIGURATION,\n      },\"*\");\n  }\n\n  copyMessage(val: string){\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n    this.alertService.setProps(\"Product Link is already copied\", false);\n  }\n\n  changePage(pageName:string, productUiId:string) {\n      if(pageName === 'edit'){\n          this.productUiId = productUiId;\n      }\n    this.pageName = pageName;\n  }\n\n  onPageChange(page, pageSize: number) {\n    this.getListInventory(page, pageSize, 'DESC', this.inputSearchProduct);\n  }\n\n  openModalStatusProduct(idModal, productUiId:string){\n    this.modalUiIdProductActivate = productUiId;\n    this.modalService.open(idModal, {backdrop: 'static', keyboard: false});\n  }\n\n  activateProduct(){\n    let apiUpdateProductActive = this.apiGetProduct + '/' + this.modalUiIdProductActivate + APIConstant.PRODUCT_ACTIVATE;\n\n    this.requestService.put(apiUpdateProductActive, null, null).subscribe(\n        (response) => {\n          let propsAlert = \"\";\n          if(response.current === false){\n            propsAlert = \"Nonaktif\";\n          }else{\n            propsAlert = \"Aktif\";\n          }\n          this.alertService.setProps(\"Success! Status Product is \" + propsAlert, false);\n          this.getListInventory(this.page, this.pageSize, 'DESC', this.inputSearchProduct);\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n\n  }\n\n  decodeURI(param: string){\n    return decodeURI(param);\n  }\n\n  findProductMerchant(){\n      console.log(this.inputSearchProduct);\n      this.getListInventory(this.page, this.pageSize, 'DESC', this.inputSearchProduct);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InventoryListComponent} from './inventory-list/inventory-list.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgbDropdownModule, NgbPaginationModule, NgbPopoverModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {InventoryAddComponent} from './inventory-add/inventory-add.component';\nimport {NgSelectModule} from \"@ng-select/ng-select\";\nimport {InventoryEditComponent} from './inventory-edit/inventory-edit.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: InventoryListComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [InventoryListComponent, InventoryAddComponent, InventoryEditComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        NgbPaginationModule,\n        FormsModule,\n        NgbDropdownModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        NgbPopoverModule\n    ]\n})\nexport class InventoryModule { }\n"]}