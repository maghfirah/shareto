{"version":3,"file":"src_app_modules_inventory_inventory_module_ts-es2015.js","mappings":"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","sources":["./src/app/modules/inventory/inventory-add/inventory-add.component.ts","./src/app/modules/inventory/inventory-add/inventory-add.component.html","./src/app/modules/inventory/inventory-edit/inventory-edit.component.ts","./src/app/modules/inventory/inventory-edit/inventory-edit.component.html","./src/app/modules/inventory/inventory-list/inventory-list.component.ts","./src/app/modules/inventory/inventory-list/inventory-list.component.html","./src/app/modules/inventory/inventory.module.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {ValidationService} from \"../../../shared/service/validation.service\";\nimport {User} from \"../../../shared/models/user.model\";\nimport Swal from 'sweetalert2';\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {ProductCondition} from \"../../../shared/enum/product-condition.enum\";\nimport { Router } from '@angular/router';\nimport { NavigationConstant } from 'src/app/shared/constant/navigation.constant';\n\n@Component({\n  selector: 'app-inventory-add',\n  templateUrl: './inventory-add.component.html',\n  styleUrls: ['./inventory-add.component.css']\n})\nexport class InventoryAddComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      public validationService: ValidationService,\n      private router: Router\n      )\n  { }\n\n  ngOnInit(): void {\n    this.pageName = 'add';\n    this.initLoad();\n    this.form();\n  }\n\n  //loading component\n  loading = true;\n\n  user = new User();\n  listCategoryProduct = [];\n  public addProductForm: FormGroup;\n  pageName : String = \"\";\n  fileData: any;\n  imageToUpload1:any;\n  imageToUpload2:any;\n  imageToUpload3:any;\n  previewImageProduct1: any;\n  previewImageProduct2: any;\n  previewImageProduct3: any;\n  private apiGetProductCategory = environment.apiUrl + APIConstant.PRODUCT_CATEGORY;\n  private apiSubmitProduct = environment.apiUrl + APIConstant.PRODUCT;\n  productCondition = ProductCondition;\n\n  async initLoad(){\n    await this.getListCategoryProduct();\n    this.user = this.requestService.getUserToken();\n    this.loading = false;\n  }\n\n  form() {\n    this.addProductForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern]],\n      category: [null, [Validators.required]],\n      digitalGoods: [null, [Validators.required]],\n      description: [null, [Validators.required, Validators.pattern]],\n      image1: [null, [Validators.required]],\n      image2: [null],\n      image3: [null],\n      condition: [null, [Validators.required]],\n      variants: this.formBuilder.array([this.initVariantsProduct()])\n    });\n  }\n\n  initVariantsProduct() {\n    return this.formBuilder.group({\n      color: [null, [Validators.required, Validators.pattern]],\n      minimumOrder: [null, [Validators.required, Validators.pattern]],\n      length: [null, [Validators.required, Validators.pattern]],\n      width: [null, [Validators.required, Validators.pattern]],\n      height: [null, [Validators.required, Validators.pattern]],\n      stock: [null, [Validators.required, Validators.pattern]],\n      price: [null, [Validators.required, Validators.pattern, Validators.min(10000)]],\n      weight: [null, [Validators.required, Validators.pattern]],\n    });\n  }\n\n  getListCategoryProduct() {\n    this.requestService.get(this.apiGetProductCategory,null).subscribe(\n        (response) => {\n          this.listCategoryProduct = response;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  validateDigitalGoods(){\n      this.variants.controls.forEach((element, index) => {\n        if(this.addProductForm.get('digitalGoods').value === true){\n          element.patchValue({'width':1});\n          element.patchValue({'height':1});\n          element.patchValue({'length':1});\n          element.patchValue({'weight':1});\n        }else{\n          element.patchValue({'width':\"\"});\n          element.patchValue({'height':\"\"});\n          element.patchValue({'length':\"\"});\n          element.patchValue({'weight':\"\"});\n        }\n      })\n  }\n\n  async submitAddProduct(page: string) {\n    if (this.addProductForm.valid) {\n      let productUiId = null;\n\n      Swal.fire({\n        title: 'Tambahkan Produk Baru?',\n        text: 'Produk akan ditampilkan dan siap untuk dijual ke Pelanggan ?',\n        showCancelButton: true,\n        cancelButtonText: 'BATAL',\n        cancelButtonColor: '#666666',\n        reverseButtons: true,\n        confirmButtonColor: '#E1251B',\n        confirmButtonText: 'TAMBAHKAN',\n        showLoaderOnConfirm: true,\n        customClass: {\n          title: 'swal2-title-modal-medium'\n        },\n        preConfirm: async () => {\n          await this.requestService.post(this.apiSubmitProduct, null, this.apiModelTranslatorService.camelToSnakeCase(this.addProductForm.value))\n              .toPromise().then(async (response) => {\n                    productUiId = response.product.detail.uuid;\n                  },\n                  (error) => {\n                    this.errorService.getErrorApi(error);\n                  });\n\n          // upload image product 1\n          await this.uploadImageProduct(productUiId, this.imageToUpload1,\"0\");\n\n          //upload image product 2\n          if (this.imageToUpload2 !== null && this.imageToUpload2 !== undefined) {\n            await this.uploadImageProduct(productUiId, this.imageToUpload2,\"1\");\n          }\n\n          //upload image product 3\n          if (this.imageToUpload3 !== null && this.imageToUpload3 !== undefined) {\n            await this.uploadImageProduct(productUiId, this.imageToUpload3,\"2\");\n          }\n\n          this.changePage(page);\n          this.alertService.setProps(\"Success! Add Product\", false);\n        }\n      });\n    }\n  }\n\n  async uploadImageProduct(productUiId: string, file: File, index: string){\n    return this.requestService.uploadSingleFile(\"image\",this.apiSubmitProduct + '/' + productUiId + APIConstant.PRODUCT_IMAGES, file,index)\n        .toPromise().then((res) => {\n\n            },\n            (error) => {\n              this.errorService.getErrorApi(error);\n            });\n  }\n\n  changePage(pageName:String) {\n    this.router.navigate([NavigationConstant.ROUTING_INVENTORY]);\n    this.pageName = pageName\n  }\n\n  fileProgress(fileInput: any, name:string) {\n    this.fileData = <File>fileInput.target.files[0];\n    if(this.fileData !== undefined){\n      this.preview(name);\n    }\n  }\n\n  preview(name:string) {\n    let mimeType = this.fileData?.type;\n\n    let reader = new FileReader();\n    reader.readAsDataURL(this.fileData);\n\n    reader.onload = (_event) => {\n\n      let img = new Image();\n      img.src = reader.result as string;\n      img.onload = () => {\n        const height = img.naturalHeight;\n        const width = img.naturalWidth;\n          if(name === 'previewImageProduct1'){\n            if (mimeType.match('image.*') === null) {\n              this.addProductForm.patchValue( {'image1':null} );\n              this.alertService.setProps(\"Failed Upload Type\", true);\n            }\n            else if(this.fileData.size > 1000000){\n              this.addProductForm.patchValue( {'image1':null} );\n              this.alertService.setProps(\"Size more than 1 MB\", true);\n            }\n            else if(height < 300 || width < 300){\n              this.addProductForm.patchValue( {'image1':null} );\n              this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n            }\n            else{\n              this.previewImageProduct1 = reader.result;\n              this.imageToUpload1 = this.fileData;\n            }\n          }\n          else if(name === 'previewImageProduct2'){\n            if (mimeType.match('image.*') === null) {\n              this.addProductForm.patchValue( {'image2':null} );\n              this.alertService.setProps(\"Failed Upload Type\", true);\n            }\n            else if(this.fileData.size > 1000000){\n              this.addProductForm.patchValue( {'image2':null} );\n              this.alertService.setProps(\"Size more than 1 MB\", true);\n            }\n            else if(height < 300 || width < 300){\n              this.addProductForm.patchValue( {'image2':null} );\n              this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n            }\n            else {\n              this.previewImageProduct2 = reader.result;\n              this.imageToUpload2 = this.fileData;\n            }\n          }\n          else if(name === 'previewImageProduct3'){\n            if (mimeType.match('image.*') === null) {\n              this.addProductForm.patchValue( {'image3':null} );\n              this.alertService.setProps(\"Failed Upload Type\", true);\n            }\n            else if(this.fileData.size > 1000000){\n              this.addProductForm.patchValue( {'image3':null} );\n              this.alertService.setProps(\"Size more than 1 MB\", true);\n            }\n            else if(height < 300 || width < 300){\n              this.addProductForm.patchValue( {'image3':null} );\n              this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n            }\n            else {\n              this.previewImageProduct3 = reader.result;\n              this.imageToUpload3 = this.fileData;\n            }\n          }\n      };\n\n    }\n  }\n\n  get variants() {\n    return this.addProductForm.get('variants') as FormArray;\n  }\n\n  addNewVariant() {\n    let lengthVariant = this.variants.length;\n    if(lengthVariant < 5) {\n      this.variants.push(this.initVariantsProduct());\n      this.validateDigitalGoods();\n    }\n  }\n\n  deleteVariant() {\n    let index = this.variants.length - 1;\n    this.variants.removeAt(index);\n  }\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n        <app-inventory-list></app-inventory-list>\n    </ng-container>\n\n    <!-- Add Inventory Data-->\n    <ng-container *ngIf=\"pageName === 'add'\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Tambah Produk</h3>\n                <p>Tambahkan produk dan mulailah untuk menjual produk Anda</p>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <form [formGroup]=\"addProductForm\" class=\"pt-10\" id=\"addProductForm\">\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Tipe Produk</b></div>\n                                    <small>Pilih jika Anda ingin menambahkan\n                                        <span class=\"text-primary\"style=\"cursor: pointer;\" [autoClose]=\"'inside'\"\n                                              ngbPopover=\"Contoh: Voucher Pulsa, Token Listrik, Voucher Belanja, Game, dll, yang tidak memerlukan pengiriman\"\n                                              popoverTitle=\"Produk Digital\">\n                                        produk digital\n                                        </span>\n                                    yang tidak membutuhkan pengiriman</small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"physicalGoods\" formControlName=\"digitalGoods\" [value]=false (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"physicalGoods\">Produk fisik</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"digitalGoods\" formControlName=\"digitalGoods\" [value]=true (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"digitalGoods\">Produk digital</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Foto Produk</b></div>\n                                    <small>\n                                        Maksimal ukuran gambar 1 MB atau minimum 300 x 300 px. Format gambar\n                                        .jpg .jpeg atau .png\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"row mt-3 px-3\">\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"form-group d-flex justify-content-center\">\n                                                    <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                        <label for=\"file-input1\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                            <div *ngIf=\"!previewImageProduct1\">\n                                                                <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                <p>Pilih Gambar</p>\n                                                            </div>\n                                                            <div *ngIf=\"previewImageProduct1\">\n                                                                <img [src]=\"previewImageProduct1\" class=\"image-container\"/>\n                                                            </div>\n                                                        </label>\n                                                        <input id=\"file-input1\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\" (change)=\"fileProgress($event, 'previewImageProduct1')\" formControlName=\"image1\"/>\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group d-flex justify-content-center text-danger\" *ngIf=\"addProductForm.get('image1').hasError('required') && (addProductForm.get('image1').dirty || addProductForm.get('image1').touched)\">*This field is cannot be left empty</div>\n                                            </div>\n\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"form-group d-flex justify-content-center\">\n                                                    <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                        <label for=\"file-input2\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                            <div *ngIf=\"!previewImageProduct2\">\n                                                                <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                <p>Pilih Gambar</p>\n                                                            </div>\n                                                            <div *ngIf=\"previewImageProduct2\">\n                                                                <img [src]=\"previewImageProduct2\" class=\"image-container\"/>\n                                                            </div>\n                                                        </label>\n                                                        <input id=\"file-input2\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct2')\" formControlName=\"image2\"/>\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group d-flex justify-content-center text-danger\" *ngIf=\"addProductForm.get('image2').hasError('required') && (addProductForm.get('image2').dirty || addProductForm.get('image2').touched)\">*This field is cannot be left empty</div>\n                                            </div>\n\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"form-group d-flex justify-content-center\">\n                                                    <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                        <label for=\"file-input3\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                            <div *ngIf=\"!previewImageProduct3\">\n                                                                <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                <p>Pilih Gambar</p>\n                                                            </div>\n                                                            <div *ngIf=\"previewImageProduct3\">\n                                                                <img [src]=\"previewImageProduct3\" class=\"image-container\"/>\n                                                            </div>\n                                                        </label>\n                                                        <input id=\"file-input3\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct3')\" formControlName=\"image3\"/>\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group d-flex justify-content-center text-danger\" *ngIf=\"addProductForm.get('image3').hasError('required') && (addProductForm.get('image3').dirty || addProductForm.get('image3').touched)\">*This field is cannot be left empty</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Nama Produk</b></div>\n                                    <small> Cantumkan maksimal 238 karakter terdiri dari jenis produk, merek, dan keterangan seperti warna, bahan, atau tipe </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <input class=\"form-control dk-text-input\" formControlName=\"name\" id=\"name\" placeholder=\"Baju lengan panjang\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" maxlength=\"238\">\n                                    <div class=\"text-danger\" *ngIf=\"addProductForm.get('name').hasError('required') && (addProductForm.get('name').dirty || addProductForm.get('name').touched)\">*This field is cannot be left empty</div>\n                                    <div class=\"text-danger\" *ngIf=\"addProductForm.get('name').hasError('pattern')\">*This field is not valid input text</div>\n                                </div>\n                            </div>\n\n                            <hr class=\"row p-3 my-2\">\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kategori</b></div>\n                                    <small> Pilih kategori yang sesuai dengan produk Anda </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <ng-select [multiple]=\"false\" formControlName=\"category\" id=\"category\" placeholder=\"Pilih kategori produk\">\n                                        <ng-option *ngFor=\"let categoryProduct of listCategoryProduct\" [value]=\"categoryProduct\">{{categoryProduct}}</ng-option>\n                                    </ng-select>\n                                    <div class=\"text-danger\" *ngIf=\"addProductForm.get('category').hasError('required') && (addProductForm.get('category').dirty || addProductForm.get('category').touched)\">*This field is cannot be left empty</div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kondisi</b></div>\n                                    <small> Pilih kondisi produk yang dijual </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input type=\"radio\" id=\"conditionNew\" [value]=productCondition.New formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionNew\">Baru</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input type=\"radio\" id=\"conditionUsed\" [value]=productCondition.Used formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionUsed\">Bekas</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Deskripsi Produk</b></div>\n                                    <small>\n                                        Pastikan deskripsi produk memuat spesifikasi, ukuran, bahan, masa\n                                        berlaku, dan lainnya. Cantumkan maksimal 260 karakter agar pembeli\n                                        semakin mudah mengerti produk Anda\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <textarea class=\"form-control dk-text-input\" formControlName=\"description\" id=\"description\" placeholder=\"Deskripsi produk anda\" required pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" rows=\"4\" maxlength=\"260\"></textarea>\n                                        <div class=\"text-danger\" *ngIf=\"addProductForm.get('description').hasError('required') && (addProductForm.get('description').dirty || addProductForm.get('description').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"text-danger\" *ngIf=\"addProductForm.get('description').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-3\" style=\"margin-bottom: auto; margin-top: auto\">\n                                    <h4 style=\"margin-bottom: auto; margin-top: auto\">Informasi Penjualan</h4>\n                                </div>\n                                <div class=\"col-9\">\n                                    <button class=\"btn btn-secondary btn-sm ml-auto\" style=\"float: right\" *ngIf=\"variants.length < 5\" type=\"button\" id=\"addVariant\" (click)=\"addNewVariant()\">\n                                        <i class=\"fa fa-plus in-icon\"></i> Tambah Varian\n                                    </button>\n\n                                    <button class=\"btn btn-secondary btn-sm ml-auto mr-3\" style=\"float: right\" *ngIf=\"variants.length > 1\" type=\"button\" id=\"deleteVariant\" (click)=\"deleteVariant()\">\n                                        <i class=\"fa fa-minus in-icon\"></i> Hapus Varian\n                                    </button>\n\n                                </div>\n                            </div>\n\n                            <!-- Varian Produk -->\n                            <div formArrayName=\"variants\">\n                                <div *ngFor=\"let variant of addProductForm.get('variants')['controls']; let i=index;\" [formGroupName]=\"i\">\n                                    <div class=\"row px-3 mb-3\">\n                                        <div class=\"col-12 rounded p-3\" style=\"border: 1px dashed #cccccc\">\n                                            <div class=\"row mb-2\">\n                                                <div class=\"d-flex px-3 mb-3 w-100 align-items-center\">\n                                                    <h4 class=\"d-inline-block m-0\">Varian {{i+1}}</h4>\n<!--                                                    <div class=\"custom-control custom-switch d-inline-block\">-->\n<!--                                                        <input id=\"s1\" type=\"checkbox\" class=\"switch\" />-->\n<!--                                                        <label for=\"s1\">Aktif</label>-->\n<!--                                                    </div>-->\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Nama Varian</b></div>\n                                                    <small> Varian nama dari produk yang Anda jual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"form-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"color\" id=\"color-{{i}}\" placeholder=\"Merah\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\">\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('required') && (variant.get('color').dirty || variant.get('color').touched)\">*This field is cannot be left empty</div>\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('pattern')\">*This field is not valid input text</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Harga Varian</b></div>\n                                                    <small> Harga dari varian produk yang Anda jual. Harga minimum Rp 10.000, tanpa titik </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"currency\">Rp</span>\n                                                        </div>\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"price\" id=\"price-{{i}}\" placeholder=\"10000\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('required') && (variant.get('price').dirty || variant.get('price').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('pattern')\">*This field is not valid input text</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('min')\">*Minimal harga 10000</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Stok Varian</b></div>\n                                                    <small> Jumlah varian produk yang dijual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"stock\" id=\"stock-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('required') && (variant.get('stock').dirty || variant.get('stock').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Minimal Pembelian</b></div>\n                                                    <small> Minimal pembelian varian produk </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"minimumOrder\" id=\"minimumOrder-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('required') && (variant.get('minimumOrder').dirty || variant.get('minimumOrder').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <!-- If category product is Digital Goods Hide Berat dan Ukuran Product -->\n                                            <div class=\"row mb-4\" *ngIf=\"addProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Berat Varian</b></div>\n                                                    <small> Berat dari varian produk setelah dikemas. Gunakan titik untuk bilangan desimal </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"weight\" id=\"weight-{{i}}\" placeholder=\"0.1\" required type=\"text\" pattern=\"^[0-9]+(\\.[0-9]{1,2})?$\" (keypress)=\"validationService.decimalOnly($event)\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"unit\">Kilogram (kg)</span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('required') && (variant.get('weight').dirty || variant.get('weight').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\" *ngIf=\"addProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Ukuran Varian</b></div>\n                                                    <small> Ukuran dari varian produk setelah dikemas untuk menghitung volume </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"d-flex\" style=\"gap: 12px\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"length\" id=\"length-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"lengthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('required') && (variant.get('length').dirty || variant.get('length').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"width\" id=\"width-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"widthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('required') && (variant.get('width').dirty || variant.get('width').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"height\" id=\"height-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"heightUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('required') && (variant.get('height').dirty || variant.get('height').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row p-3 my-2\">\n                                <hr class=\"m-0\" />\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-6 mb-3 mb-md-0\">\n                                            <button (click)=\"changePage('list')\" id=\"backButton\" type=\"button\" class=\"btn btn-secondary btn-block ml-auto\">\n                                                <i class=\"fa fa-arrow-left in-icon\"></i> BATAL\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-8 mb-3 mb-md-0\">\n<!--                                            <button (click)=\"submitAddProduct('add')\" class=\"btn btn-secondary btn-block mr-3 mr-md-0\" id=\"saveAndAddNew\" type=\"submit\" [disabled]=\"!addProductForm.valid\" >-->\n<!--                                                SIMPAN DAN TAMBAH BARU-->\n<!--                                            </button>-->\n                                        </div>\n                                        <div class=\"col-12 col-md-4\">\n                                            <button (click)=\"submitAddProduct('list')\" class=\"btn btn-primary btn-block\" id=\"save\" type=\"submit\" [disabled]=\"!addProductForm.valid\" >SIMPAN</button>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </ng-container>\n\n</ng-template>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {ValidationService} from \"../../../shared/service/validation.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../../../shared/models/user.model\";\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport Swal from \"sweetalert2\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport {Product, Variant} from \"../../../shared/models/product.model\";\nimport {ProductCondition} from \"../../../shared/enum/product-condition.enum\";\nimport {ProductStatus} from \"../../../shared/enum/product-status.enum\";\n\n@Component({\n  selector: 'app-inventory-edit',\n  templateUrl: './inventory-edit.component.html',\n  styleUrls: ['./inventory-edit.component.css']\n})\nexport class InventoryEditComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      public validationService: ValidationService,\n      private modalService: NgbModal,\n      private router: Router,\n  )\n  { }\n\n  ngOnInit(): void {\n    this.pageName = 'edit';\n    this.initLoad();\n  }\n\n  //loading component\n  loading = true;\n\n  //image\n  fileData: any;\n  imageToUpload1:any;\n  imageToUpload2:any;\n  imageToUpload3:any;\n  previewImageProduct1: any;\n  previewImageProduct2: any;\n  previewImageProduct3: any;\n\n  user = new User();\n  listCategoryProduct = [];\n  private editProductForm: FormGroup;\n  productLinkRoot = environment.envUrl;\n  productLinkBusiness = \"\";\n  productLinkDetail = \"\";\n  pageName : String = \"\";\n\n  private apiGetProductCategory = environment.apiUrl + APIConstant.PRODUCT_CATEGORY;\n  private apiGetMerchatLink = environment.apiUrl + APIConstant.MERCHANT_LINK;\n  private apiProduct = environment.apiUrl + APIConstant.PRODUCT;\n  productDetail : Product = new Product();\n  productCondition = ProductCondition;\n  productStatus = ProductStatus;\n\n  titleInactiveVariant = \"Inaktif Varian ?\";\n  textInactiveVariant =\"Varian akan dinonaktifkan\";\n  confirmButtonTextInactiveVariant =\"NONAKTIF\";\n  successAllertInactiveVariant =\"Success! Inaktif Varian\";\n\n  //get variable from add component (parent)\n  @Input() productUiId: string;\n\n  async initLoad(){\n    let product : Product = await this.getDetailProduct();\n    await this.getListCategoryProduct();\n    this.form(product);\n    this.user = this.requestService.getUserToken();\n    this.productLinkBusiness = await this.getMerchantLink();\n    this.productLinkDetail = this.productLinkRoot + '/' + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/' + this.productLinkBusiness + '/' + this.productDetail.link;\n  }\n\n  form(product:Product) {\n    this.editProductForm = this.formBuilder.group({\n      name: [product?.name, [Validators.required, Validators.pattern]],\n      category: [product?.category, [Validators.required]],\n      digitalGoods: [product?.variants[0].digitalGoods, [Validators.required]],\n      description: [product?.description, [Validators.required, Validators.pattern]],\n      link: [product?.link, [Validators.required, Validators.pattern]],\n      image1: [null],\n      uiId: [this.productUiId],\n      condition: [product?.condition, [Validators.required]],\n      variants: this.formBuilder.array(product.variants.map(variant => this.initVariantsProduct(variant)))\n    });\n  }\n\n  initVariantsProduct(variant: Variant) {\n    return this.formBuilder.group({\n      uiId: [variant.uiId, [Validators.required]],\n      active:[variant.active],\n      color: [variant.color, [Validators.required, Validators.pattern]],\n      minimumOrder: [variant.minimumOrder, [Validators.required, Validators.pattern]],\n      length: [variant.length, [Validators.required, Validators.pattern]],\n      width: [variant.width, [Validators.required, Validators.pattern]],\n      height: [variant.height, [Validators.required, Validators.pattern]],\n      stock: [variant.stock, [Validators.required, Validators.pattern]],\n      price: [variant.price, [Validators.required, Validators.pattern, Validators.min(10000)]],\n      weight: [variant.weight, [Validators.required, Validators.pattern]],\n    });\n  }\n\n  getListCategoryProduct() {\n    this.requestService.get(this.apiGetProductCategory,null).subscribe(\n        (response) => {\n          this.listCategoryProduct = response;\n          this.loading = false;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  async getDetailProduct() {\n    let apiDetailProduct = this.apiProduct + '/' + this.productUiId + APIConstant.PRODUCT_DETAIL;\n\n    return this.requestService.get(apiDetailProduct,null).toPromise().then(\n        (response) => {\n          this.productDetail = this.apiModelTranslatorService.snakeToCamelCase(response);\n          this.productDetail.link = decodeURI(this.productDetail.link)\n          this.previewImageProduct1 = this.productDetail.images[0]?.url;\n          this.previewImageProduct2 = this.productDetail.images[1]?.url;\n          this.previewImageProduct3 = this.productDetail.images[2]?.url;\n          return this.productDetail;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  getMerchantLink() {\n    return this.requestService.get(this.apiGetMerchatLink,null).toPromise().then(\n        (response) => {\n          return response.merchant.link;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  submitEditProduct() {\n    if (this.editProductForm.valid) {\n      let encodedLink = encodeURI(this.editProductForm.get(\"link\").value);\n      this.editProductForm.patchValue({'link':encodedLink})\n\n      Swal.fire({\n        title: 'Ubah Produk?',\n        text: 'Informasi produk akan berubah dan ditampilkan ke website Pelanggan',\n        showCancelButton: true,\n        cancelButtonText: 'BATAL',\n        cancelButtonColor: '#666666',\n        reverseButtons: true,\n        confirmButtonColor: '#E1251B',\n        confirmButtonText: 'UBAH',\n        showLoaderOnConfirm: true,\n        customClass: {\n          title: 'swal2-title-modal-medium'\n        },\n        preConfirm: async () => {\n          this.requestService.put(this.apiProduct, null, this.apiModelTranslatorService.camelToSnakeCase(this.editProductForm.value))\n              .subscribe((res) => {\n\n                    this.router.navigate([NavigationConstant.ROUTING_INVENTORY]);\n                    this.alertService.setProps(\"Success! Edit Produk\", false);\n                  },\n                  (error) => {\n                    this.errorService.getErrorApi(error);\n                  });\n\n          // upload image product 1\n          if (this.imageToUpload1 !== null && this.imageToUpload1 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload1,\"0\");\n          }\n\n          //upload image product 2\n          if (this.imageToUpload2 !== null && this.imageToUpload2 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload2,\"1\");\n          }\n\n          //upload image product 3\n          if (this.imageToUpload3 !== null && this.imageToUpload3 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload3,\"2\");\n          }\n        }\n      });\n    }\n  }\n\n  async uploadImageProduct(productUiId: string, file: File, index: string){\n    let apiSubmitProduct = environment.apiUrl + APIConstant.PRODUCT;\n    return this.requestService.uploadSingleFile(\"image\",apiSubmitProduct + '/' + productUiId + APIConstant.PRODUCT_IMAGES, file, index)\n        .toPromise().then((res) => {\n            },\n            (error) => {\n              this.errorService.getErrorApi(error);\n            });\n  }\n\n  changePage(pageName:String) {\n    this.pageName = pageName;\n  }\n\n  fileProgress(fileInput: any, name:string) {\n    this.fileData = <File>fileInput.target.files[0];\n    if(this.fileData !== undefined){\n      this.preview(name);\n    }\n  }\n\n  preview(name:string) {\n    let mimeType = this.fileData?.type;\n\n    let reader = new FileReader();\n    reader.readAsDataURL(this.fileData);\n\n    reader.onload = (_event) => {\n\n      let img = new Image();\n      img.src = reader.result as string;\n      img.onload = () => {\n        const height = img.naturalHeight;\n        const width = img.naturalWidth;\n        if(name === 'previewImageProduct1'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else{\n            this.previewImageProduct1 = reader.result;\n            this.imageToUpload1 = this.fileData;\n          }\n        }\n        else if(name === 'previewImageProduct2'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else {\n            this.previewImageProduct2 = reader.result;\n            this.imageToUpload2 = this.fileData;\n          }\n        }\n        else if(name === 'previewImageProduct3'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else {\n            this.previewImageProduct3 = reader.result;\n            this.imageToUpload3 = this.fileData;\n          }\n        }\n      };\n\n    }\n  }\n\n  get variants() {\n    return this.editProductForm.get('variants') as FormArray;\n  }\n\n  addNewVariant() {\n    let lengthVariant = this.variants.length;\n    if(lengthVariant < 5){\n      this.variants.push(this.initVariantsProduct(new Variant()));\n      this.validateDigitalGoods();\n    }\n  }\n\n  deleteVariant() {\n    let index = this.variants.length - 1;\n    this.variants.removeAt(index);\n  }\n\n  inactiveVariant(variantUiId:string, id:string) {\n    const ele = document.getElementById(id) as HTMLInputElement;\n    if(ele.checked){\n      this.titleInactiveVariant =\"Aktif Variant ?\";\n      this.textInactiveVariant =\"Variant akan diaktifkan\";\n      this.confirmButtonTextInactiveVariant =\"AKTIF\";\n      this.successAllertInactiveVariant =\"Success! Aktif Varian\"\n    }\n    else {\n      this.titleInactiveVariant = \"Inaktif Varian ?\";\n      this.textInactiveVariant =\"Varian akan dinonaktifkan\";\n      this.confirmButtonTextInactiveVariant =\"NONAKTIF\";\n      this.successAllertInactiveVariant =\"Success! Inaktif Varian\";\n    }\n    Swal.fire({\n      title: this.titleInactiveVariant,\n      text: this.textInactiveVariant,\n      showCancelButton: true,\n      cancelButtonText: 'BATAL',\n      cancelButtonColor: '#666666',\n      reverseButtons: true,\n      confirmButtonColor: '#E1251B',\n      confirmButtonText: this.confirmButtonTextInactiveVariant,\n      showLoaderOnConfirm: true,\n      customClass: {\n        title: 'swal2-title-modal-medium'\n      },\n      preConfirm: async () => {\n        console.log(id)\n        let apiInactiveVariant = environment.apiUrl + APIConstant.PRODUCT_VARIANT + '/' + variantUiId + APIConstant.PRODUCT_ACTIVATE;\n        this.requestService.put(apiInactiveVariant, null, null)\n            .subscribe((res) => {\n                  this.router.navigate([NavigationConstant.ROUTING_INVENTORY]);\n                  ele.checked = res.current;\n                  this.alertService.setProps(this.successAllertInactiveVariant, false);\n                },\n                (error) => {\n                  ele.checked = !ele.checked;\n                  this.errorService.getErrorApi(error);\n                });\n      }\n    }).then(function (result) {\n      if (result.isDismissed) {\n        ele.checked = !ele.checked;\n      }\n    });\n  }\n\n  validateDigitalGoods(){\n    this.variants.controls.forEach((element, index) => {\n      if(this.editProductForm.get('digitalGoods').value === true){\n        element.patchValue({'width':1});\n        element.patchValue({'height':1});\n        element.patchValue({'length':1});\n        element.patchValue({'weight':1});\n      }else{\n        element.patchValue({'width':\"\"});\n        element.patchValue({'height':\"\"});\n        element.patchValue({'length':\"\"});\n        element.patchValue({'weight':\"\"});\n      }\n    })\n  }\n\n  openProductLinkDetail(){\n    window.open(this.productLinkDetail);\n  }\n\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n        <app-inventory-list></app-inventory-list>\n    </ng-container>\n\n    <!-- Add Inventory Data-->\n    <ng-container *ngIf=\"pageName === 'edit'\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Detail Produk</h3>\n                <p>Tambahkan produk dan mulailah untuk menjual produk Anda</p>\n            </div>\n        </div>\n\n        <div class=\"alert alert-warning border-warning\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.WAITING\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-exclamation-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Produk dalam proses verifikasi </strong>\n                        <br>\n                        <span>Produk anda dalam proses verifikasi oleh tim DOKU, proses verifikasi dapat berlangsung dalam 1-2 jam.</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"alert alert-danger border-danger\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.REJECTED\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-times-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Mohon perbarui detail produk Anda </strong>\n                        <br>\n                        <span>{{\"Alasan penolakan produk: \" + productDetail.notes}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"alert alert-success border-success\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.APPROVED && productDetail.active === true\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-check-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Produk Anda sudah aktif dan live di website Anda </strong>\n                        <br>\n                        <span (click)=\"openProductLinkDetail()\" style=\"cursor: pointer\" class=\"text-primary\">Lihat Produk Live <i class=\"fas fa-external-link-alt\"></i></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"alert alert-dark border-dark\" style=\"width: 100%; border-style: solid\" *ngIf=\"productStatus[productDetail.status] === productStatus.APPROVED && productDetail.active === false\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <i class=\"fas fa-question-circle in-icon ml-3\" style=\"margin-top: auto; margin-bottom: auto\"></i>\n                    <div class=\"col\" style=\"color: #4d4d4d\">\n                        <strong>Produk dalam status nonaktif </strong>\n                        <br>\n                        <span>Segera aktifkan produk Anda agar dapat live di website Anda </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <form (ngSubmit)=\"submitEditProduct()\" [formGroup]=\"editProductForm\" class=\"pt-10\" id=\"editProductForm\">\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Tipe Produk</b></div>\n                                    <small>Pilih jika Anda ingin menambahkan\n                                        <span class=\"text-primary\"style=\"cursor: pointer;\" [autoClose]=\"'inside'\"\n                                              ngbPopover=\"Contoh: Voucher Pulsa, Token Listrik, Voucher Belanja, Game, dll, yang tidak memerlukan pengiriman\"\n                                              popoverTitle=\"Produk Digital\">\n                                        produk digital\n                                        </span>\n                                        yang tidak membutuhkan pengiriman</small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"physicalGoods\" formControlName=\"digitalGoods\" [value]=false (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"physicalGoods\">Produk fisik</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"digitalGoods\" id=\"digitalGoods\" formControlName=\"digitalGoods\" [value]=true (change)=\"validateDigitalGoods()\" />\n                                            <label class=\"form-check-label\" for=\"digitalGoods\">Produk digital</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Foto Produk</b></div>\n                                    <small>\n                                        Maksimal ukuran gambar 1 MB atau minimum 300 x 300 px. Format gambar\n                                        .jpg .jpeg atau .png\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"row mt-3 px-3\">\n\n                                                <div class=\"col-12 col-md-4\">\n                                                    <div class=\"form-group d-flex justify-content-center\">\n                                                        <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                            <label for=\"file-input1\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                                <div *ngIf=\"!previewImageProduct1\">\n                                                                    <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                    <p>Pilih Gambar</p>\n                                                                </div>\n                                                                <div *ngIf=\"previewImageProduct1\">\n                                                                    <img [src]=\"previewImageProduct1\" class=\"image-container\"/>\n                                                                </div>\n                                                            </label>\n                                                            <input id=\"file-input1\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct1')\" formControlName=\"image1\"/>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col text-danger\" *ngIf=\"editProductForm.get('image1').hasError('required') && (editProductForm.get('image1').dirty || editProductForm.get('image1').touched)\">*This field is cannot be left empty</div>\n                                                </div>\n                                                <div class=\"col-12 col-md-4\">\n                                                    <div class=\"form-group d-flex justify-content-center\">\n                                                        <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                            <label for=\"file-input2\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                                <div *ngIf=\"!previewImageProduct2\">\n                                                                    <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                    <p>Pilih Gambar</p>\n                                                                </div>\n                                                                <div *ngIf=\"previewImageProduct2\">\n                                                                    <img [src]=\"previewImageProduct2\" class=\"image-container\"/>\n                                                                </div>\n                                                            </label>\n                                                            <input id=\"file-input2\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct2')\"/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-12 col-md-4\">\n                                                    <div class=\"form-group d-flex justify-content-center\">\n                                                        <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                            <label for=\"file-input3\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                                <div *ngIf=\"!previewImageProduct3\">\n                                                                    <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                                    <p>Pilih Gambar</p>\n                                                                </div>\n                                                                <div *ngIf=\"previewImageProduct3\">\n                                                                    <img [src]=\"previewImageProduct3\" class=\"image-container\"/>\n                                                                </div>\n                                                            </label>\n                                                            <input id=\"file-input3\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct3')\"/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Nama Produk</b></div>\n                                    <small> Cantumkan maksimal 238 karakter terdiri dari jenis produk, merek, dan keterangan seperti warna, bahan, atau tipe </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <input class=\"form-control dk-text-input\" formControlName=\"name\" id=\"name\" placeholder=\"Baju lengan panjang\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" maxlength=\"238\">\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('name').hasError('required') && (editProductForm.get('name').dirty || editProductForm.get('name').touched)\">*This field is cannot be left empty</div>\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('name').hasError('pattern')\">*This field is not valid input text</div>\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('name').hasError('maxLength')\">*Maksimal 238 karakter</div>\n                                </div>\n                            </div>\n\n                            <hr class=\"row p-3 my-2\">\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kategori</b></div>\n                                    <small> Pilih kategori yang sesuai dengan produk Anda </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <ng-select [multiple]=\"false\" formControlName=\"category\" id=\"category\" placeholder=\"Pilih kategori produk\">\n                                        <ng-option *ngFor=\"let categoryProduct of listCategoryProduct\" [value]=\"categoryProduct\">{{categoryProduct}}</ng-option>\n                                    </ng-select>\n                                    <div class=\"text-danger\" *ngIf=\"editProductForm.get('category').hasError('required') && (editProductForm.get('category').dirty || editProductForm.get('category').touched)\">*This field is cannot be left empty</div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Kondisi</b></div>\n                                    <small> Pilih kondisi produk yang dijual </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check form-check-inline mr-5\">\n                                            <input type=\"radio\" id=\"conditionNew\" [value]=productCondition.New formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionNew\">Baru</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input type=\"radio\" id=\"conditionUsed\" [value]=productCondition.Used formControlName=\"condition\">\n                                            <label class=\"form-check-label\" for=\"conditionUsed\">Bekas</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                    <div><b>Deskripsi Produk</b></div>\n                                    <small>\n                                        Pastikan deskripsi produk memuat spesifikasi, ukuran, bahan, masa\n                                        berlaku, dan lainnya. Cantumkan maksimal 260 karakter agar pembeli\n                                        semakin mudah mengerti produk Anda\n                                    </small>\n                                </div>\n                                <div class=\"col-12 col-md-9\">\n                                    <div class=\"form-group\">\n                                        <textarea class=\"form-control dk-text-input\" formControlName=\"description\" id=\"description\" placeholder=\"Deskripsi produk anda\" required pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" rows=\"4\" maxlength=\"260\"></textarea>\n                                        <div class=\"text-danger\" *ngIf=\"editProductForm.get('description').hasError('required') && (editProductForm.get('description').dirty || editProductForm.get('description').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"text-danger\" *ngIf=\"editProductForm.get('description').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <div class=\"col-3\" style=\"margin-bottom: auto; margin-top: auto\">\n                                    <h4 style=\"margin-bottom: auto; margin-top: auto\">Informasi Penjualan</h4>\n                                </div>\n                            </div>\n\n                            <!-- Varian Produk -->\n                            <div formArrayName=\"variants\">\n                                <div *ngFor=\"let variant of editProductForm.get('variants')['controls']; let i=index;\" [formGroupName]=\"i\">\n                                    <div class=\"row px-3 mb-3\">\n                                        <div class=\"col-12 rounded p-3\" style=\"border: 1px dashed #cccccc\">\n                                            <div class=\"row mb-2\">\n                                                <div class=\"d-flex px-3 mb-3 w-100 align-items-center\">\n                                                    <h4 class=\"d-inline-block m-0\">Varian {{i+1}}</h4>\n                                                    <div *ngIf=\"productStatus[productDetail.status] === productStatus.APPROVED\" class=\"custom-control custom-switch d-inline-block\">\n                                                        <input id=\"{{'swtVariant-' + i}}\" type=\"checkbox\" class=\"switch\" [checked]=\"variant.get('active').value\" (change)=\"inactiveVariant(variant.get('uiId').value, 'swtVariant-' + i)\"/>\n                                                        <label for=\"{{'swtVariant-' + i}}\">Aktif</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Nama Varian</b></div>\n                                                    <small> Varian nama dari produk yang Anda jual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"form-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"color\" id=\"color-{{i}}\" placeholder=\"Merah\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\">\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('required') && (variant.get('color').dirty || variant.get('color').touched)\">*This field is cannot be left empty</div>\n                                                        <div class=\"text-danger\" *ngIf=\"variant.get('color').hasError('pattern')\">*This field is not valid input text</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Harga Varian</b></div>\n                                                    <small> Harga dari varian produk yang Anda jual. Harga minimum Rp 10.000, tanpa titik </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"currency\">Rp</span>\n                                                        </div>\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"price\" id=\"price-{{i}}\" placeholder=\"10000\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('required') && (variant.get('price').dirty || variant.get('price').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('pattern')\">*This field is not valid input text</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('price').hasError('min')\">*Minimal harga 10000</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Stok Varian</b></div>\n                                                    <small> Jumlah varian produk yang dijual </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"stock\" id=\"stock-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('required') && (variant.get('stock').dirty || variant.get('stock').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('stock').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Minimal Pembelian</b></div>\n                                                    <small> Minimal pembelian varian produk </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"minimumOrder\" id=\"minimumOrder-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('required') && (variant.get('minimumOrder').dirty || variant.get('minimumOrder').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <!-- If category product is Digital Goods Hide Berat dan Ukuran Product -->\n                                            <div class=\"row mb-4\" *ngIf=\"editProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Berat Varian</b></div>\n                                                    <small> Berat dari varian produk setelah dikemas. Gunakan titik untuk bilangan desimal </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"input-group\">\n                                                        <input class=\"form-control dk-text-input\" formControlName=\"weight\" id=\"weight-{{i}}\" placeholder=\"0.1\" required type=\"text\" pattern=\"^[0-9]+(\\.[0-9]{1,2})?$\" (keypress)=\"validationService.decimalOnly($event)\">\n                                                        <div class=\"input-group-append\">\n                                                            <span class=\"input-group-text dk-span-group\" id=\"unit\">Kilogram (kg)</span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('required') && (variant.get('weight').dirty || variant.get('weight').touched)\">*This field is cannot be left empty</div>\n                                                    <div class=\"text-danger\" *ngIf=\"variant.get('weight').hasError('pattern')\">*This field is not valid input text</div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row mb-4\" *ngIf=\"editProductForm.get('digitalGoods').value !== true\">\n                                                <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\n                                                    <div><b>Ukuran Varian</b></div>\n                                                    <small> Ukuran dari varian produk setelah dikemas untuk menghitung volume </small>\n                                                </div>\n                                                <div class=\"col-12 col-md-9\">\n                                                    <div class=\"d-flex\" style=\"gap: 12px\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"length\" id=\"length-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"lengthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('required') && (variant.get('length').dirty || variant.get('length').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"width\" id=\"width-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"widthUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('required') && (variant.get('width').dirty || variant.get('width').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('width').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input class=\"form-control dk-text-input\" formControlName=\"height\" id=\"height-{{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                                <div class=\"input-group-append\">\n                                                                    <span class=\"input-group-text dk-span-group\" id=\"heightUnit\">cm</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('required') && (variant.get('height').dirty || variant.get('height').touched)\">*This field is cannot be left empty</div>\n                                                            <div class=\"text-danger\" *ngIf=\"variant.get('height').hasError('pattern')\">*This field is not valid input text</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row p-3 my-2\">\n                                <hr class=\"m-0\" />\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-6 mb-3 mb-md-0\">\n                                            <button (click)=\"changePage('list')\" id=\"backButton\" type=\"button\" class=\"btn btn-secondary btn-block ml-auto\">\n                                                <i class=\"fa fa-arrow-left in-icon\"></i> BATAL\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-12 col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-md-8 mb-3 mb-md-0\">\n                                            <!--                                            <button (click)=\"submitAddProduct('add')\" class=\"btn btn-secondary btn-block mr-3 mr-md-0\" id=\"saveAndAddNew\" type=\"submit\" [disabled]=\"!editProductForm.valid\" >-->\n                                            <!--                                                SIMPAN DAN TAMBAH BARU-->\n                                            <!--                                            </button>-->\n                                        </div>\n                                        <div class=\"col-12 col-md-4\">\n                                            <button class=\"btn btn-primary btn-block\" id=\"save\" type=\"submit\" [disabled]=\"!editProductForm.valid\" >SIMPAN</button>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </ng-container>\n\n</ng-template>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder} from \"@angular/forms\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {User} from \"../../../shared/models/user.model\";\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {ResponseApi} from \"../../../shared/models/response-api.model\";\nimport {Product} from \"../../../shared/models/product.model\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport {ErrorCodeConstant} from \"../../../shared/constant/error-code.constant\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ProductStatus} from \"../../../shared/enum/product-status.enum\";\nimport {ApiErrorCode} from \"../../../shared/constant/api-error-code.constant\";\n\n@Component({\n  selector: 'app-inventory-list',\n  templateUrl: './inventory-list.component.html',\n  styleUrls: ['./inventory-list.component.css']\n})\nexport class InventoryListComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      private modalService: NgbModal,\n      private router: Router,\n      private activatedRoute:ActivatedRoute\n      )\n  {}\n\n  async ngOnInit() {\n    await this.initLoad();\n    // this.initLoad();\n    this.user = this.requestService.getUserToken();\n    this.productLinkBusiness = await this.getMerchantLink();\n    this.productLinkRoot = environment.envUrl + \"/\" + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/' + this.productLinkBusiness + '/';\n  }\n\n  //modal\n  @ViewChild('configurationModal') configurationModal:ElementRef;\n\n  //loading component\n  loading = true;\n  pageName : String = \"\";\n\n  //table pagination\n  page = 1;\n  pageSize = 5;\n  totalData = 0;\n  startData = 0;\n  endData = 0;\n\n  user = new User();\n  responseApi = new ResponseApi();\n  productList = new Array<Product>();\n  productStatusEnum = ProductStatus;\n  inputSearchProduct : string = null;\n\n  private apiGetProduct = environment.apiUrl + APIConstant.PRODUCT;\n  private apiGetMerchatLink = environment.apiUrl + APIConstant.MERCHANT_LINK;\n  productLinkBusiness = \"\";\n  modalUiIdProductActivate : string = \"\";\n  productLinkRoot = environment.envUrl + \"/\" + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/';\n  //transfer variable to edit component\n  public productUiId = '';\n\n  async initLoad(){\n    // await this.kybValidation();\n    this.getListInventory(this.page, this.pageSize, 'DESC', this.inputSearchProduct);\n    const pageName = this.activatedRoute?.snapshot?.queryParamMap?.get('pageName');\n    \n    this.pageName = pageName ??'list';\n  }\n\n  getListInventory(page: number, pageSize: number, sort: string, name: string) {\n    let requestParam = new Map();\n    requestParam.set('page', page-1);\n    requestParam.set('size', pageSize);\n    requestParam.set('sort', sort);\n    if(name !== null){\n        requestParam.set('name', name);\n    }\n\n    this.requestService.get(this.apiGetProduct, requestParam).subscribe(\n        (response) => {\n          this.productList = this.apiModelTranslatorService.snakeToCamelCase(response.products);\n          this.totalData = response.pageable.total_data;\n          this.startData = response.pageable.start_data;\n          this.endData = response.pageable.end_data;\n          this.loading = false;\n        }\n        ,\n        (error) => {\n            this.responseApi = error.error;\n            if(this.responseApi.error.code === ApiErrorCode.MERCHANT_NOT_FOUND){\n                this.router.navigate([NavigationConstant.ERROR_CUSTOM, ErrorCodeConstant.KYB]);\n            }\n            else if(this.responseApi.error.code === ApiErrorCode.MERCHANT_INACTIVE){\n                this.modalService.open(this.configurationModal, {backdrop: 'static', keyboard: false});\n            }\n            else{\n                this.errorService.getErrorApi(error);\n            }\n        }\n    )\n  }\n\n  getMerchantLink() {\n    return this.requestService.get(this.apiGetMerchatLink,null).toPromise().then(\n        (response) => {\n            return response.merchant.link;\n        }\n        ,\n        (error) => {\n            this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  configurationStore(){\n      window.parent.postMessage({\n          func: 'onNavigation',\n          url: '/' + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_CONFIGURATION,\n      },\"*\");\n  }\n\n  copyMessage(val: string){\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n    this.alertService.setProps(\"Product Link is already copied\", false);\n  }\n\n  changePage(pageName:string, productUiId:string) {\n      if(pageName === 'edit'){\n          this.productUiId = productUiId;\n      }\n    this.pageName = pageName;\n  }\n\n  onPageChange(page, pageSize: number) {\n    this.getListInventory(page, pageSize, 'DESC', this.inputSearchProduct);\n  }\n\n  openModalStatusProduct(idModal, productUiId:string){\n    this.modalUiIdProductActivate = productUiId;\n    this.modalService.open(idModal, {backdrop: 'static', keyboard: false});\n  }\n\n  activateProduct(){\n    let apiUpdateProductActive = this.apiGetProduct + '/' + this.modalUiIdProductActivate + APIConstant.PRODUCT_ACTIVATE;\n\n    this.requestService.put(apiUpdateProductActive, null, null).subscribe(\n        (response) => {\n          let propsAlert = \"\";\n          if(response.current === false){\n            propsAlert = \"Nonaktif\";\n          }else{\n            propsAlert = \"Aktif\";\n          }\n          this.alertService.setProps(\"Success! Status Product is \" + propsAlert, false);\n          this.getListInventory(this.page, this.pageSize, 'DESC', this.inputSearchProduct);\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n\n  }\n\n  decodeURI(param: string){\n    return decodeURI(param);\n  }\n\n  findProductMerchant(){\n      console.log(this.inputSearchProduct);\n      this.getListInventory(this.page, this.pageSize, 'DESC', this.inputSearchProduct);\n  }\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n\n        <!--Header-->\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Daftar Produk</h3>\n                <p>Atur dan kelola produk disini</p>\n            </div>\n        </div>\n\n        <div class=\"card card-body mb-4\">\n            <div class=\"form-group row mr-1 ml-1\">\n                <div style=\"width: 30%\">\n                    <input type=\"text\" class=\"form-control dk-text-input\" placeholder=\"Cari nama produk\" id=\"inputSearch\" [(ngModel)]=\"inputSearchProduct\">\n                    <i class=\"fas fa-search field-icon pointer-cursor\" style=\"\" id=\"iconSearch\" (click)=\"findProductMerchant()\"></i>\n                </div>\n                <div class=\"d-flex ml-auto\">\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"changePage('add', null)\">Tambah Produk <i class=\"fa fa-plus in-icon\"></i></button>\n                </div>\n            </div>\n        </div>\n\n        <!-- List Inventory Data-->\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <table class=\"table table-responsive-sm table-striped\" style=\"table-layout: fixed\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Nama</th>\n                        <th scope=\"col\">Harga(Rp)</th>\n                        <th scope=\"col\">Stock</th>\n                        <th scope=\"col\">Tautan</th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                    </thead>\n\n                    <tbody *ngIf=\"productList.length !== 0\">\n                    <tr *ngFor=\"let inventory of productList; let i = index\">\n                        <td id=\"{{'name-' + i}}\" class=\"align-middle text-ellipsis text-ellipsis-breakable\"> <img class=\"image-container\" [src]=\"inventory.images[0]?.url\"> {{ inventory.name}}</td>\n                        <td id=\"{{'price-' + i}}\" class=\"align-middle\">{{ inventory.price | currency:'Rp ':'symbol-narrow':'1.0'}}</td>\n                        <td id=\"{{'stock-' + i}}\" class=\"align-middle\">{{ inventory.stock }}</td>\n                        <td id=\"{{'link-' + i}}\" class=\"align-middle text-ellipsis text-ellipsis-breakable\">{{ productLinkRoot + decodeURI(inventory.link) }}</td>\n                        <td id=\"{{'copy-' + i}}\" class=\"align-middle\"><i class=\"far fa-copy\" style=\"cursor: pointer\" (click)=\"copyMessage(productLinkRoot + decodeURI(inventory.link))\"></i></td>\n                        <td id=\"{{'status-' + i}}\" class=\"align-middle\">\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.APPROVED\" class=\"badge badge-success\"> {{productStatusEnum.ACTIVE}} </span>\n                            <span *ngIf=\"inventory.active == false && productStatusEnum[inventory.status] == productStatusEnum.APPROVED\" class=\"badge badge-secondary\"> {{productStatusEnum.NON_ACTIVE}} </span>\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.WAITING\" class=\"badge badge-warning\"> {{productStatusEnum.WAITING}} </span>\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.REJECTED\" class=\"badge badge-danger\"> {{productStatusEnum.REJECTED}} </span>\n                        </td>\n                        <td id=\"{{'action-' + i}}\">\n                            <div ngbDropdown class=\"d-inline-block\">\n                                <button class=\"btn btn-outline-primary dropdown-icon\" id=\"dropdownAction\" ngbDropdownToggle><i class=\"fa fa-ellipsis-v\"></i></button>\n                                <div ngbDropdownMenu aria-labelledby=\"dropdownAction\">\n                                    <button ngbDropdownItem (click)=\"changePage('edit', inventory.uiId)\">Lihat Detail</button>\n                                    <button *ngIf=\"inventory.active == true && (productStatusEnum[inventory.status] === productStatusEnum.APPROVED)\" ngbDropdownItem (click)=\"openModalStatusProduct(disableProduct, inventory.uiId)\">Nonaktifkan Produk</button>\n                                    <button *ngIf=\"inventory.active == false && (productStatusEnum[inventory.status] === productStatusEnum.APPROVED)\" ngbDropdownItem (click)=\"openModalStatusProduct(enableProduct, inventory.uiId)\">Aktifkan Produk</button>\n<!--                                    <button ngbDropdownItem disabled=\"true\">Bagikan</button>-->\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n\n                </table>\n\n                <div *ngIf=\"productList.length === 0\" style=\"margin-top: 100px; margin-bottom: 100px\">\n                        <div class=\"d-flex justify-content-center\" style=\"margin-bottom: 20px\">\n                            <i class=\"fas fa-search fa-8x\"></i>\n                        </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <h4>Maaf, belum ada Produk</h4>\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <span>Klik button TAMBAH PRODUK untuk</span>\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <span>menambah produk pertamamu</span>\n                    </div>\n                </div>\n\n                <div class=\"d-flex bd-highlight mb-3\">\n                    <select class=\"custom-select mr-auto bd-highlight align-middle\" style=\"width: auto\" [(ngModel)]=\"pageSize\" (ngModelChange)=\"onPageChange(page,pageSize)\">\n                        <option [ngValue]=\"5\">5 items per page</option>\n                        <option [ngValue]=\"10\">10 items per page</option>\n                        <option [ngValue]=\"15\">15 items per page</option>\n                    </select>\n                    <p class=\"card-description p-2 bd-highlight align-middle\">Showing {{startData}} to {{endData}} from {{totalData}} entries</p>\n                    <ngb-pagination class=\"p-2 bd-highlight align-middle\" [(page)]=\"page\" [pageSize]=\"pageSize\" [collectionSize]=\"totalData\" (pageChange)=\"onPageChange($event,pageSize)\" [maxSize]=\"2\"></ngb-pagination>\n                </div>\n\n            </div>\n        </div>\n    </ng-container>\n\n    <!-- Add Inventory-->\n    <ng-container *ngIf=\"pageName === 'add'\">\n        <app-inventory-add ></app-inventory-add>\n    </ng-container>\n\n    <!-- Detail/Edit Inventory-->\n    <ng-container *ngIf=\"pageName === 'edit'\">\n        <app-inventory-edit [productUiId]='productUiId'></app-inventory-edit>\n    </ng-container>\n\n</ng-template>\n\n<!--Modal Nonaktifkan Produk-->\n<ng-template #disableProduct let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\"\n                            alt=\"\">\n                </div>\n                <div class=\"header-content\">\n                    <h4>Nonaktifkan Produk?</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            Produk akan dinonaktifkan dan tidak akan tertampil pada website pelanggan Anda.\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"modal.close()\">BATAL</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"c(activateProduct())\">NONAKTIFKAN</button>\n    </div>\n</ng-template>\n\n<!--Modal Aktifkan Produk-->\n<ng-template #enableProduct let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\"\n                         alt=\"\">\n                </div>\n                <div class=\"header-content\">\n                    <h4>Aktifkan Produk?</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            Produk akan diaktifkan dan akan tertampil pada website pelanggan Anda.\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"modal.close()\">BATAL</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"c(activateProduct())\">AKTIFKAN</button>\n    </div>\n</ng-template>\n\n<!--Modal Change To Configuration-->\n<ng-template #configurationModal let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\" alt=\"\">\n                </div>\n                <div class=\"header-content mt-auto mb-auto \">\n                    <h4>Profil Toko</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            Sebelum mengaktifkan fitur ini, mohon isikan terlebih dahulu profil toko Anda.\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"c(configurationStore())\">OK</button>\n    </div>\n</ng-template>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InventoryListComponent} from './inventory-list/inventory-list.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgbDropdownModule, NgbPaginationModule, NgbPopoverModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {InventoryAddComponent} from './inventory-add/inventory-add.component';\nimport {NgSelectModule} from \"@ng-select/ng-select\";\nimport {InventoryEditComponent} from './inventory-edit/inventory-edit.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: InventoryListComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [InventoryListComponent, InventoryAddComponent, InventoryEditComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        NgbPaginationModule,\n        FormsModule,\n        NgbDropdownModule,\n        NgSelectModule,\n        ReactiveFormsModule,\n        NgbPopoverModule\n    ]\n})\nexport class InventoryModule { }\n"],"names":[],"sourceRoot":"webpack:///"}