{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_10__","OrderReceiveComponent","formBuilder","requestService","alertService","errorService","router","_shared_models_response_api_model__WEBPACK_IMPORTED_MODULE_6__","initLoad","getConfigurationStoreInfo","configStore","form","receiveOrderForm","group","nomorPesanan","_angular_forms__WEBPACK_IMPORTED_MODULE_12__","apiInfoStore","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_shared_constant_api_constant__WEBPACK_IMPORTED_MODULE_2__","get","toPromise","then","response","loading","error","responseApi","code","_shared_constant_api_error_code_constant__WEBPACK_IMPORTED_MODULE_3__","navigate","_shared_constant_navigation_constant__WEBPACK_IMPORTED_MODULE_4__","_shared_constant_error_code_constant__WEBPACK_IMPORTED_MODULE_5__","getErrorApi","valid","invoiceNumber","value","invoiceNumberPath","apiOrderReceive","sweetalert2__WEBPACK_IMPORTED_MODULE_0___default","title","text","showCancelButton","cancelButtonText","cancelButtonColor","reverseButtons","confirmButtonColor","confirmButtonText","showLoaderOnConfirm","customClass","preConfirm","post","subscribe","res","setProps","selectors","decls","vars","consts","template","_r1","routes","path","component","_order_receive_order_receive_component__WEBPACK_IMPORTED_MODULE_0__","pathMatch","SimulatorModule","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_angular_router__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","declarations","imports"],"sources":["webpack:///src/app/modules/simulator/order-receive/order-receive.component.html","webpack:///src/app/modules/simulator/order-receive/order-receive.component.ts","webpack:///src/app/modules/simulator/simulator.module.ts"],"sourcesContent":["<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n    <div class=\"card\">\n        <div class=\"card-body\">\n\n            <!--Header-->\n            <div class=\"row\">\n                <div class=\"form-group col-md-12 page-header\">\n                    <h3>Simulator Receive Order</h3>\n                    <p>Simulator untuk melakukan pesanan telah diterima</p>\n                </div>\n            </div>\n\n            <!-- Input -->\n            <form (ngSubmit)=\"submitReceiveOrder()\" [formGroup]=\"receiveOrderForm\" id=\"receiveOrderForm\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md-3 page-header\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span class=\"font-weight-bold\">Nomor Pesanan</span>\n                                <br>\n                                <input class=\"form-control dk-text-input mt-2\" id=\"nomorPesanan\" placeholder=\"INV-RETAIL-12345678901234567\" formControlName=\"nomorPesanan\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| -]*$\" >\n                                <div class=\"text-danger\" *ngIf=\"receiveOrderForm.get('nomorPesanan').hasError('pattern')\">*This field is not valid input text</div>\n                                <div class=\"text-danger\" *ngIf=\"receiveOrderForm.get('nomorPesanan').hasError('required') && (receiveOrderForm.get('nomorPesanan').dirty || receiveOrderForm.get('nomorPesanan').touched)\">*This field is cannot be left empty</div>\n                                <br>\n                                <div class=\"d-flex justify-content-end\">\n                                    <button class=\"btn btn-primary\" type=\"submit\" id=\"btnSubmitOrderReceive\" [disabled]=\"!receiveOrderForm.valid\">SUBMIT</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {Router} from \"@angular/router\";\nimport {ConfigurationStoreLocation} from \"../../../shared/models/configuration-store-location.model\";\nimport {ApiErrorCode} from \"../../../shared/constant/api-error-code.constant\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport {ErrorCodeConstant} from \"../../../shared/constant/error-code.constant\";\nimport {ResponseApi} from \"../../../shared/models/response-api.model\";\n\n@Component({\n  selector: 'app-order-receive',\n  templateUrl: './order-receive.component.html',\n  styleUrls: ['./order-receive.component.css']\n})\nexport class OrderReceiveComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      private router: Router,\n  ) { }\n\n  //loading component\n  loading = true;\n\n  public receiveOrderForm: FormGroup;\n  responseApi = new ResponseApi();\n\n  async ngOnInit() {\n    await this.initLoad();\n  }\n\n  async initLoad(){\n    let configStore : ConfigurationStoreLocation = await this.getConfigurationStoreInfo();\n    this.form();\n  }\n\n  form() {\n    this.receiveOrderForm = this.formBuilder.group({\n      nomorPesanan: [null, [Validators.required]],\n    });\n  }\n\n  async getConfigurationStoreInfo() {\n    let apiInfoStore = environment.apiUrl + APIConstant.MERCHANT;\n    return this.requestService.get(apiInfoStore, null).toPromise().then(\n        (response) => {\n          this.loading = false;\n        }\n        ,\n        (error) => {\n          this.responseApi = error.error;\n          if(this.responseApi.error.code === ApiErrorCode.MERCHANT_NOT_FOUND){\n            this.loading = false;\n            this.router.navigate([NavigationConstant.ERROR_CUSTOM, ErrorCodeConstant.KYB]);\n          }\n          else{\n            this.errorService.getErrorApi(error);\n          }\n        }\n    )\n  }\n\n  submitReceiveOrder() {\n    if (this.receiveOrderForm.valid) {\n\n      let invoiceNumber = this.receiveOrderForm.get(\"nomorPesanan\").value;\n      let invoiceNumberPath = `/${invoiceNumber}/receive`;\n      let apiOrderReceive = environment.apiUrl + APIConstant.MERCHANT_ORDER + invoiceNumberPath;\n\n      Swal.fire({\n        title: 'Menerima Pesanan',\n        text: 'Apakah anda ingin merubah status pesanan anda menjadi telah diterima?',\n        showCancelButton: true,\n        cancelButtonText: 'BATAL',\n        cancelButtonColor: '#666666',\n        reverseButtons: true,\n        confirmButtonColor: '#E1251B',\n        confirmButtonText: 'DITERIMA',\n        showLoaderOnConfirm: true,\n        customClass: {\n          title: 'swal2-title-modal-medium'\n        },\n        preConfirm: async () => {\n          this.requestService.post(apiOrderReceive, null, null)\n              .subscribe((res) => {\n                    this.alertService.setProps(\"Success! Order Received\", false);\n                  },\n                  (error) => {\n                    this.errorService.getErrorApi(error);\n                  });\n        }\n      });\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrderReceiveComponent} from './order-receive/order-receive.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderReceiveComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [OrderReceiveComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n  ]\n})\nexport class SimulatorModule { }\n"]}