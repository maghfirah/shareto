{"version":3,"mappings":"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","names":["ApiErrorCode","PropConstant","LocationType","PaymentStatus","ProductCondition","ProductStatus","valueOf","request","productStatus","TransactionStatus","FormControlValidationHelper","validatorName","validatorValue","config","required","invalidEmail","invalidNumber","invalidPassword","invalidDuration","control","regex","value","match","_a","length","strongRegex","maxDuration","parseInt","AddOrder","Cart","_configuration_store_location_model__WEBPACK_IMPORTED_MODULE_0__","CartItem","_product_model__WEBPACK_IMPORTED_MODULE_1__","Item","Checkout","ConfigurationStoreLocation","_location_model__WEBPACK_IMPORTED_MODULE_0__","Location","Province","City","District","SubDistrict","PostalCode","PostalCodeCityProvince","General","OrderDetail","Merchant","Customer","OrderShipping","Payment","Milestones","OrderDetailProduct","Product","Variant","Image","Shipping","Type","Detail","ApiModelTranslatorService","str","replace","letter","toLowerCase","s","$1","toUpperCase","o","Object","Array","isArray","n","keys","forEach","k","toCamelCase","snakeToCamelCase","map","i","ToSnakeCase","camelToSnakeCase","factory","providedIn","ValidationService","event","charCode","which","keyCode"],"sources":["webpack:///src/app/shared/constant/api-error-code.constant.ts","webpack:///src/app/shared/constant/prop.constant.ts","webpack:///src/app/shared/enum/location-type.enum.ts","webpack:///src/app/shared/enum/payment-status.enum.ts","webpack:///src/app/shared/enum/product-condition.enum.ts","webpack:///src/app/shared/enum/product-status.enum.ts","webpack:///src/app/shared/enum/transaction-status.ts","webpack:///src/app/shared/helper/form-control-validation.helper.ts","webpack:///src/app/shared/models/add-order.model.ts","webpack:///src/app/shared/models/cart.model.ts","webpack:///src/app/shared/models/checkout.model.ts","webpack:///src/app/shared/models/configuration-store-location.model.ts","webpack:///src/app/shared/models/location.model.ts","webpack:///src/app/shared/models/order-detail.model.ts","webpack:///src/app/shared/models/product.model.ts","webpack:///src/app/shared/models/shipping.model.ts","webpack:///src/app/shared/service/api-model-translator.service.ts","webpack:///src/app/shared/service/validation.service.ts"],"sourcesContent":["/**\n * Kelas yang berisi kumpulan response error type dari api\n */\nexport class ApiErrorCode {\n\n    public static MERCHANT_NOT_FOUND = 'merchant_not_found';\n    public static MERCHANT_INACTIVE = 'merchant_inactive';\n    public static LINK_MERCHANT_NOT_FOUND = 'link_merchant_not_found';\n\n}\n","export class PropConstant {\n    public static COOKIE_CART_ID_TIMEOUT = \"1\";\n    public static ENV_SIMULATOR_NOT_EXIST = \"https://jokul.doku.com\";\n}\n","export enum LocationType {\n    Province = 'PROVINCE',\n    City = 'CITY',\n    District = 'DISTRICT',\n    SubDistrict = 'SUB_DISTRICT',\n    PostalCode = 'POSTAL_CODE',\n    PostalCodeCityProvince ='POSTAL_CODE_CITY_PROVINCE'\n}\n","export enum PaymentStatus {\n    Unpaid = 'UNPAID',\n    Paid = 'PAID',\n    Expired = 'EXPIRED',\n}\n","export enum ProductCondition {\n    New = 'NEW',\n    Used = 'USED',\n}\n","export enum ProductStatus {\n    WAITING = \"Proses Verifikasi\",\n    APPROVED = \"Produk Terverifikasi\",\n    REJECTED = \"Produk Ditolak\",\n    ACTIVE = \"Produk Aktif\",\n    NON_ACTIVE = \"Produk Nonaktif\",\n}\n\nexport namespace ProductStatus {\n    export function valueOf(request: string): string {\n        for(const productStatus in ProductStatus) {\n            if (request === ProductStatus[productStatus]) {\n                return productStatus;\n            }\n        }\n    }\n}\n","export enum TransactionStatus {\n    checkWaitingForPayment = 'menunggu_pembayaran',\n    checkNewOrder = 'peasanan_baru',\n    checkProccessed = 'diproses',\n    checkSent = 'dikirim',\n    checkFinished = 'selesai',\n    checkExpired = 'kadarluasa'\n}\n","export class FormControlValidationHelper {\n    static getValidatorErrorMessage(validatorName: string, validatorValue?: any) {\n        const config = {\n            required: 'Required',\n            invalidEmail: 'Invalid email address',\n            invalidNumber: 'This field can only be filled with numbers',\n            invalidPassword: 'Password Contains at least 1alphabet, 1number',\n            invalidDuration: 'Value cannot 0',\n        };\n\n    return config[validatorName];\n    }\n\n    static emailValidator(control) {\n        const regex=\"^^[a-zA-Z0-9.!#$%&’*+=?^_`{|}~-]+[^\\\\.,!#$%&’'*+=?^_`{|}~\\\\-@()\\\"<>]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z]+)*$\"\n\n        if (control.value && control.value.match(regex)) {\n            return null;\n        } else {\n            if(control.value === null || control.value?.length === 0){\n                return null;\n            }\n            else{\n                return {invalidEmail:true}\n            }\n        }\n    }\n\n    static phoneNumberValidator(control) {\n        const regex = /^[0-9]*$/;\n\n        if(control?.value || control.value === \"\"){\n            return null;\n        }\n        else if(control.value && control.value.match(regex)) {\n            return null;\n        } else {\n            return { invalidNumber: true }\n        }\n    }\n\n    static passwordValidator(control) {\n        const strongRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,16}$/;\n        //minimum 8character, max 16, at least 1lowercase,1uppercase, 1number, with optional special character\n        if(control.value && control.value.match(strongRegex)) {\n            return null\n        } else {\n            return { invalidPassword: true}\n        }\n    }\n\n    static durationValidator(control) {\n      const regex = /^[1-9][0-9]*$/;\n      let maxDuration = 1000;\n      if(control.value === \"\" || control.value === null){\n        return null;\n      } else if(control.value && control.value.match(regex) && parseInt(control.value) < maxDuration) {\n        return null\n      } else {\n        return { invalidDuration: true}\n      }\n\n    }\n\n}\n","export class AddOrder {\n    cartId: string;\n    logisticUiId: string;\n    shippingType: string;\n    notes: string;\n    useInsurance: boolean;\n}\n","import {ConfigurationStoreLocation} from \"./configuration-store-location.model\";\nimport {Product} from \"./product.model\";\n\nexport class Cart {\n    cartId: string;\n    merchant: ConfigurationStoreLocation = new ConfigurationStoreLocation();\n    cartItems: CartItem[] = [];\n    totalPrice: number;\n    digitalGoods: boolean;\n}\n\nexport class CartItem {\n    product: Product = new Product();\n    items: Item[] = [];\n    totalPrice: number;\n}\n\nexport class Item {\n    uiId: string;\n    color: string;\n    stock: number;\n    minimumOrder: number;\n    quantity: number;\n    price: number;\n    totalPrice: number;\n}\n","export class Checkout {\n    cartId: string;\n    address: string;\n    email: string;\n    name: string;\n    phoneNumber: string;\n    postalCodeUiId: string;\n}\n","import {City, District, PostalCode, PostalCodeCityProvince, Province, SubDistrict} from \"./location.model\";\n\nexport class ConfigurationStoreLocation {\n    phoneNumber: string;\n    email: string;\n    province: Province = new Province();\n    city: City = new City();\n    district: District = new District();\n    subDistrict: SubDistrict = new SubDistrict();\n    postalCode: PostalCode = new PostalCode();\n    postalCodeCityProvince : PostalCodeCityProvince = new PostalCodeCityProvince();\n    address: string;\n    postalCodeUiId: string;\n    image: string;\n    name: string;\n    link: string;\n    businessServiceClientName: string;\n}\n","export class Location {\n    province: Province[];\n    city: City[];\n    district: District[];\n    subDistrict: SubDistrict[];\n    postalCode: PostalCode[];\n    postalCodeCityProvince: PostalCodeCityProvince[];\n}\n\nexport class Province {\n    name: string;\n    uiId: string;\n}\n\nexport class City {\n    name: string;\n    uiId: string;\n}\n\nexport class District {\n    name: string;\n    uiId: string;\n}\nexport class SubDistrict {\n    name: string;\n    uiId: string;\n}\nexport class PostalCode {\n    name: string;\n    uiId: string;\n}\n\nexport class PostalCodeCityProvince {\n    name: string;\n    uiId: string;\n}\n\nexport class General {\n    name: string;\n    uiId: string;\n}\n","export class OrderDetail {\n    invoiceNumber: string;\n    createdDate: string;\n    merchant: Merchant = new Merchant();\n    customer: Customer = new Customer();\n    shipping : OrderShipping = new OrderShipping();\n    payment : Payment = new Payment();\n    milestones : Milestones[] = [];\n    serverDate: string;\n    status: string;\n    products: OrderDetailProduct[] = [];\n}\n\nexport class Merchant {\n    name: string;\n    image: string;\n}\n\nexport class Customer {\n    address: string;\n    country: string;\n    detailAddress: string;\n    email: string;\n    name: string;\n    phoneNumber: string;\n}\n\nexport class Payment {\n    amount: number;\n    channel: string;\n    itemsPrice: number;\n    shippingPrice: number;\n    status: string;\n    insurancePrice: number;\n}\n\nexport class Milestones {\n    order: number;\n    status: string;\n    createdDate: string;\n}\n\nexport class OrderShipping {\n    awbNumber: string;\n    trackingId: string;\n    name: string;\n    logoUrl: string;\n    rateName: string;\n    digitalGoods: boolean;\n}\n\nexport class OrderDetailProduct {\n    uiId: string;\n    name: string;\n    image: string;\n    items: Item[] = [];\n}\n\nexport class Item {\n    uiId: string;\n    color: string;\n    quantity: number;\n    price: number;\n    amount: number;\n}\n","import {ConfigurationStoreLocation} from \"./configuration-store-location.model\";\n\nexport class Product {\n\n    category: string;\n    code: string;\n    condition: string;\n    description: string;\n    link: string;\n    name: string;\n    variants: Variant[] = [];\n    price: number;\n    stock: number;\n    active: boolean;\n    images: Image[] = [];\n    image: string;\n    uiId: string;\n    merchant: ConfigurationStoreLocation = new ConfigurationStoreLocation();\n    status: string;\n    merchantLink: string;\n    notes: string;\n    soldProduct: number;\n}\n\nexport class Variant {\n    color: string;\n    minimumOrder: number;\n    price: number;\n    type: string;\n    height: number;\n    length: number;\n    width: number;\n    stock: number;\n    weight: number;\n    quantity: number;\n    uiId: string;\n    digitalGoods: boolean;\n    active: boolean;\n}\n\nexport class Image {\n    id: string;\n    url: string;\n}\n","export class Shipping {\n    instant : Type = new Type();\n    sameDay : Type = new Type();\n    digital : Type = new Type();\n    regular : Type = new Type();\n    express : Type = new Type();\n    trucking : Type = new Type();\n}\n\nexport class Type {\n    type : string;\n    details : Detail[] = [];\n}\n\nexport class Detail {\n    compulsoryInsurance : boolean;\n    finalRate : number; //sebelum ditambah dengan insuranceRate\n    insuranceRate : number;\n    totalRate : number;\n    logoUrl : string;\n    maxDay : number;\n    minDay : number;\n    name : string;\n    rateName : string;\n    uiId : string;\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class ApiModelTranslatorService {\n\n  ToSnakeCase (str) {\n    return str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n  }\n\n  toCamelCase(s: string) {\n    return s.replace(/([-_][a-z])/ig, ($1) => {\n      return $1.toUpperCase()\n        .replace('-', '')\n        .replace('_', '');\n    });\n  }\n\n  snakeToCamelCase(o: any) {\n    if (o === Object(o) && !Array.isArray(o) && typeof o !== 'function') {\n      const n = {};\n      Object.keys(o)\n        .forEach((k) => {\n          n[this.toCamelCase(k)] = this.snakeToCamelCase(o[k]);\n        });\n      return n;\n    } else if (Array.isArray(o)) {\n      return o.map((i) => {\n        return this.snakeToCamelCase(i);\n      });\n    }\n    return o;\n  }\n\n  camelToSnakeCase(o: any) {\n    if (o === Object(o) && !Array.isArray(o) && typeof o !== 'function') {\n      const n = {};\n      Object.keys(o)\n        .forEach((k) => {\n          n[this.ToSnakeCase(k)] = this.camelToSnakeCase(o[k]);\n        });\n      return n;\n    } else if (Array.isArray(o)) {\n      return o.map((i) => {\n        return this.camelToSnakeCase(i);\n      });\n    }\n    return o;\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class ValidationService {\n\n  public numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n\n  public decimalOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      if(charCode === 46){\n        return true;\n      }else{\n        return false;\n      }\n    }\n    return true;\n  }\n}\n"]}