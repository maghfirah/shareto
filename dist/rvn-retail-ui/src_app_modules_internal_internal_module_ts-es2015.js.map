{"version":3,"file":"src_app_modules_internal_internal_module_ts-es2015.js","mappings":"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","sources":["./src/app/modules/internal/internal-detail/internal-detail.component.ts","./src/app/modules/internal/internal-detail/internal-detail.component.html","./src/app/modules/internal/internal-list/internal-list.component.ts","./src/app/modules/internal/internal-list/internal-list.component.html","./src/app/modules/internal/internal.module.ts","./src/app/shared/enum/category-product.enum.ts","./src/app/shared/enum/decline-reason.enum.ts","./src/app/shared/enum/filter-status.enum.ts","./src/app/shared/models/validate-product.model.ts"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {ValidationService} from \"../../../shared/service/validation.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {User} from \"../../../shared/models/user.model\";\nimport {environment} from \"../../../../environments/environment\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {Product, Variant} from \"../../../shared/models/product.model\";\nimport {CategoryProduct} from \"../../../shared/enum/category-product.enum\";\nimport {ProductCondition} from \"../../../shared/enum/product-condition.enum\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport Swal from \"sweetalert2\";\nimport {ProductStatus} from \"../../../shared/enum/product-status.enum\";\nimport {DeclineReason} from \"../../../shared/enum/decline-reason.enum\";\nimport {ValidateProduct} from \"../../../shared/models/validate-product.model\";\nimport {CategoryInternal} from \"../../../shared/models/category-internal.model\";\n\n@Component({\n  selector: 'app-internal-detail',\n  templateUrl: './internal-detail.component.html',\n  styleUrls: ['./internal-detail.component.css']\n})\nexport class InternalDetailComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n      public validationService: ValidationService,\n      private modalService: NgbModal,\n      private router: Router,\n      private activatedRoute: ActivatedRoute,\n  )\n  { }\n\n  ngOnInit(): void {\n    this.pageName = 'edit';\n    this.initLoad();\n  }\n\n  //loading component\n  loading = true;\n\n  //image\n  fileData: any;\n  imageToUpload1:any;\n  imageToUpload2:any;\n  imageToUpload3:any;\n  previewImageProduct1: any;\n  previewImageProduct2: any;\n  previewImageProduct3: any;\n\n  user = new User();\n  listCategoryProduct : CategoryInternal[] = [];\n  private editProductForm: FormGroup;\n  productLinkRoot = environment.envUrl;\n  productLinkBusiness = \"\";\n  productLinkHost = \"\";\n  pageName : String = \"\";\n\n  private apiGetProductCategory = environment.apiUrl + APIConstant.INTERNAL + APIConstant.INTERNAL_CATEGORY;\n  private apiProduct = environment.apiUrl + APIConstant.INTERNAL+ APIConstant.PRODUCT;\n  productDetail : Product = new Product();\n  categoryDigitalGoods = CategoryProduct;\n  productCondition = ProductCondition;\n  declineReasonEnum = DeclineReason;\n  declineReason : string = null;\n  otherDeclineReasonText : string = \"\";\n\n  //get variable from add component (parent)\n  @Input() productUiId: string;\n\n  async initLoad(){\n    let product : Product = await this.getDetailProduct();\n    await this.getListCategoryProduct();\n    this.form(product);\n    this.user = this.requestService.getUserToken();\n    this.productLinkBusiness = product.merchantLink;\n    this.productLinkHost = this.productLinkRoot + '/' + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/' + this.productLinkBusiness + '/';\n  }\n\n  form(product:Product) {\n    this.editProductForm = this.formBuilder.group({\n      code: [product?.code, [Validators.required, Validators.pattern]],\n      name: [product?.name, [Validators.required, Validators.pattern]],\n      category: [product?.category, [Validators.required]],\n      digitalGoods: [null],\n      description: [product?.description, [Validators.required, Validators.pattern]],\n      link: [product?.link, [Validators.required, Validators.pattern]],\n      image1: [null],\n      uiId: [this.productUiId],\n      condition: [product?.condition, [Validators.required]],\n      variants: this.formBuilder.array(product.variants.map(variant => this.initVariantsProduct(variant)))\n    });\n  }\n\n  initVariantsProduct(variant: Variant) {\n    return this.formBuilder.group({\n      uiId: [variant.uiId, [Validators.required]],\n      color: [variant.color, [Validators.required, Validators.pattern]],\n      minimumOrder: [variant.minimumOrder, [Validators.required, Validators.pattern]],\n      length: [variant.length, [Validators.required, Validators.pattern]],\n      width: [variant.width, [Validators.required, Validators.pattern]],\n      height: [variant.height, [Validators.required, Validators.pattern]],\n      stock: [variant.stock, [Validators.required, Validators.pattern]],\n      price: [variant.price, [Validators.required, Validators.pattern, Validators.min(10000)]],\n      weight: [variant.weight, [Validators.required, Validators.pattern]],\n    });\n  }\n\n  getListCategoryProduct() {\n    this.requestService.get(this.apiGetProductCategory,null).subscribe(\n        (response) => {\n          this.listCategoryProduct = response;\n          this.loading = false;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  async getDetailProduct() {\n    let apiDetailProduct = this.apiProduct + '/' + this.productUiId + APIConstant.PRODUCT_DETAIL;\n\n    return this.requestService.get(apiDetailProduct,null).toPromise().then(\n        (response) => {\n          this.productDetail = this.apiModelTranslatorService.snakeToCamelCase(response);\n          this.productDetail.link = decodeURI(this.productDetail.link)\n          this.previewImageProduct1 = this.productDetail.images[0]?.url;\n          this.previewImageProduct2 = this.productDetail.images[1]?.url;\n          this.previewImageProduct3 = this.productDetail.images[2]?.url;\n          return this.productDetail;\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  submitEditProduct() {\n    if (this.editProductForm.valid) {\n      let encodedLink = encodeURI(this.editProductForm.get(\"link\").value);\n      this.editProductForm.patchValue({'link':encodedLink})\n\n      if(this.editProductForm.get('category').value === this.categoryDigitalGoods.DigitalGoods){\n        this.editProductForm.patchValue({'digitalGoods':true})\n      }else{\n        this.editProductForm.patchValue({'digitalGoods':false})\n      }\n\n      Swal.fire({\n        title: 'Ubah Produk?',\n        text: 'Informasi produk akan berubah dan ditampilkan ke website Pelanggan',\n        showCancelButton: true,\n        cancelButtonText: 'BATAL',\n        cancelButtonColor: '#666666',\n        reverseButtons: true,\n        confirmButtonColor: '#E1251B',\n        confirmButtonText: 'UBAH',\n        showLoaderOnConfirm: true,\n        customClass: {\n          title: 'swal2-title-modal-medium'\n        },\n        preConfirm: async () => {\n          this.requestService.put(this.apiProduct, null, this.apiModelTranslatorService.camelToSnakeCase(this.editProductForm.value))\n              .subscribe((res) => {\n\n                    this.router.navigate([NavigationConstant.ROUTING_INVENTORY]);\n                    this.alertService.setProps(\"Success! Edit Produk\", false);\n                  },\n                  (error) => {\n                    this.errorService.getErrorApi(error);\n                  });\n\n          // upload image product 1\n          if (this.imageToUpload1 !== null && this.imageToUpload1 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload1,\"0\");\n          }\n\n          //upload image product 2\n          if (this.imageToUpload2 !== null && this.imageToUpload2 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload2,\"1\");\n          }\n\n          //upload image product 3\n          if (this.imageToUpload3 !== null && this.imageToUpload3 !== undefined) {\n            await this.uploadImageProduct(this.productUiId, this.imageToUpload3,\"2\");\n          }\n        }\n      });\n    }\n  }\n\n  async uploadImageProduct(productUiId: string, file: File, index: string){\n    let apiSubmitProduct = environment.apiUrl + APIConstant.PRODUCT;\n    return this.requestService.uploadSingleFile(\"image\",apiSubmitProduct + '/' + productUiId + APIConstant.PRODUCT_IMAGES, file,index)\n        .toPromise().then((res) => {\n            },\n            (error) => {\n              this.errorService.getErrorApi(error);\n            });\n  }\n\n  changePage(pageName:String) {\n    this.pageName = pageName;\n  }\n\n  fileProgress(fileInput: any, name:string) {\n    this.fileData = <File>fileInput.target.files[0];\n    if(this.fileData !== undefined){\n      this.preview(name);\n    }\n  }\n\n  preview(name:string) {\n    let mimeType = this.fileData?.type;\n\n    let reader = new FileReader();\n    reader.readAsDataURL(this.fileData);\n\n    reader.onload = (_event) => {\n\n      let img = new Image();\n      img.src = reader.result as string;\n      img.onload = () => {\n        const height = img.naturalHeight;\n        const width = img.naturalWidth;\n        if(name === 'previewImageProduct1'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image1':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else{\n            this.previewImageProduct1 = reader.result;\n            this.imageToUpload1 = this.fileData;\n          }\n        }\n        else if(name === 'previewImageProduct2'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image2':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else {\n            this.previewImageProduct2 = reader.result;\n            this.imageToUpload2 = this.fileData;\n          }\n        }\n        else if(name === 'previewImageProduct3'){\n          if (mimeType.match('image.*') === null) {\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Failed Upload Type\", true);\n          }\n          else if(this.fileData.size > 1000000){\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Size more than 1 MB\", true);\n          }\n          else if(height < 300 || width < 300){\n            this.editProductForm.patchValue( {'image3':null} );\n            this.alertService.setProps(\"Dimension less than 300 x 300 pixels\", true);\n          }\n          else {\n            this.previewImageProduct3 = reader.result;\n            this.imageToUpload3 = this.fileData;\n          }\n        }\n      };\n\n    }\n  }\n\n  get variants() {\n    return this.editProductForm.get('variants') as FormArray;\n  }\n\n  inactiveVariant(variantUiId:string) {\n  }\n\n  validateDigitalGoods(){\n    this.variants.controls.forEach((element, index) => {\n      if(this.editProductForm.get('category').value === this.categoryDigitalGoods.DigitalGoods){\n        element.patchValue({'width':1});\n        element.patchValue({'height':1});\n        element.patchValue({'length':1});\n        element.patchValue({'weight':1});\n      }\n    })\n  }\n\n  openModalStatusProduct(idModal){\n    this.modalService.open(idModal, {backdrop: 'static', keyboard: false});\n  }\n\n  submitDeclineProduct(){\n    let notes = \"\";\n    if(this.declineReason === this.declineReasonEnum.Others){\n      notes = this.otherDeclineReasonText;\n    }else{\n      notes = this.declineReason;\n    }\n    this.validateProduct(notes, ProductStatus.REJECTED);\n    this.modalService.dismissAll();\n  }\n\n  submitApproveProduct(){\n    this.validateProduct(null, ProductStatus.APPROVED);\n    this.modalService.dismissAll();\n  }\n\n\n  validateProduct(notes:string, status:ProductStatus) {\n    let apiInternalValidate = this.apiProduct + '/' + this.productUiId + APIConstant.INTERNAL_VALIDATE;\n    let validateProduct = new ValidateProduct();\n    validateProduct.notes = notes;\n    validateProduct.status = ProductStatus.valueOf(status);\n    return this.requestService.post(apiInternalValidate,null, this.apiModelTranslatorService.camelToSnakeCase(validateProduct)).subscribe(\n        (response) => {\n          this.alertService.setProps(\"Success! Produk Status \" + status, false);\n          this.changePage('list')\n        }\n        ,\n        (error) => {\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n        <app-internal-list></app-internal-list>\n    </ng-container>\n\n    <!-- Inventory Data Internal -->\n    <ng-container *ngIf=\"pageName === 'edit'\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Detail Produk</h3>\n                <p>Approve atau Reject detail produk dari Merchant</p>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-md-6\">\n                        <form (ngSubmit)=\"submitEditProduct()\" [formGroup]=\"editProductForm\" class=\"pt-10\" id=\"editProductForm\">\n                            <div class=\"card-title px-3\"><h4>Informasi Produk</h4></div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col\"><h5>ID Produk</h5></div>\n                                <div class=\"col\"><input class=\"form-control dk-text-input\" formControlName=\"code\" id=\"code\" placeholder=\"Kode Produk\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\-\\\\/+,=_:'@%| ]*$\" readonly></div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('code').hasError('required') && (editProductForm.get('code').dirty || editProductForm.get('code').touched)\">*This field is cannot be left empty</div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('code').hasError('pattern')\">*This field is not valid input text</div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col\"><h5>Unggah Foto</h5></div>\n                                <div class=\"col\"><span>Picture upload is mandatory, maximum size is 1 MB. File must be .jpg or .png</span></div>\n\n\n                                <div class=\"row mt-3 px-3\">\n                                    <div class=\"col-12 col-md-4\">\n                                        <div class=\"form-group d-flex justify-content-center\">\n                                            <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                <label for=\"file-input1\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                    <div *ngIf=\"!previewImageProduct1\">\n                                                        <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                        <p>Pilih Gambar</p>\n                                                    </div>\n                                                    <div *ngIf=\"previewImageProduct1\">\n                                                        <img [src]=\"previewImageProduct1\" class=\"image-container\"/>\n                                                    </div>\n                                                </label>\n                                                <input id=\"file-input1\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct1')\" formControlName=\"image1\"/>\n                                            </div>\n                                        </div>\n                                        <div class=\"col text-danger\" *ngIf=\"editProductForm.get('image1').hasError('required') && (editProductForm.get('image1').dirty || editProductForm.get('image1').touched)\">*This field is cannot be left empty</div>\n                                    </div>\n                                    <div class=\"col-12 col-md-4\">\n                                        <div class=\"form-group d-flex justify-content-center\">\n                                            <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                <label for=\"file-input2\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                    <div *ngIf=\"!previewImageProduct2\">\n                                                        <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                        <p>Pilih Gambar</p>\n                                                    </div>\n                                                    <div *ngIf=\"previewImageProduct2\">\n                                                        <img [src]=\"previewImageProduct2\" class=\"image-container\"/>\n                                                    </div>\n                                                </label>\n                                                <input id=\"file-input2\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct2')\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-12 col-md-4\">\n                                        <div class=\"form-group d-flex justify-content-center\">\n                                            <div class=\"image-upload d-flex justify-content-center\" style=\"border-style: dashed; width: 220px; height: 220px;\">\n                                                <label for=\"file-input3\" style=\"margin-top: auto; margin-bottom: auto; cursor: pointer\">\n                                                    <div *ngIf=\"!previewImageProduct3\">\n                                                        <i class=\"fas fa-plus-circle text-primary\"></i>\n                                                        <p>Pilih Gambar</p>\n                                                    </div>\n                                                    <div *ngIf=\"previewImageProduct3\">\n                                                        <img [src]=\"previewImageProduct3\" class=\"image-container\"/>\n                                                    </div>\n                                                </label>\n                                                <input id=\"file-input3\" type=\"file\" name=\"image\" accept=\"image/png, image/jpg, image/jpeg\"  (change)=\"fileProgress($event, 'previewImageProduct3')\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col\"><h5>Nama Produk</h5></div>\n                                <div class=\"col\"><input class=\"form-control dk-text-input\" formControlName=\"name\" id=\"name\" placeholder=\"Nama Produk\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\"></div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('name').hasError('required') && (editProductForm.get('name').dirty || editProductForm.get('name').touched)\">*This field is cannot be left empty</div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('name').hasError('pattern')\">*This field is not valid input text</div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col\"><h5>Kategori</h5></div>\n                                <div class=\"col\">\n                                    <ng-select [multiple]=\"false\" (change)=\"validateDigitalGoods()\" formControlName=\"category\" id=\"category\">\n                                        <ng-option *ngFor=\"let categoryProduct of listCategoryProduct\" [value]=\"categoryProduct.name\">{{categoryProduct.name}}</ng-option>\n                                    </ng-select>\n                                </div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('category').hasError('required') && (editProductForm.get('category').dirty || editProductForm.get('category').touched)\">*This field is cannot be left empty</div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col\"><h5>Kondisi</h5></div>\n                                <div class=\"col\">\n                                    <input type=\"radio\" id=\"conditionNew\" [value]=productCondition.New formControlName=\"condition\">\n                                    <span style=\"margin-right: 50px\"> Baru</span>\n                                    <input type=\"radio\" id=\"conditionUsed\" [value]=productCondition.Used formControlName=\"condition\">\n                                    <span> Bekas</span>\n                                </div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('condition').hasError('required') && (editProductForm.get('condition').dirty || editProductForm.get('condition').touched)\">*This field is cannot be left empty</div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col\"><h5>Deskripsi Produk</h5></div>\n                                <div class=\"col\"><textarea class=\"form-control dk-text-input\" formControlName=\"description\" id=\"description\" placeholder=\"Deskripsi Produk\" required pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" rows=\"4\"></textarea></div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('description').hasError('required') && (editProductForm.get('description').dirty || editProductForm.get('description').touched)\">*This field is cannot be left empty</div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('description').hasError('pattern')\">*This field is not valid input text</div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col\"><h5>Tautan Produk</h5></div>\n                                <div class=\"col\">\n                                    <div class=\"input-group\">\n                                        <div class=\"input-group-append\">\n                                            <span class=\"input-group-text dk-span-group\" id=\"linkStore\">{{productLinkHost}}</span>\n                                        </div>\n                                        <input class=\"form-control dk-text-input\" formControlName=\"link\" id=\"link\" placeholder=\"Tautan-Produk\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%|-]*$\">\n                                    </div>\n                                </div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('link').hasError('required') && (editProductForm.get('link').dirty || editProductForm.get('link').touched)\">*This field is cannot be left empty</div>\n                                <div class=\"col text-danger\" *ngIf=\"editProductForm.get('link').hasError('pattern')\">*This field is not valid input text</div>\n                            </div>\n\n                            <div formArrayName=\"variants\">\n                                <div *ngFor=\"let variant of editProductForm.get('variants')['controls']; let i=index;\" [formGroupName]=\"i\">\n\n                                    <div class=\"form-group row\">\n                                        <div class=\"card-title px-3 col-6\" style=\"margin-top: 40px\"><h4>Varian Produk {{i+1}}</h4></div>\n                                        <button type=\"button\" disabled id=\"inactiveVariant- +  {{i}}\" class=\"btn btn-link col-6 text-right\" (click)=\"inactiveVariant(variant.get('uiId').value)\">\n                                            <i class=\"fa fa-minus in-icon\"></i> INACTIVE VARIAN\n                                        </button>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div class=\"col\"><h5>Varian</h5></div>\n                                        <div class=\"col\"><input class=\"form-control dk-text-input\" formControlName=\"color\" id=\"color- + {{i}}\" placeholder=\"Varian Produk\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\"></div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('color').hasError('required') && (variant.get('color').dirty || variant.get('color').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('color').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div class=\"col\"><h5>Stok</h5></div>\n                                        <div class=\"col\"><input class=\"form-control dk-text-input\" formControlName=\"stock\" id=\"stock- + {{i}}\" placeholder=\"1-9999\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\"></div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('stock').hasError('required') && (variant.get('stock').dirty || variant.get('stock').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('stock').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div class=\"col\"><h5>Harga Produk</h5></div>\n                                        <div class=\"col\">\n                                            <div class=\"input-group\">\n                                                <div class=\"input-group-append\">\n                                                    <span class=\"input-group-text dk-span-group\" id=\"currency\">Rp</span>\n                                                </div>\n                                                <input class=\"form-control dk-text-input\" formControlName=\"price\" id=\"price- + {{i}}\" placeholder=\"10000-99999999\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                            </div>\n                                            <small id=\"text_small\" class=\"form-text text-muted\">Harga minimum Rp 10.000</small>\n                                        </div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('price').hasError('required') && (variant.get('price').dirty || variant.get('price').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('price').hasError('pattern')\">*This field is not valid input text</div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('price').hasError('min')\">*This field is not valid input text</div>\n                                    </div>\n\n                                    <!-- If category product is Digital Goods Hide Berat dan Ukuran Product -->\n                                    <div class=\"form-group\" *ngIf=\"editProductForm.get('category').value !== categoryDigitalGoods.DigitalGoods\">\n                                        <div class=\"col\"><h5>Berat Produk</h5></div>\n                                        <div class=\"col\">\n                                            <div class=\"input-group\">\n                                                <input class=\"form-control dk-text-input\" formControlName=\"weight\" id=\"weight- + {{i}}\" placeholder=\"0.1-9999\" required type=\"text\" pattern=\"^[0-9]+(\\.[0-9]{1,2})?$\" (keypress)=\"validationService.decimalOnly($event)\">\n                                                <div class=\"input-group-append\">\n                                                    <span class=\"input-group-text dk-span-group\" id=\"unit\">Kilogram (kg)</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('weight').hasError('required') && (variant.get('weight').dirty || variant.get('weight').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('weight').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n\n                                    <!-- If category product is Digital Goods Hide Berat dan Ukuran Product -->\n                                    <div class=\"form-group\" *ngIf=\"editProductForm.get('category').value !== categoryDigitalGoods.DigitalGoods\">\n                                        <div class=\"col\"><h5>Ukuran Produk</h5></div>\n\n                                        <div class=\"row px-3\">\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"input-group\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"length\" id=\"length- + {{i}}\" placeholder=\"1-9999\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"input-group-append\">\n                                                        <span class=\"input-group-text dk-span-group\" id=\"lengthUnit\">cm</span>\n                                                    </div>\n                                                </div>\n                                                <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('required') && (variant.get('length').dirty || variant.get('length').touched)\">*This field is cannot be left empty</div>\n                                                <div class=\"text-danger\" *ngIf=\"variant.get('length').hasError('pattern')\">*This field is not valid input text</div>\n                                            </div>\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"input-group\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"width\" id=\"width- + {{i}}\" placeholder=\"1-9999\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"input-group-append\">\n                                                        <span class=\"input-group-text dk-span-group\" id=\"widthUnit\">cm</span>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col text-danger\" *ngIf=\"variant.get('width').hasError('required') && (variant.get('width').dirty || variant.get('width').touched)\">*This field is cannot be left empty</div>\n                                                <div class=\"col text-danger\" *ngIf=\"variant.get('width').hasError('pattern')\">*This field is not valid input text</div>\n                                            </div>\n                                            <div class=\"col-12 col-md-4\">\n                                                <div class=\"input-group\">\n                                                    <input class=\"form-control dk-text-input\" formControlName=\"height\" id=\"height- + {{i}}\" placeholder=\"1-9999\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\">\n                                                    <div class=\"input-group-append\">\n                                                        <span class=\"input-group-text dk-span-group\" id=\"heightUnit\">cm</span>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col text-danger\" *ngIf=\"variant.get('height').hasError('required') && (variant.get('height').dirty || variant.get('height').touched)\">*This field is cannot be left empty</div>\n                                                <div class=\"col text-danger\" *ngIf=\"variant.get('height').hasError('pattern')\">*This field is not valid input text</div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div class=\"col\"><h5>Minimal Pembelian</h5></div>\n                                        <div class=\"col\"><input class=\"form-control dk-text-input\" formControlName=\"minimumOrder\" id=\"minimumOrder- + {{i}}\" placeholder=\"1\" required type=\"text\" pattern=\"^[0-9]*$\" (keypress)=\"validationService.numberOnly($event)\"></div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('required') && (variant.get('minimumOrder').dirty || variant.get('minimumOrder').touched)\">*This field is cannot be left empty</div>\n                                        <div class=\"col text-danger\" *ngIf=\"variant.get('minimumOrder').hasError('pattern')\">*This field is not valid input text</div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <div class=\"d-flex bd-highlight mb-3 col\">\n\n                                <div class=\"mr-auto p-2 bd-highlight align-middle\">\n                                    <button (click)=\"changePage('list')\" id=\"backButton\" type=\"button\" class=\"btn btn-secondary ml-auto\">\n                                        <i class=\"fa fa-arrow-left in-icon\"></i> BATAL\n                                    </button>\n                                </div>\n\n                                <div class=\"p-2 bd-highlight align-middle\">\n                                    <button class=\"btn btn-secondary ml-auto\" id=\"btnDeclined\" type=\"button\" (click)=\"openModalStatusProduct(declineProduct)\">\n                                        TOLAK\n                                    </button>\n                                </div>\n\n                                <div class=\"p-2 bd-highlight align-middle\">\n                                    <button class=\"btn btn-primary ml-auto\" id=\"btnApprove\" (click)=\"openModalStatusProduct(approveProduct)\" type=\"button\">\n                                        SETUJUI\n                                    </button>\n                                </div>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n\n\n<!--Modal Approve Product-->\n<ng-template #approveProduct let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\"\n                         alt=\"\">\n                </div>\n                <div class=\"header-content\">\n                    <h4>Setujui Produk?</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            <div class=\"ml-4 mb-2\">\n                Pastikan produk yang akan disetujui sudah sesuai dengan syarat dan ketentuan yang berlaku di Jokul\n            </div>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"modal.close()\">BATAL</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitApproveProduct()\">SETUJUI</button>\n    </div>\n</ng-template>\n\n<!--Modal Decline Product-->\n<ng-template #declineProduct let-modal let-c=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n            <div class=\"event-icon d-flex\">\n                <div>\n                    <img src=\"https://cdn-dev.oss-ap-southeast-5.aliyuncs.com/doku-ui-framework/doku/img/modal-ornament/warning-icon.png\"\n                         alt=\"\">\n                </div>\n                <div class=\"header-content\">\n                    <h4>Tolak Produk?</h4>\n                </div>\n            </div>\n        </h5>\n\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"background\">\n            <div class=\"ml-4 mb-2\">\n                Apakah informasi yang ditampilkan tidak sesuai dengan syarat & ketentuan di Jokul?\n                <br>\n                Pilih alasan kenapa produk ini ditolak\n            </div>\n\n            <div class=\"form-check mb-2\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"declineReason\" [(ngModel)]=\"declineReason\" id=\"productTerlarang\" [value]=declineReasonEnum.Drugs>\n                <label class=\"form-check-label\" for=\"productTerlarang\">\n                    Produk yang dijual adalah produk terlarang\n                    <br>\n                    <span class=\"text\">(Obat-obatan terlarang, senjata tajam, dll)</span>\n                </label>\n            </div>\n            <div class=\"form-check mb-2\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"declineReason\" [(ngModel)]=\"declineReason\" id=\"maxStore\" [value]=declineReasonEnum.Capacity>\n                <label class=\"form-check-label\" for=\"maxStore\">\n                    Melebihi batas maksimal produk per toko\n                </label>\n            </div>\n            <div class=\"form-check mb-2\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"declineReason\" [(ngModel)]=\"declineReason\" id=\"expired\" [value]=declineReasonEnum.Expired>\n                <label class=\"form-check-label\" for=\"expired\">\n                    Produk telah kadaluwarsa\n                </label>\n            </div>\n            <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"declineReason\" [(ngModel)]=\"declineReason\" id=\"others\" [value]=declineReasonEnum.Others>\n                <label class=\"form-check-label\" for=\"others\">\n                    Alasan Lainnya\n                </label>\n            </div>\n\n            <div class=\"ml-4 mt-2 form-group\" *ngIf=\"declineReason === 'Others'\">\n                <textarea [(ngModel)]=\"otherDeclineReasonText\" class=\"form-control dk-text-area\" name=\"otherDeclineReasonText\" id=\"otherDeclineReasonText\" cols=\"30\" rows=\"4\" placeholder=\"Tulis alasan penolakan disini\"></textarea>\n            </div>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"modal.close()\">BATAL</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitDeclineProduct()\" [disabled]=\"declineReason === null || (declineReason === declineReasonEnum.Others && otherDeclineReasonText === '')\">TOLAK</button>\n    </div>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder} from \"@angular/forms\";\nimport {RequestService} from \"../../../shared/service/request.service\";\nimport {ApiModelTranslatorService} from \"../../../shared/service/api-model-translator.service\";\nimport {AlertService} from \"../../../shared/service/alert.service\";\nimport {ErrorService} from \"../../../shared/service/error.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {NavigationConstant} from \"../../../shared/constant/navigation.constant\";\nimport {User} from \"../../../shared/models/user.model\";\nimport {ResponseApi} from \"../../../shared/models/response-api.model\";\nimport {Product} from \"../../../shared/models/product.model\";\nimport {ProductStatus} from \"../../../shared/enum/product-status.enum\";\nimport {APIConstant} from \"../../../shared/constant/api.constant\";\nimport {ProductCondition} from \"../../../shared/enum/product-condition.enum\";\nimport {FilterStatus} from \"../../../shared/enum/filter-status.enum\";\n\n@Component({\n  selector: 'app-internal-list',\n  templateUrl: './internal-list.component.html',\n  styleUrls: ['./internal-list.component.css']\n})\nexport class InternalListComponent implements OnInit {\n\n  constructor(\n      private readonly formBuilder: FormBuilder,\n      private requestService: RequestService,\n      public apiModelTranslatorService: ApiModelTranslatorService,\n      private alertService: AlertService,\n      private errorService: ErrorService,\n  )\n  {}\n\n  async ngOnInit() {\n    await this.initLoad();\n    this.user = this.requestService.getUserToken();\n    this.productLinkRoot = environment.envUrl + \"/\" + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/';\n  }\n\n  //loading component\n  loading = true;\n  pageName : String = \"\";\n\n  //table pagination\n  page = 1;\n  pageSize = 5;\n  totalData = 0;\n  startData = 0;\n  endData = 0;\n\n  //filter field\n  filterProductName : string = null;\n  filterProductStatus : FilterStatus[] = [];\n  filterProductActive : boolean = null;\n  filterProductCategory : string = null;\n  filterProductLink : string = null;\n  filterProductCondition : ProductCondition = null;\n  filterProductStock : number = null;\n  filterChkWaiting : boolean = true;\n  filterChkActive : boolean = true;\n  filterChkNonActive : boolean = true;\n  filterChkRejected : boolean = true;\n  paginationSort : string = \"DESC\";\n\n  productUiId : string;\n  user = new User();\n  responseApi = new ResponseApi();\n  productList = new Array<Product>();\n  productStatusEnum = ProductStatus;\n\n  private apiInternalGetProduct = environment.apiUrl + APIConstant.INTERNAL_LIST;\n  productLinkRoot = environment.envUrl + \"/\" + NavigationConstant.ROUTING_RETAIL + '/' + NavigationConstant.ROUTING_MERCHANT + '/';\n\n  async initLoad(){\n    this.pageName = 'list';\n    this.getListInventory(this.page, this.pageSize, this.paginationSort, null, null, null, null, null, null);\n  }\n\n  getListInventory(page: number, pageSize: number, sort: string, productName: string, filters:FilterStatus[], category: string, link:string, condition:ProductCondition, stock: number) {\n    this.loading = true;\n    let requestParam = new Map();\n    requestParam.set('page', page-1);\n    requestParam.set('size', pageSize);\n    requestParam.set('sort', sort);\n\n    //filter nama produk\n    if(productName !== null && productName !== \"\"){\n      requestParam.set('name', productName);\n    }\n\n    //filter aktif produk\n    if(filters !== null){\n      requestParam.set('filters', filters);\n    }\n\n    this.requestService.get(this.apiInternalGetProduct, requestParam).subscribe(\n        (response) => {\n          this.productList = this.apiModelTranslatorService.snakeToCamelCase(response.products);\n          this.totalData = response.pageable.total_data;\n          this.startData = response.pageable.start_data;\n          this.endData = response.pageable.end_data;\n          this.loading = false;\n        }\n        ,\n        (error) => {\n          this.loading = false;\n          this.responseApi = error.error;\n          this.errorService.getErrorApi(error);\n        }\n    )\n  }\n\n  copyMessage(val: string){\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n    this.alertService.setProps(\"Product Link is already copied\", false);\n  }\n\n  onPageChange(page, pageSize: number) {\n    this.getListInventory(page, pageSize, this.paginationSort, this.filterProductName, this.filterProductStatus, this.filterProductCategory, this.filterProductLink, this.filterProductCondition, this.filterProductStock);\n  }\n\n  decodeURI(param: string){\n    return decodeURI(param);\n  }\n\n  findProduct(){\n    this.filterProductStatus = [];\n    let filterProduct : FilterStatus;\n\n    //product status aktif\n    if(this.filterChkActive === true){\n      filterProduct = FilterStatus.Active;\n      this.filterProductStatus.push(filterProduct);\n    }\n\n    //product status non aktif\n    if(this.filterChkNonActive === true){\n      filterProduct = FilterStatus.Inactive;\n      this.filterProductStatus.push(filterProduct);\n    }\n\n    //product status waiting\n    if(this.filterChkWaiting === true){\n      filterProduct = FilterStatus.Waiting;\n      this.filterProductStatus.push(filterProduct);\n    }\n\n    //product status reject\n    if(this.filterChkRejected === true){\n      filterProduct = FilterStatus.Rejected;\n      this.filterProductStatus.push(filterProduct);\n    }\n\n    this.getListInventory(this.page, this.pageSize, this.paginationSort, this.filterProductName, this.filterProductStatus, this.filterProductCategory, this.filterProductLink, this.filterProductCondition, this.filterProductStock);\n\n  }\n\n  changePage(pageName:string, productUiId:string){\n    if(pageName === 'edit'){\n      this.productUiId = productUiId;\n    }\n    this.pageName = pageName;\n  }\n}\n","<!-- Logic Loading if Not Complete -->\n<div *ngIf=\"loading else loaded\" >\n    <div class=\"center\">\n        <div class=\"spinner-border text-primary spinner-sm mr-5\" role=\"status\"></div>\n    </div>\n</div>\n\n<!-- Loading Complete -->\n<ng-template #loaded>\n\n    <!-- List Inventory -->\n    <ng-container *ngIf=\"pageName === 'list'\">\n\n        <!--Header-->\n        <div class=\"row\">\n            <div class=\"form-group col-md-12 page-header\">\n                <h3>Daftar Produk</h3>\n                <p>List daftar produk Merchant</p>\n            </div>\n        </div>\n\n        <!-- Internal List Inventory Data-->\n        <div class=\"card\">\n            <div class=\"card-body\">\n\n                <!-- Filter Row -->\n                <div class=\"row\">\n                    <div class=\"form-group col-md-3 page-header\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span class=\"font-weight-bold\">Nama Produk</span>\n                                <br>\n                                <input class=\"form-control dk-text-input mt-2\" id=\"productName\" placeholder=\"Cari nama produk\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" [(ngModel)]=\"filterProductName\">\n                            </div>\n                        </div>\n                    </div>\n<!--                    <div class=\"form-group col-md-3 page-header\">-->\n<!--                        <div class=\"row\">-->\n<!--                            <div class=\"col\">-->\n<!--                                <span>Nama Produk</span>-->\n<!--                                <br>-->\n<!--                                <input class=\"form-control dk-text-input mt-2\" id=\"name\" placeholder=\"Store Name\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" >-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                    <div class=\"form-group col-md-3 page-header\">-->\n<!--                        <div class=\"row\">-->\n<!--                            <div class=\"col\">-->\n<!--                                <span>Nama Produk</span>-->\n<!--                                <br>-->\n<!--                                <input class=\"form-control dk-text-input mt-2\" id=\"name\" placeholder=\"Store Name\" required type=\"text\" pattern=\"^[a-zA-Z0-9.\\\\-\\\\/+,=_:'@%| ]*$\" >-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </div>-->\n                    <div class=\"form-group col-md-9 page-header d-flex justify-content-end\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <br>\n                                <div class=\"row\">\n                                    <div class=\"col\">\n<!--                                        <button class=\"btn btn-link\" type=\"button\" id=\"submitEmail2\">LEBIH BANYAK</button>-->\n                                    </div>\n                                    <div class=\"col\">\n                                        <button class=\"btn btn-primary\" type=\"button\" id=\"btnProduct\" (click)=\"findProduct()\">CARI</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <span class=\"font-weight-bold\">Status</span>\n                        <br>\n                        <div class=\"form-check form-check-inline mt-2\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"waiting\" [(ngModel)]=\"filterChkWaiting\">\n                            <label class=\"form-check-label\" for=\"waiting\">{{productStatusEnum.WAITING}}</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"active\" [(ngModel)]=\"filterChkActive\">\n                            <label class=\"form-check-label\" for=\"active\">{{productStatusEnum.ACTIVE}}</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"nonactive\" [(ngModel)]=\"filterChkNonActive\">\n                            <label class=\"form-check-label\" for=\"nonactive\">{{productStatusEnum.NON_ACTIVE}}</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"reject\" [(ngModel)]=\"filterChkRejected\">\n                            <label class=\"form-check-label\" for=\"reject\">{{productStatusEnum.REJECTED}}</label>\n                        </div>\n                    </div>\n                </div>\n\n                <hr>\n\n                <table class=\"table table-responsive-sm table-striped\" style=\"table-layout: fixed\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Nama</th>\n                        <th scope=\"col\" style=\"width: 180px\">Harga(Rp)</th>\n                        <th scope=\"col\" style=\"width: 100px\">Stock</th>\n                        <th scope=\"col\">Tautan</th>\n                        <th scope=\"col\" style=\"width: 60px\"></th>\n                        <th scope=\"col\">Nama Toko</th>\n                        <th scope=\"col\" style=\"width: 150px\">Status</th>\n                    </tr>\n                    </thead>\n\n                    <tbody *ngIf=\"productList.length !== 0\">\n                    <tr *ngFor=\"let inventory of productList; let i = index\">\n                        <td id=\"{{'name-' + i}}\" class=\"align-middle text-ellipsis text-ellipsis-breakable\"> <img class=\"image-container\" [src]=\"inventory.images[0]?.url\"> {{ inventory.name}}</td>\n                        <td id=\"{{'price-' + i}}\" class=\"align-middle\">{{ inventory.price | currency:'Rp ':'symbol-narrow':'1.0'}}</td>\n                        <td id=\"{{'stock-' + i}}\" class=\"align-middle\">{{ inventory.stock }}</td>\n                        <td id=\"{{'link-' + i}}\" class=\"align-middle text-ellipsis text-ellipsis-breakable\">{{ productLinkRoot + decodeURI(inventory.merchant.link + '/' + inventory.link) }}</td>\n                        <td id=\"{{'copy-' + i}}\" class=\"align-middle\"><i class=\"far fa-copy\" style=\"cursor: pointer\" (click)=\"copyMessage(productLinkRoot + decodeURI(inventory.merchant.link + '/' + inventory.link))\"></i></td>\n                        <td id=\"{{'merchantName-' + i}}\" class=\"align-middle\">{{inventory.merchant.businessServiceClientName}}</td>\n                        <td id=\"{{'status-' + i}}\" class=\"align-middle\">\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.APPROVED\" class=\"badge badge-success\"> {{productStatusEnum.ACTIVE}} </span>\n                            <span *ngIf=\"inventory.active == false && productStatusEnum[inventory.status] == productStatusEnum.APPROVED\" class=\"badge badge-secondary\"> {{productStatusEnum.NON_ACTIVE}} </span>\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.WAITING\" class=\"badge badge-warning pointer-cursor\" (click)=\"changePage('edit', inventory.uiId)\"> {{productStatusEnum.WAITING}} </span>\n                            <span *ngIf=\"inventory.active == true && productStatusEnum[inventory.status] == productStatusEnum.REJECTED\" class=\"badge badge-danger\"> {{productStatusEnum.REJECTED}} </span>\n                        </td>\n                    </tr>\n                    </tbody>\n\n                </table>\n\n                <div *ngIf=\"productList.length === 0\" style=\"margin-top: 100px; margin-bottom: 100px\">\n                    <div class=\"d-flex justify-content-center\" style=\"margin-bottom: 20px\">\n                        <i class=\"fas fa-search fa-8x\"></i>\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <h4>Maaf, belum ada Produk</h4>\n                    </div>\n                </div>\n\n                <div class=\"d-flex bd-highlight mb-3\">\n                    <select class=\"custom-select mr-auto bd-highlight align-middle\" style=\"width: auto\" [(ngModel)]=\"pageSize\" (ngModelChange)=\"onPageChange(page,pageSize)\">\n                        <option [ngValue]=\"5\">5 items per page</option>\n                        <option [ngValue]=\"10\">10 items per page</option>\n                        <option [ngValue]=\"15\">15 items per page</option>\n                    </select>\n                    <p class=\"card-description p-2 bd-highlight align-middle\">Showing {{startData}} to {{endData}} from {{totalData}} entries</p>\n                    <ngb-pagination class=\"p-2 bd-highlight align-middle\" [(page)]=\"page\" [pageSize]=\"pageSize\" [collectionSize]=\"totalData\" (pageChange)=\"onPageChange($event,pageSize)\" [maxSize]=\"2\"></ngb-pagination>\n                </div>\n\n            </div>\n        </div>\n\n    </ng-container>\n\n    <!-- Detail/Edit Inventory-->\n    <ng-container *ngIf=\"pageName === 'edit'\">\n        <app-internal-detail [productUiId]='productUiId'></app-internal-detail>\n    </ng-container>\n\n</ng-template>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InternalListComponent} from './internal-list/internal-list.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgbDropdownModule, NgbPaginationModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {NgSelectModule} from \"@ng-select/ng-select\";\nimport {NavigationConstant} from \"../../shared/constant/navigation.constant\";\nimport {InternalDetailComponent} from './internal-detail/internal-detail.component';\n\nconst routes: Routes = [\n  {\n    path:NavigationConstant.ROUTING_INTERNAL_LIST,\n    component: InternalListComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [InternalListComponent, InternalDetailComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbPaginationModule,\n    FormsModule,\n    NgbDropdownModule,\n    NgSelectModule,\n    ReactiveFormsModule\n  ]\n})\nexport class InternalModule { }\n","export enum CategoryProduct {\n    DigitalGoods = 'Digital Goods',\n}\n","export enum DeclineReason {\n    Others = 'Others',\n    Drugs = 'Produk yang dijual adalah produk terlarang',\n    Capacity = 'Melebihi batas maksimal produk per toko',\n    Expired = 'Produk telah kadaluwarsa',\n}\n","export enum FilterStatus {\n    Active = 'ACTIVE',\n    Inactive = 'INACTIVE',\n    Rejected = 'REJECTED',\n    Waiting = 'WAITING',\n}\n","export class ValidateProduct {\n    notes: string;\n    status: string;\n}\n"],"names":[],"sourceRoot":"webpack:///"}